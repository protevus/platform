version: "3.8"

services:
  postgres:
    build:
      context: devops/docker/services/uncategorized/postgres
      args:
        VERSION: 14
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_INITDB_ARGS
      - POSTGRES_INITDB_WALDIR
      - POSTGRES_HOST_AUTH_METHOD
      - PGDATA
    volumes:
      - data:/var/lib/postgresql/data
      - backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: [pg_isready, -U, postgres]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - dev_network
    # Service-specific configuration
    # max_connections: 100
    # shared_buffers: 256MB
  redis:
    build:
      context: devops/docker/services/uncategorized/redis
      args:
        VERSION: 6.2
    container_name: redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD
      - REDIS_DATABASES
      - REDIS_MAX_MEMORY
      - REDIS_MAX_MEMORY_POLICY
      - REDIS_MAX_MEMORY_SAMPLES
      - REDIS_ACTIVE_DEFRAG
      - REDIS_APPEND_ONLY
      - REDIS_SAVE_INTERVALS
      - REDIS_NOTIFY_KEYSPACE_EVENTS
      - REDIS_SLOWLOG_LOG_SLOWER_THAN
      - REDIS_SLOWLOG_MAX_LEN
      - REDIS_LATENCY_MONITOR_THRESHOLD
      - REDIS_LAZYFREE_LAZY_EVICTION
      - REDIS_LAZYFREE_LAZY_EXPIRE
      - TZ
    volumes:
      - data:/data
      - backups:/backups
      - logs:/var/log/redis
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - dev_network
    # Service-specific configuration
    # maxmemory: 256mb
    # maxmemory_policy: allkeys-lru
  test-redis:
    build:
      context: devops/docker/services/caching/test-redis
      args:
        VERSION: latest
    container_name: test-redis
    restart: unless-stopped
    healthcheck:
      test: exit 0
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - dev_network

networks:
  dev_network:
    driver: bridge

volumes:
  data:
    driver: local
  backups:
    driver: local
  logs:
    driver: local
