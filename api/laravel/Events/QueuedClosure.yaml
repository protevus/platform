name: QueuedClosure
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: SerializableClosure
  type: class
  source: Laravel\SerializableClosure\SerializableClosure
properties:
- name: closure
  visibility: public
  comment: '# * The underlying Closure.

    # *

    # * @var \Closure'
- name: connection
  visibility: public
  comment: '# * The name of the connection the job should be sent to.

    # *

    # * @var string|null'
- name: queue
  visibility: public
  comment: '# * The name of the queue the job should be sent to.

    # *

    # * @var string|null'
- name: delay
  visibility: public
  comment: '# * The number of seconds before the job should be made available.

    # *

    # * @var \DateTimeInterface|\DateInterval|int|null'
- name: catchCallbacks
  visibility: public
  comment: '# * All of the "catch" callbacks for the queued closure.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: closure
  comment: "# * The underlying Closure.\n# *\n# * @var \\Closure\n# */\n# public $closure;\n\
    # \n# /**\n# * The name of the connection the job should be sent to.\n# *\n# *\
    \ @var string|null\n# */\n# public $connection;\n# \n# /**\n# * The name of the\
    \ queue the job should be sent to.\n# *\n# * @var string|null\n# */\n# public\
    \ $queue;\n# \n# /**\n# * The number of seconds before the job should be made\
    \ available.\n# *\n# * @var \\DateTimeInterface|\\DateInterval|int|null\n# */\n\
    # public $delay;\n# \n# /**\n# * All of the \"catch\" callbacks for the queued\
    \ closure.\n# *\n# * @var array\n# */\n# public $catchCallbacks = [];\n# \n# /**\n\
    # * Create a new queued closure event listener resolver.\n# *\n# * @param  \\\
    Closure  $closure\n# * @return void"
- name: onConnection
  visibility: public
  parameters:
  - name: connection
  comment: '# * Set the desired connection for the job.

    # *

    # * @param  string|null  $connection

    # * @return $this'
- name: onQueue
  visibility: public
  parameters:
  - name: queue
  comment: '# * Set the desired queue for the job.

    # *

    # * @param  string|null  $queue

    # * @return $this'
- name: delay
  visibility: public
  parameters:
  - name: delay
  comment: '# * Set the desired delay in seconds for the job.

    # *

    # * @param  \DateTimeInterface|\DateInterval|int|null  $delay

    # * @return $this'
- name: catch
  visibility: public
  parameters:
  - name: closure
  comment: '# * Specify a callback that should be invoked if the queued listener job
    fails.

    # *

    # * @param  \Closure  $closure

    # * @return $this'
- name: resolve
  visibility: public
  parameters: []
  comment: '# * Resolve the actual event listener callback.

    # *

    # * @return \Closure'
traits:
- Closure
- Laravel\SerializableClosure\SerializableClosure
interfaces: []
