name: MigrationGeneratorCommand
class_comment: null
dependencies:
- name: Filesystem
  type: class
  source: Illuminate\Filesystem\Filesystem
properties:
- name: files
  visibility: protected
  comment: '# * The filesystem instance.

    # *

    # * @var \Illuminate\Filesystem\Filesystem'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: files
  comment: "# * The filesystem instance.\n# *\n# * @var \\Illuminate\\Filesystem\\\
    Filesystem\n# */\n# protected $files;\n# \n# /**\n# * Create a new migration generator\
    \ command instance.\n# *\n# * @param  \\Illuminate\\Filesystem\\Filesystem  $files\n\
    # * @return void"
- name: handle
  visibility: public
  parameters: []
  comment: "# * Get the migration table name.\n# *\n# * @return string\n# */\n# abstract\
    \ protected function migrationTableName();\n# \n# /**\n# * Get the path to the\
    \ migration stub file.\n# *\n# * @return string\n# */\n# abstract protected function\
    \ migrationStubFile();\n# \n# /**\n# * Execute the console command.\n# *\n# *\
    \ @return int"
- name: createBaseMigration
  visibility: protected
  parameters:
  - name: table
  comment: '# * Create a base migration file for the table.

    # *

    # * @param  string  $table

    # * @return string'
- name: replaceMigrationPlaceholders
  visibility: protected
  parameters:
  - name: path
  - name: table
  comment: '# * Replace the placeholders in the generated migration file.

    # *

    # * @param  string  $path

    # * @param  string  $table

    # * @return void'
- name: migrationExists
  visibility: protected
  parameters:
  - name: table
  comment: '# * Determine whether a migration for the table already exists.

    # *

    # * @param  string  $table

    # * @return bool'
traits:
- Illuminate\Filesystem\Filesystem
interfaces: []
