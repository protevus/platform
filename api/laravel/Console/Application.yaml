name: Application
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: ArtisanStarting
  type: class
  source: Illuminate\Console\Events\ArtisanStarting
- name: ApplicationContract
  type: class
  source: Illuminate\Contracts\Console\Application
- name: Container
  type: class
  source: Illuminate\Contracts\Container\Container
- name: Dispatcher
  type: class
  source: Illuminate\Contracts\Events\Dispatcher
- name: ProcessUtils
  type: class
  source: Illuminate\Support\ProcessUtils
- name: SymfonyApplication
  type: class
  source: Symfony\Component\Console\Application
- name: SymfonyCommand
  type: class
  source: Symfony\Component\Console\Command\Command
- name: CommandNotFoundException
  type: class
  source: Symfony\Component\Console\Exception\CommandNotFoundException
- name: ArrayInput
  type: class
  source: Symfony\Component\Console\Input\ArrayInput
- name: InputDefinition
  type: class
  source: Symfony\Component\Console\Input\InputDefinition
- name: InputOption
  type: class
  source: Symfony\Component\Console\Input\InputOption
- name: StringInput
  type: class
  source: Symfony\Component\Console\Input\StringInput
- name: BufferedOutput
  type: class
  source: Symfony\Component\Console\Output\BufferedOutput
- name: PhpExecutableFinder
  type: class
  source: Symfony\Component\Process\PhpExecutableFinder
properties:
- name: laravel
  visibility: protected
  comment: '# * The Laravel application instance.

    # *

    # * @var \Illuminate\Contracts\Container\Container'
- name: events
  visibility: protected
  comment: '# * The event dispatcher instance.

    # *

    # * @var \Illuminate\Contracts\Events\Dispatcher'
- name: lastOutput
  visibility: protected
  comment: '# * The output from the previous command.

    # *

    # * @var \Symfony\Component\Console\Output\BufferedOutput'
- name: bootstrappers
  visibility: protected
  comment: '# * The console application bootstrappers.

    # *

    # * @var array'
- name: commandMap
  visibility: protected
  comment: '# * A map of command names to classes.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: laravel
  - name: events
  - name: version
  comment: "# * The Laravel application instance.\n# *\n# * @var \\Illuminate\\Contracts\\\
    Container\\Container\n# */\n# protected $laravel;\n# \n# /**\n# * The event dispatcher\
    \ instance.\n# *\n# * @var \\Illuminate\\Contracts\\Events\\Dispatcher\n# */\n\
    # protected $events;\n# \n# /**\n# * The output from the previous command.\n#\
    \ *\n# * @var \\Symfony\\Component\\Console\\Output\\BufferedOutput\n# */\n# protected\
    \ $lastOutput;\n# \n# /**\n# * The console application bootstrappers.\n# *\n#\
    \ * @var array\n# */\n# protected static $bootstrappers = [];\n# \n# /**\n# *\
    \ A map of command names to classes.\n# *\n# * @var array\n# */\n# protected $commandMap\
    \ = [];\n# \n# /**\n# * Create a new Artisan console application.\n# *\n# * @param\
    \  \\Illuminate\\Contracts\\Container\\Container  $laravel\n# * @param  \\Illuminate\\\
    Contracts\\Events\\Dispatcher  $events\n# * @param  string  $version\n# * @return\
    \ void"
- name: phpBinary
  visibility: public
  parameters: []
  comment: '# * Determine the proper PHP executable.

    # *

    # * @return string'
- name: artisanBinary
  visibility: public
  parameters: []
  comment: '# * Determine the proper Artisan executable.

    # *

    # * @return string'
- name: formatCommandString
  visibility: public
  parameters:
  - name: string
  comment: '# * Format the given command as a fully-qualified executable command.

    # *

    # * @param  string  $string

    # * @return string'
- name: starting
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a console "starting" bootstrapper.

    # *

    # * @param  \Closure  $callback

    # * @return void'
- name: bootstrap
  visibility: protected
  parameters: []
  comment: '# * Bootstrap the console application.

    # *

    # * @return void'
- name: forgetBootstrappers
  visibility: public
  parameters: []
  comment: '# * Clear the console application bootstrappers.

    # *

    # * @return void'
- name: call
  visibility: public
  parameters:
  - name: command
  - name: parameters
    default: '[]'
  - name: outputBuffer
    default: 'null'
  comment: '# * Run an Artisan console command by name.

    # *

    # * @param  string  $command

    # * @param  array  $parameters

    # * @param  \Symfony\Component\Console\Output\OutputInterface|null  $outputBuffer

    # * @return int

    # *

    # * @throws \Symfony\Component\Console\Exception\CommandNotFoundException'
- name: parseCommand
  visibility: protected
  parameters:
  - name: command
  - name: parameters
  comment: '# * Parse the incoming Artisan command and its input.

    # *

    # * @param  string  $command

    # * @param  array  $parameters

    # * @return array'
- name: output
  visibility: public
  parameters: []
  comment: '# * Get the output for the last run command.

    # *

    # * @return string'
- name: addToParent
  visibility: protected
  parameters:
  - name: command
  comment: "# * Add a command to the console.\n# *\n# * @param  \\Symfony\\Component\\\
    Console\\Command\\Command  $command\n# * @return \\Symfony\\Component\\Console\\\
    Command\\Command|null\n# */\n# #[\\Override]\n# public function add(SymfonyCommand\
    \ $command): ?SymfonyCommand\n# {\n# if ($command instanceof Command) {\n# $command->setLaravel($this->laravel);\n\
    # }\n# \n# return $this->addToParent($command);\n# }\n# \n# /**\n# * Add the command\
    \ to the parent instance.\n# *\n# * @param  \\Symfony\\Component\\Console\\Command\\\
    Command  $command\n# * @return \\Symfony\\Component\\Console\\Command\\Command"
- name: resolve
  visibility: public
  parameters:
  - name: command
  comment: '# * Add a command, resolving through the application.

    # *

    # * @param  \Illuminate\Console\Command|string  $command

    # * @return \Symfony\Component\Console\Command\Command|null'
- name: resolveCommands
  visibility: public
  parameters:
  - name: commands
  comment: '# * Resolve an array of commands through the application.

    # *

    # * @param  array|mixed  $commands

    # * @return $this'
- name: setContainerCommandLoader
  visibility: public
  parameters: []
  comment: '# * Set the container command loader for lazy resolution.

    # *

    # * @return $this'
- name: getEnvironmentOption
  visibility: protected
  parameters: []
  comment: "# * Get the default input definition for the application.\n# *\n# * This\
    \ is used to add the --env option to every available command.\n# *\n# * @return\
    \ \\Symfony\\Component\\Console\\Input\\InputDefinition\n# */\n# #[\\Override]\n\
    # protected function getDefaultInputDefinition(): InputDefinition\n# {\n# return\
    \ tap(parent::getDefaultInputDefinition(), function ($definition) {\n# $definition->addOption($this->getEnvironmentOption());\n\
    # });\n# }\n# \n# /**\n# * Get the global environment option for the definition.\n\
    # *\n# * @return \\Symfony\\Component\\Console\\Input\\InputOption"
- name: getLaravel
  visibility: public
  parameters: []
  comment: '# * Get the Laravel application instance.

    # *

    # * @return \Illuminate\Contracts\Foundation\Application'
traits:
- Closure
- Illuminate\Console\Events\ArtisanStarting
- Illuminate\Contracts\Container\Container
- Illuminate\Contracts\Events\Dispatcher
- Illuminate\Support\ProcessUtils
- Symfony\Component\Console\Exception\CommandNotFoundException
- Symfony\Component\Console\Input\ArrayInput
- Symfony\Component\Console\Input\InputDefinition
- Symfony\Component\Console\Input\InputOption
- Symfony\Component\Console\Input\StringInput
- Symfony\Component\Console\Output\BufferedOutput
- Symfony\Component\Process\PhpExecutableFinder
interfaces:
- ApplicationContract
