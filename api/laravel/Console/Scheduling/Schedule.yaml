name: Schedule
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: DateTimeInterface
  type: class
  source: DateTimeInterface
- name: UniqueLock
  type: class
  source: Illuminate\Bus\UniqueLock
- name: Application
  type: class
  source: Illuminate\Console\Application
- name: Container
  type: class
  source: Illuminate\Container\Container
- name: Dispatcher
  type: class
  source: Illuminate\Contracts\Bus\Dispatcher
- name: Cache
  type: class
  source: Illuminate\Contracts\Cache\Repository
- name: BindingResolutionException
  type: class
  source: Illuminate\Contracts\Container\BindingResolutionException
- name: ShouldBeUnique
  type: class
  source: Illuminate\Contracts\Queue\ShouldBeUnique
- name: ShouldQueue
  type: class
  source: Illuminate\Contracts\Queue\ShouldQueue
- name: CallQueuedClosure
  type: class
  source: Illuminate\Queue\CallQueuedClosure
- name: ProcessUtils
  type: class
  source: Illuminate\Support\ProcessUtils
- name: Macroable
  type: class
  source: Illuminate\Support\Traits\Macroable
- name: RuntimeException
  type: class
  source: RuntimeException
- name: Macroable
  type: class
  source: Macroable
properties:
- name: events
  visibility: protected
  comment: '# * All of the events on the schedule.

    # *

    # * @var \Illuminate\Console\Scheduling\Event[]'
- name: eventMutex
  visibility: protected
  comment: '# * The event mutex implementation.

    # *

    # * @var \Illuminate\Console\Scheduling\EventMutex'
- name: schedulingMutex
  visibility: protected
  comment: '# * The scheduling mutex implementation.

    # *

    # * @var \Illuminate\Console\Scheduling\SchedulingMutex'
- name: timezone
  visibility: protected
  comment: '# * The timezone the date should be evaluated on.

    # *

    # * @var \DateTimeZone|string'
- name: dispatcher
  visibility: protected
  comment: '# * The job dispatcher implementation.

    # *

    # * @var \Illuminate\Contracts\Bus\Dispatcher'
- name: mutexCache
  visibility: protected
  comment: '# * The cache of mutex results.

    # *

    # * @var array<string, bool>'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: timezone
    default: 'null'
  comment: "# * All of the events on the schedule.\n# *\n# * @var \\Illuminate\\Console\\\
    Scheduling\\Event[]\n# */\n# protected $events = [];\n# \n# /**\n# * The event\
    \ mutex implementation.\n# *\n# * @var \\Illuminate\\Console\\Scheduling\\EventMutex\n\
    # */\n# protected $eventMutex;\n# \n# /**\n# * The scheduling mutex implementation.\n\
    # *\n# * @var \\Illuminate\\Console\\Scheduling\\SchedulingMutex\n# */\n# protected\
    \ $schedulingMutex;\n# \n# /**\n# * The timezone the date should be evaluated\
    \ on.\n# *\n# * @var \\DateTimeZone|string\n# */\n# protected $timezone;\n# \n\
    # /**\n# * The job dispatcher implementation.\n# *\n# * @var \\Illuminate\\Contracts\\\
    Bus\\Dispatcher\n# */\n# protected $dispatcher;\n# \n# /**\n# * The cache of mutex\
    \ results.\n# *\n# * @var array<string, bool>\n# */\n# protected $mutexCache =\
    \ [];\n# \n# /**\n# * Create a new schedule instance.\n# *\n# * @param  \\DateTimeZone|string|null\
    \  $timezone\n# * @return void\n# *\n# * @throws \\RuntimeException"
- name: call
  visibility: public
  parameters:
  - name: callback
  - name: parameters
    default: '[]'
  comment: '# * Add a new callback event to the schedule.

    # *

    # * @param  string|callable  $callback

    # * @param  array  $parameters

    # * @return \Illuminate\Console\Scheduling\CallbackEvent'
- name: command
  visibility: public
  parameters:
  - name: command
  - name: parameters
    default: '[]'
  comment: '# * Add a new Artisan command event to the schedule.

    # *

    # * @param  string  $command

    # * @param  array  $parameters

    # * @return \Illuminate\Console\Scheduling\Event'
- name: job
  visibility: public
  parameters:
  - name: job
  - name: queue
    default: 'null'
  - name: connection
    default: 'null'
  comment: '# * Add a new job callback event to the schedule.

    # *

    # * @param  object|string  $job

    # * @param  string|null  $queue

    # * @param  string|null  $connection

    # * @return \Illuminate\Console\Scheduling\CallbackEvent'
- name: dispatchToQueue
  visibility: protected
  parameters:
  - name: job
  - name: queue
  - name: connection
  comment: '# * Dispatch the given job to the queue.

    # *

    # * @param  object  $job

    # * @param  string|null  $queue

    # * @param  string|null  $connection

    # * @return void

    # *

    # * @throws \RuntimeException'
- name: dispatchUniqueJobToQueue
  visibility: protected
  parameters:
  - name: job
  - name: queue
  - name: connection
  comment: '# * Dispatch the given unique job to the queue.

    # *

    # * @param  object  $job

    # * @param  string|null  $queue

    # * @param  string|null  $connection

    # * @return void

    # *

    # * @throws \RuntimeException'
- name: dispatchNow
  visibility: protected
  parameters:
  - name: job
  comment: '# * Dispatch the given job right now.

    # *

    # * @param  object  $job

    # * @return void'
- name: exec
  visibility: public
  parameters:
  - name: command
  - name: parameters
    default: '[]'
  comment: '# * Add a new command event to the schedule.

    # *

    # * @param  string  $command

    # * @param  array  $parameters

    # * @return \Illuminate\Console\Scheduling\Event'
- name: compileParameters
  visibility: protected
  parameters:
  - name: parameters
  comment: '# * Compile parameters for a command.

    # *

    # * @param  array  $parameters

    # * @return string'
- name: compileArrayInput
  visibility: public
  parameters:
  - name: key
  - name: value
  comment: '# * Compile array input for a command.

    # *

    # * @param  string|int  $key

    # * @param  array  $value

    # * @return string'
- name: serverShouldRun
  visibility: public
  parameters:
  - name: event
  - name: time
  comment: '# * Determine if the server is allowed to run this event.

    # *

    # * @param  \Illuminate\Console\Scheduling\Event  $event

    # * @param  \DateTimeInterface  $time

    # * @return bool'
- name: dueEvents
  visibility: public
  parameters:
  - name: app
  comment: '# * Get all of the events on the schedule that are due.

    # *

    # * @param  \Illuminate\Contracts\Foundation\Application  $app

    # * @return \Illuminate\Support\Collection'
- name: events
  visibility: public
  parameters: []
  comment: '# * Get all of the events on the schedule.

    # *

    # * @return \Illuminate\Console\Scheduling\Event[]'
- name: useCache
  visibility: public
  parameters:
  - name: store
  comment: '# * Specify the cache store that should be used to store mutexes.

    # *

    # * @param  string  $store

    # * @return $this'
- name: getDispatcher
  visibility: protected
  parameters: []
  comment: '# * Get the job dispatcher, if available.

    # *

    # * @return \Illuminate\Contracts\Bus\Dispatcher

    # *

    # * @throws \RuntimeException'
traits:
- Closure
- DateTimeInterface
- Illuminate\Bus\UniqueLock
- Illuminate\Console\Application
- Illuminate\Container\Container
- Illuminate\Contracts\Bus\Dispatcher
- Illuminate\Contracts\Container\BindingResolutionException
- Illuminate\Contracts\Queue\ShouldBeUnique
- Illuminate\Contracts\Queue\ShouldQueue
- Illuminate\Queue\CallQueuedClosure
- Illuminate\Support\ProcessUtils
- Illuminate\Support\Traits\Macroable
- RuntimeException
- Macroable
interfaces: []
