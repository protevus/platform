name: BladeMapper
class_comment: null
dependencies:
- name: Factory
  type: class
  source: Illuminate\Contracts\View\Factory
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: Collection
  type: class
  source: Illuminate\Support\Collection
- name: BladeCompiler
  type: class
  source: Illuminate\View\Compilers\BladeCompiler
- name: ViewException
  type: class
  source: Illuminate\View\ViewException
- name: ReflectionClass
  type: class
  source: ReflectionClass
- name: ReflectionProperty
  type: class
  source: ReflectionProperty
- name: FlattenException
  type: class
  source: Symfony\Component\ErrorHandler\Exception\FlattenException
- name: Throwable
  type: class
  source: Throwable
properties:
- name: factory
  visibility: protected
  comment: '# * The view factory instance.

    # *

    # * @var \Illuminate\Contracts\View\Factory'
- name: bladeCompiler
  visibility: protected
  comment: '# * The Blade compiler instance.

    # *

    # * @var \Illuminate\View\Compilers\BladeCompiler'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: factory
  - name: bladeCompiler
  comment: "# * The view factory instance.\n# *\n# * @var \\Illuminate\\Contracts\\\
    View\\Factory\n# */\n# protected $factory;\n# \n# /**\n# * The Blade compiler\
    \ instance.\n# *\n# * @var \\Illuminate\\View\\Compilers\\BladeCompiler\n# */\n\
    # protected $bladeCompiler;\n# \n# /**\n# * Create a new Blade mapper instance.\n\
    # *\n# * @param  \\Illuminate\\Contracts\\View\\Factory  $factory\n# * @param\
    \  \\Illuminate\\View\\Compilers\\BladeCompiler  $bladeCompiler\n# * @return void"
- name: map
  visibility: public
  parameters:
  - name: exception
  comment: '# * Map cached view paths to their original paths.

    # *

    # * @param  \Symfony\Component\ErrorHandler\Exception\FlattenException  $exception

    # * @return \Symfony\Component\ErrorHandler\Exception\FlattenException'
- name: findCompiledView
  visibility: protected
  parameters:
  - name: compiledPath
  comment: '# * Find the compiled view file for the given compiled path.

    # *

    # * @param  string  $compiledPath

    # * @return string|null'
- name: getKnownPaths
  visibility: protected
  parameters: []
  comment: '# * Get the list of known paths from the compiler engine.

    # *

    # * @return array<string, string>'
- name: filterViewData
  visibility: protected
  parameters:
  - name: data
  comment: '# * Filter out the view data that should not be shown in the exception
    report.

    # *

    # * @param  array<string, mixed>  $data

    # * @return array<string, mixed>'
- name: detectLineNumber
  visibility: protected
  parameters:
  - name: filename
  - name: compiledLineNumber
  comment: '# * Detect the line number in the original blade file.

    # *

    # * @param  string  $filename

    # * @param  int  $compiledLineNumber

    # * @return int'
- name: compileSourcemap
  visibility: protected
  parameters:
  - name: value
  comment: '# * Compile the source map for the given blade file.

    # *

    # * @param  string  $value

    # * @return string'
- name: addEchoLineNumbers
  visibility: protected
  parameters:
  - name: value
  comment: '# * Add line numbers to echo statements.

    # *

    # * @param  string  $value

    # * @return string'
- name: addStatementLineNumbers
  visibility: protected
  parameters:
  - name: value
  comment: '# * Add line numbers to blade statements.

    # *

    # * @param  string  $value

    # * @return string'
- name: addBladeComponentLineNumbers
  visibility: protected
  parameters:
  - name: value
  comment: '# * Add line numbers to blade components.

    # *

    # * @param  string  $value

    # * @return string'
- name: insertLineNumberAtPosition
  visibility: protected
  parameters:
  - name: position
  - name: value
  comment: '# * Insert a line number at the given position.

    # *

    # * @param  int  $position

    # * @param  string  $value

    # * @return string'
- name: trimEmptyLines
  visibility: protected
  parameters:
  - name: value
  comment: '# * Trim empty lines from the given value.

    # *

    # * @param  string  $value

    # * @return string'
- name: findClosestLineNumberMapping
  visibility: protected
  parameters:
  - name: map
  - name: compiledLineNumber
  comment: '# * Find the closest line number mapping in the given source map.

    # *

    # * @param  string  $map

    # * @param  int  $compiledLineNumber

    # * @return int'
traits:
- Illuminate\Contracts\View\Factory
- Illuminate\Support\Arr
- Illuminate\Support\Collection
- Illuminate\View\Compilers\BladeCompiler
- Illuminate\View\ViewException
- ReflectionClass
- ReflectionProperty
- Symfony\Component\ErrorHandler\Exception\FlattenException
- Throwable
interfaces: []
