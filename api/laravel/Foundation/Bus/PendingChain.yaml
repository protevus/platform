name: PendingChain
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Dispatcher
  type: class
  source: Illuminate\Contracts\Bus\Dispatcher
- name: CallQueuedClosure
  type: class
  source: Illuminate\Queue\CallQueuedClosure
- name: Conditionable
  type: class
  source: Illuminate\Support\Traits\Conditionable
- name: SerializableClosure
  type: class
  source: Laravel\SerializableClosure\SerializableClosure
- name: Conditionable
  type: class
  source: Conditionable
properties:
- name: job
  visibility: public
  comment: '# * The class name of the job being dispatched.

    # *

    # * @var mixed'
- name: chain
  visibility: public
  comment: '# * The jobs to be chained.

    # *

    # * @var array'
- name: connection
  visibility: public
  comment: '# * The name of the connection the chain should be sent to.

    # *

    # * @var string|null'
- name: queue
  visibility: public
  comment: '# * The name of the queue the chain should be sent to.

    # *

    # * @var string|null'
- name: delay
  visibility: public
  comment: '# * The number of seconds before the chain should be made available.

    # *

    # * @var \DateTimeInterface|\DateInterval|int|null'
- name: catchCallbacks
  visibility: public
  comment: '# * The callbacks to be executed on failure.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: job
  - name: chain
  comment: "# * The class name of the job being dispatched.\n# *\n# * @var mixed\n\
    # */\n# public $job;\n# \n# /**\n# * The jobs to be chained.\n# *\n# * @var array\n\
    # */\n# public $chain;\n# \n# /**\n# * The name of the connection the chain should\
    \ be sent to.\n# *\n# * @var string|null\n# */\n# public $connection;\n# \n# /**\n\
    # * The name of the queue the chain should be sent to.\n# *\n# * @var string|null\n\
    # */\n# public $queue;\n# \n# /**\n# * The number of seconds before the chain\
    \ should be made available.\n# *\n# * @var \\DateTimeInterface|\\DateInterval|int|null\n\
    # */\n# public $delay;\n# \n# /**\n# * The callbacks to be executed on failure.\n\
    # *\n# * @var array\n# */\n# public $catchCallbacks = [];\n# \n# /**\n# * Create\
    \ a new PendingChain instance.\n# *\n# * @param  mixed  $job\n# * @param  array\
    \  $chain\n# * @return void"
- name: onConnection
  visibility: public
  parameters:
  - name: connection
  comment: '# * Set the desired connection for the job.

    # *

    # * @param  string|null  $connection

    # * @return $this'
- name: onQueue
  visibility: public
  parameters:
  - name: queue
  comment: '# * Set the desired queue for the job.

    # *

    # * @param  string|null  $queue

    # * @return $this'
- name: delay
  visibility: public
  parameters:
  - name: delay
  comment: '# * Set the desired delay in seconds for the chain.

    # *

    # * @param  \DateTimeInterface|\DateInterval|int|null  $delay

    # * @return $this'
- name: catch
  visibility: public
  parameters:
  - name: callback
  comment: '# * Add a callback to be executed on job failure.

    # *

    # * @param  callable  $callback

    # * @return $this'
- name: catchCallbacks
  visibility: public
  parameters: []
  comment: '# * Get the "catch" callbacks that have been registered.

    # *

    # * @return array'
- name: dispatch
  visibility: public
  parameters: []
  comment: '# * Dispatch the job chain.

    # *

    # * @return \Illuminate\Foundation\Bus\PendingDispatch'
- name: dispatchIf
  visibility: public
  parameters:
  - name: boolean
  comment: '# * Dispatch the job chain if the given truth test passes.

    # *

    # * @param  bool|\Closure  $boolean

    # * @return \Illuminate\Foundation\Bus\PendingDispatch|null'
- name: dispatchUnless
  visibility: public
  parameters:
  - name: boolean
  comment: '# * Dispatch the job chain unless the given truth test passes.

    # *

    # * @param  bool|\Closure  $boolean

    # * @return \Illuminate\Foundation\Bus\PendingDispatch|null'
traits:
- Closure
- Illuminate\Contracts\Bus\Dispatcher
- Illuminate\Queue\CallQueuedClosure
- Illuminate\Support\Traits\Conditionable
- Laravel\SerializableClosure\SerializableClosure
- Conditionable
interfaces: []
