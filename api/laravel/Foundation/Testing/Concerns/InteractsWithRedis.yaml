name: InteractsWithRedis
class_comment: null
dependencies:
- name: Exception
  type: class
  source: Exception
- name: Application
  type: class
  source: Illuminate\Foundation\Application
- name: RedisManager
  type: class
  source: Illuminate\Redis\RedisManager
- name: Env
  type: class
  source: Illuminate\Support\Env
properties:
- name: connectionFailedOnceWithDefaultsSkip
  visibility: private
  comment: '# * Indicate connection failed if redis is not available.

    # *

    # * @var bool'
- name: redis
  visibility: private
  comment: '# * Redis manager instance.

    # *

    # * @var array<string, \Illuminate\Redis\RedisManager>'
methods:
- name: setUpRedis
  visibility: public
  parameters: []
  comment: "# * Indicate connection failed if redis is not available.\n# *\n# * @var\
    \ bool\n# */\n# private static $connectionFailedOnceWithDefaultsSkip = false;\n\
    # \n# /**\n# * Redis manager instance.\n# *\n# * @var array<string, \\Illuminate\\\
    Redis\\RedisManager>\n# */\n# private $redis;\n# \n# /**\n# * Setup redis connection.\n\
    # *\n# * @return void"
- name: tearDownRedis
  visibility: public
  parameters: []
  comment: '# * Teardown redis connection.

    # *

    # * @return void'
- name: redisDriverProvider
  visibility: public
  parameters: []
  comment: '# * Get redis driver provider.

    # *

    # * @return array'
- name: ifRedisAvailable
  visibility: public
  parameters:
  - name: callback
  comment: '# * Run test if redis is available.

    # *

    # * @param  callable  $callback

    # * @return void'
traits:
- Exception
- Illuminate\Foundation\Application
- Illuminate\Redis\RedisManager
- Illuminate\Support\Env
interfaces: []
