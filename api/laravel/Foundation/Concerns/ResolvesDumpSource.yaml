name: ResolvesDumpSource
class_comment: null
dependencies:
- name: Throwable
  type: class
  source: Throwable
properties:
- name: editorHrefs
  visibility: protected
  comment: '# * All of the href formats for common editors.

    # *

    # * @var array<string, string>'
- name: adjustableTraces
  visibility: protected
  comment: '# * Files that require special trace handling and their levels.

    # *

    # * @var array<string, int>'
- name: dumpSourceResolver
  visibility: protected
  comment: '# * The source resolver.

    # *

    # * @var (callable(): (array{0: string, 1: string, 2: int|null}|null))|null|false'
methods:
- name: resolveDumpSource
  visibility: public
  parameters: []
  comment: "# * All of the href formats for common editors.\n# *\n# * @var array<string,\
    \ string>\n# */\n# protected $editorHrefs = [\n# 'atom' => 'atom://core/open/file?filename={file}&line={line}',\n\
    # 'emacs' => 'emacs://open?url=file://{file}&line={line}',\n# 'idea' => 'idea://open?file={file}&line={line}',\n\
    # 'macvim' => 'mvim://open/?url=file://{file}&line={line}',\n# 'netbeans' => 'netbeans://open/?f={file}:{line}',\n\
    # 'nova' => 'nova://core/open/file?filename={file}&line={line}',\n# 'phpstorm'\
    \ => 'phpstorm://open?file={file}&line={line}',\n# 'sublime' => 'subl://open?url=file://{file}&line={line}',\n\
    # 'textmate' => 'txmt://open?url=file://{file}&line={line}',\n# 'vscode' => 'vscode://file/{file}:{line}',\n\
    # 'vscode-insiders' => 'vscode-insiders://file/{file}:{line}',\n# 'vscode-insiders-remote'\
    \ => 'vscode-insiders://vscode-remote/{file}:{line}',\n# 'vscode-remote' => 'vscode://vscode-remote/{file}:{line}',\n\
    # 'vscodium' => 'vscodium://file/{file}:{line}',\n# 'xdebug' => 'xdebug://{file}@{line}',\n\
    # ];\n# \n# /**\n# * Files that require special trace handling and their levels.\n\
    # *\n# * @var array<string, int>\n# */\n# protected static $adjustableTraces =\
    \ [\n# 'symfony/var-dumper/Resources/functions/dump.php' => 1,\n# 'Illuminate/Collections/Traits/EnumeratesValues.php'\
    \ => 4,\n# ];\n# \n# /**\n# * The source resolver.\n# *\n# * @var (callable():\
    \ (array{0: string, 1: string, 2: int|null}|null))|null|false\n# */\n# protected\
    \ static $dumpSourceResolver;\n# \n# /**\n# * Resolve the source of the dump call.\n\
    # *\n# * @return array{0: string, 1: string, 2: int|null}|null"
- name: isCompiledViewFile
  visibility: protected
  parameters:
  - name: file
  comment: '# * Determine if the given file is a view compiled.

    # *

    # * @param  string  $file

    # * @return bool'
- name: getOriginalFileForCompiledView
  visibility: protected
  parameters:
  - name: file
  comment: '# * Get the original view compiled file by the given compiled file.

    # *

    # * @param  string  $file

    # * @return string'
- name: resolveSourceHref
  visibility: protected
  parameters:
  - name: file
  - name: line
  comment: '# * Resolve the source href, if possible.

    # *

    # * @param  string  $file

    # * @param  int|null  $line

    # * @return string|null'
- name: resolveDumpSourceUsing
  visibility: public
  parameters:
  - name: callable
  comment: '# * Set the resolver that resolves the source of the dump call.

    # *

    # * @param  (callable(): (array{0: string, 1: string, 2: int|null}|null))|null  $callable

    # * @return void'
- name: dontIncludeSource
  visibility: public
  parameters: []
  comment: '# * Don''t include the location / file of the dump in dumps.

    # *

    # * @return void'
traits:
- Throwable
interfaces: []
