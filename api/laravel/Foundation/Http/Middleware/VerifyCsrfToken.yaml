name: VerifyCsrfToken
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: DecryptException
  type: class
  source: Illuminate\Contracts\Encryption\DecryptException
- name: Encrypter
  type: class
  source: Illuminate\Contracts\Encryption\Encrypter
- name: Application
  type: class
  source: Illuminate\Contracts\Foundation\Application
- name: Responsable
  type: class
  source: Illuminate\Contracts\Support\Responsable
- name: CookieValuePrefix
  type: class
  source: Illuminate\Cookie\CookieValuePrefix
- name: EncryptCookies
  type: class
  source: Illuminate\Cookie\Middleware\EncryptCookies
- name: ExcludesPaths
  type: class
  source: Illuminate\Foundation\Http\Middleware\Concerns\ExcludesPaths
- name: TokenMismatchException
  type: class
  source: Illuminate\Session\TokenMismatchException
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: InteractsWithTime
  type: class
  source: Illuminate\Support\InteractsWithTime
- name: Cookie
  type: class
  source: Symfony\Component\HttpFoundation\Cookie
properties:
- name: app
  visibility: protected
  comment: '# * The application instance.

    # *

    # * @var \Illuminate\Contracts\Foundation\Application'
- name: encrypter
  visibility: protected
  comment: '# * The encrypter implementation.

    # *

    # * @var \Illuminate\Contracts\Encryption\Encrypter'
- name: except
  visibility: protected
  comment: '# * The URIs that should be excluded.

    # *

    # * @var array<int, string>'
- name: neverVerify
  visibility: protected
  comment: '# * The globally ignored URIs that should be excluded from CSRF verification.

    # *

    # * @var array'
- name: addHttpCookie
  visibility: protected
  comment: '# * Indicates whether the XSRF-TOKEN cookie should be set on the response.

    # *

    # * @var bool'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: app
  - name: encrypter
  comment: "# * The application instance.\n# *\n# * @var \\Illuminate\\Contracts\\\
    Foundation\\Application\n# */\n# protected $app;\n# \n# /**\n# * The encrypter\
    \ implementation.\n# *\n# * @var \\Illuminate\\Contracts\\Encryption\\Encrypter\n\
    # */\n# protected $encrypter;\n# \n# /**\n# * The URIs that should be excluded.\n\
    # *\n# * @var array<int, string>\n# */\n# protected $except = [];\n# \n# /**\n\
    # * The globally ignored URIs that should be excluded from CSRF verification.\n\
    # *\n# * @var array\n# */\n# protected static $neverVerify = [];\n# \n# /**\n\
    # * Indicates whether the XSRF-TOKEN cookie should be set on the response.\n#\
    \ *\n# * @var bool\n# */\n# protected $addHttpCookie = true;\n# \n# /**\n# * Create\
    \ a new middleware instance.\n# *\n# * @param  \\Illuminate\\Contracts\\Foundation\\\
    Application  $app\n# * @param  \\Illuminate\\Contracts\\Encryption\\Encrypter\
    \  $encrypter\n# * @return void"
- name: handle
  visibility: public
  parameters:
  - name: request
  - name: next
  comment: '# * Handle an incoming request.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @param  \Closure  $next

    # * @return mixed

    # *

    # * @throws \Illuminate\Session\TokenMismatchException'
- name: isReading
  visibility: protected
  parameters:
  - name: request
  comment: "# * Determine if the HTTP request uses a \u2018read\u2019 verb.\n# *\n\
    # * @param  \\Illuminate\\Http\\Request  $request\n# * @return bool"
- name: runningUnitTests
  visibility: protected
  parameters: []
  comment: '# * Determine if the application is running unit tests.

    # *

    # * @return bool'
- name: getExcludedPaths
  visibility: public
  parameters: []
  comment: '# * Get the URIs that should be excluded.

    # *

    # * @return array'
- name: tokensMatch
  visibility: protected
  parameters:
  - name: request
  comment: '# * Determine if the session and input CSRF tokens match.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @return bool'
- name: getTokenFromRequest
  visibility: protected
  parameters:
  - name: request
  comment: '# * Get the CSRF token from the request.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @return string|null'
- name: shouldAddXsrfTokenCookie
  visibility: public
  parameters: []
  comment: '# * Determine if the cookie should be added to the response.

    # *

    # * @return bool'
- name: addCookieToResponse
  visibility: protected
  parameters:
  - name: request
  - name: response
  comment: '# * Add the CSRF token to the response cookies.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @param  \Symfony\Component\HttpFoundation\Response  $response

    # * @return \Symfony\Component\HttpFoundation\Response'
- name: newCookie
  visibility: protected
  parameters:
  - name: request
  - name: config
  comment: '# * Create a new "XSRF-TOKEN" cookie that contains the CSRF token.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @param  array  $config

    # * @return \Symfony\Component\HttpFoundation\Cookie'
- name: except
  visibility: public
  parameters:
  - name: uris
  comment: '# * Indicate that the given URIs should be excluded from CSRF verification.

    # *

    # * @param  array|string  $uris

    # * @return void'
- name: serialized
  visibility: public
  parameters: []
  comment: '# * Determine if the cookie contents should be serialized.

    # *

    # * @return bool'
- name: flushState
  visibility: public
  parameters: []
  comment: '# * Flush the state of the middleware.

    # *

    # * @return void'
traits:
- Closure
- Illuminate\Contracts\Encryption\DecryptException
- Illuminate\Contracts\Encryption\Encrypter
- Illuminate\Contracts\Foundation\Application
- Illuminate\Contracts\Support\Responsable
- Illuminate\Cookie\CookieValuePrefix
- Illuminate\Cookie\Middleware\EncryptCookies
- Illuminate\Foundation\Http\Middleware\Concerns\ExcludesPaths
- Illuminate\Session\TokenMismatchException
- Illuminate\Support\Arr
- Illuminate\Support\InteractsWithTime
- Symfony\Component\HttpFoundation\Cookie
- InteractsWithTime
interfaces: []
