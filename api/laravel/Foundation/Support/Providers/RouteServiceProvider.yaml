name: RouteServiceProvider
class_comment: '# * @mixin \Illuminate\Routing\Router'
dependencies:
- name: Closure
  type: class
  source: Closure
- name: UrlGenerator
  type: class
  source: Illuminate\Contracts\Routing\UrlGenerator
- name: Router
  type: class
  source: Illuminate\Routing\Router
- name: ServiceProvider
  type: class
  source: Illuminate\Support\ServiceProvider
- name: ForwardsCalls
  type: class
  source: Illuminate\Support\Traits\ForwardsCalls
- name: ForwardsCalls
  type: class
  source: ForwardsCalls
properties:
- name: namespace
  visibility: protected
  comment: "# * @mixin \\Illuminate\\Routing\\Router\n# */\n# class RouteServiceProvider\
    \ extends ServiceProvider\n# {\n# use ForwardsCalls;\n# \n# /**\n# * The controller\
    \ namespace for the application.\n# *\n# * @var string|null"
- name: loadRoutesUsing
  visibility: protected
  comment: '# * The callback that should be used to load the application''s routes.

    # *

    # * @var \Closure|null'
- name: alwaysLoadRoutesUsing
  visibility: protected
  comment: '# * The global callback that should be used to load the application''s
    routes.

    # *

    # * @var \Closure|null'
- name: alwaysLoadCachedRoutesUsing
  visibility: protected
  comment: '# * The callback that should be used to load the application''s cached
    routes.

    # *

    # * @var \Closure|null'
methods:
- name: register
  visibility: public
  parameters: []
  comment: "# * @mixin \\Illuminate\\Routing\\Router\n# */\n# class RouteServiceProvider\
    \ extends ServiceProvider\n# {\n# use ForwardsCalls;\n# \n# /**\n# * The controller\
    \ namespace for the application.\n# *\n# * @var string|null\n# */\n# protected\
    \ $namespace;\n# \n# /**\n# * The callback that should be used to load the application's\
    \ routes.\n# *\n# * @var \\Closure|null\n# */\n# protected $loadRoutesUsing;\n\
    # \n# /**\n# * The global callback that should be used to load the application's\
    \ routes.\n# *\n# * @var \\Closure|null\n# */\n# protected static $alwaysLoadRoutesUsing;\n\
    # \n# /**\n# * The callback that should be used to load the application's cached\
    \ routes.\n# *\n# * @var \\Closure|null\n# */\n# protected static $alwaysLoadCachedRoutesUsing;\n\
    # \n# /**\n# * Register any application services.\n# *\n# * @return void"
- name: boot
  visibility: public
  parameters: []
  comment: '# * Bootstrap any application services.

    # *

    # * @return void'
- name: routes
  visibility: protected
  parameters:
  - name: routesCallback
  comment: '# * Register the callback that will be used to load the application''s
    routes.

    # *

    # * @param  \Closure  $routesCallback

    # * @return $this'
- name: loadRoutesUsing
  visibility: public
  parameters:
  - name: routesCallback
  comment: '# * Register the callback that will be used to load the application''s
    routes.

    # *

    # * @param  \Closure|null  $routesCallback

    # * @return void'
- name: loadCachedRoutesUsing
  visibility: public
  parameters:
  - name: routesCallback
  comment: '# * Register the callback that will be used to load the application''s
    cached routes.

    # *

    # * @param  \Closure|null  $routesCallback

    # * @return void'
- name: setRootControllerNamespace
  visibility: protected
  parameters: []
  comment: '# * Set the root controller namespace for the application.

    # *

    # * @return void'
- name: routesAreCached
  visibility: protected
  parameters: []
  comment: '# * Determine if the application routes are cached.

    # *

    # * @return bool'
- name: loadCachedRoutes
  visibility: protected
  parameters: []
  comment: '# * Load the cached routes for the application.

    # *

    # * @return void'
- name: loadRoutes
  visibility: protected
  parameters: []
  comment: '# * Load the application routes.

    # *

    # * @return void'
- name: __call
  visibility: public
  parameters:
  - name: method
  - name: parameters
  comment: '# * Pass dynamic methods onto the router instance.

    # *

    # * @param  string  $method

    # * @param  array  $parameters

    # * @return mixed'
traits:
- Closure
- Illuminate\Contracts\Routing\UrlGenerator
- Illuminate\Routing\Router
- Illuminate\Support\ServiceProvider
- Illuminate\Support\Traits\ForwardsCalls
- ForwardsCalls
interfaces: []
