name: EventServiceProvider
class_comment: null
dependencies:
- name: Registered
  type: class
  source: Illuminate\Auth\Events\Registered
- name: SendEmailVerificationNotification
  type: class
  source: Illuminate\Auth\Listeners\SendEmailVerificationNotification
- name: DiscoverEvents
  type: class
  source: Illuminate\Foundation\Events\DiscoverEvents
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: Event
  type: class
  source: Illuminate\Support\Facades\Event
- name: ServiceProvider
  type: class
  source: Illuminate\Support\ServiceProvider
properties:
- name: listen
  visibility: protected
  comment: '# * The event handler mappings for the application.

    # *

    # * @var array<string, array<int, string>>'
- name: subscribe
  visibility: protected
  comment: '# * The subscribers to register.

    # *

    # * @var array'
- name: observers
  visibility: protected
  comment: '# * The model observers to register.

    # *

    # * @var array<string, string|object|array<int, string|object>>'
- name: shouldDiscoverEvents
  visibility: protected
  comment: '# * Indicates if events should be discovered.

    # *

    # * @var bool'
- name: eventDiscoveryPaths
  visibility: protected
  comment: '# * The configured event discovery paths.

    # *

    # * @var array|null'
methods:
- name: register
  visibility: public
  parameters: []
  comment: "# * The event handler mappings for the application.\n# *\n# * @var array<string,\
    \ array<int, string>>\n# */\n# protected $listen = [];\n# \n# /**\n# * The subscribers\
    \ to register.\n# *\n# * @var array\n# */\n# protected $subscribe = [];\n# \n\
    # /**\n# * The model observers to register.\n# *\n# * @var array<string, string|object|array<int,\
    \ string|object>>\n# */\n# protected $observers = [];\n# \n# /**\n# * Indicates\
    \ if events should be discovered.\n# *\n# * @var bool\n# */\n# protected static\
    \ $shouldDiscoverEvents = true;\n# \n# /**\n# * The configured event discovery\
    \ paths.\n# *\n# * @var array|null\n# */\n# protected static $eventDiscoveryPaths;\n\
    # \n# /**\n# * Register the application's event listeners.\n# *\n# * @return void"
- name: boot
  visibility: public
  parameters: []
  comment: '# * Boot any application services.

    # *

    # * @return void'
- name: listens
  visibility: public
  parameters: []
  comment: '# * Get the events and handlers.

    # *

    # * @return array'
- name: getEvents
  visibility: public
  parameters: []
  comment: '# * Get the discovered events and listeners for the application.

    # *

    # * @return array'
- name: discoveredEvents
  visibility: protected
  parameters: []
  comment: '# * Get the discovered events for the application.

    # *

    # * @return array'
- name: shouldDiscoverEvents
  visibility: public
  parameters: []
  comment: '# * Determine if events and listeners should be automatically discovered.

    # *

    # * @return bool'
- name: discoverEvents
  visibility: public
  parameters: []
  comment: '# * Discover the events and listeners for the application.

    # *

    # * @return array'
- name: discoverEventsWithin
  visibility: protected
  parameters: []
  comment: '# * Get the listener directories that should be used to discover events.

    # *

    # * @return array'
- name: addEventDiscoveryPaths
  visibility: public
  parameters:
  - name: paths
  comment: '# * Add the given event discovery paths to the application''s event discovery
    paths.

    # *

    # * @param  string|array  $paths

    # * @return void'
- name: setEventDiscoveryPaths
  visibility: public
  parameters:
  - name: paths
  comment: '# * Set the globally configured event discovery paths.

    # *

    # * @param  array  $paths

    # * @return void'
- name: eventDiscoveryBasePath
  visibility: protected
  parameters: []
  comment: '# * Get the base path to be used during event discovery.

    # *

    # * @return string'
- name: disableEventDiscovery
  visibility: public
  parameters: []
  comment: '# * Disable event discovery for the application.

    # *

    # * @return void'
- name: configureEmailVerification
  visibility: protected
  parameters: []
  comment: '# * Configure the proper event listeners for email verification.

    # *

    # * @return void'
traits:
- Illuminate\Auth\Events\Registered
- Illuminate\Auth\Listeners\SendEmailVerificationNotification
- Illuminate\Foundation\Events\DiscoverEvents
- Illuminate\Support\Arr
- Illuminate\Support\Facades\Event
- Illuminate\Support\ServiceProvider
interfaces: []
