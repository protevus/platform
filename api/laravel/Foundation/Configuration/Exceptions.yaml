name: Exceptions
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Handler
  type: class
  source: Illuminate\Foundation\Exceptions\Handler
- name: Arr
  type: class
  source: Illuminate\Support\Arr
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: handler
  comment: '# * Create a new exception handling configuration instance.

    # *

    # * @param  \Illuminate\Foundation\Exceptions\Handler  $handler

    # * @return void'
- name: report
  visibility: public
  parameters:
  - name: using
  comment: '# * Register a reportable callback.

    # *

    # * @param  callable  $using

    # * @return \Illuminate\Foundation\Exceptions\ReportableHandler'
- name: reportable
  visibility: public
  parameters:
  - name: reportUsing
  comment: '# * Register a reportable callback.

    # *

    # * @param  callable  $reportUsing

    # * @return \Illuminate\Foundation\Exceptions\ReportableHandler'
- name: render
  visibility: public
  parameters:
  - name: using
  comment: '# * Register a renderable callback.

    # *

    # * @param  callable  $using

    # * @return $this'
- name: renderable
  visibility: public
  parameters:
  - name: renderUsing
  comment: '# * Register a renderable callback.

    # *

    # * @param  callable  $renderUsing

    # * @return $this'
- name: respond
  visibility: public
  parameters:
  - name: using
  comment: '# * Register a callback to prepare the final, rendered exception response.

    # *

    # * @param  callable  $using

    # * @return $this'
- name: throttle
  visibility: public
  parameters:
  - name: throttleUsing
  comment: '# * Specify the callback that should be used to throttle reportable exceptions.

    # *

    # * @param  callable  $throttleUsing

    # * @return $this'
- name: map
  visibility: public
  parameters:
  - name: from
  - name: to
    default: 'null'
  comment: '# * Register a new exception mapping.

    # *

    # * @param  \Closure|string  $from

    # * @param  \Closure|string|null  $to

    # * @return $this

    # *

    # * @throws \InvalidArgumentException'
- name: level
  visibility: public
  parameters:
  - name: type
  - name: level
  comment: '# * Set the log level for the given exception type.

    # *

    # * @param  class-string<\Throwable>  $type

    # * @param  \Psr\Log\LogLevel::*  $level

    # * @return $this'
- name: context
  visibility: public
  parameters:
  - name: contextCallback
  comment: '# * Register a closure that should be used to build exception context
    data.

    # *

    # * @param  \Closure  $contextCallback

    # * @return $this'
- name: dontReport
  visibility: public
  parameters:
  - name: class
  comment: '# * Indicate that the given exception type should not be reported.

    # *

    # * @param  array|string  $class

    # * @return $this'
- name: dontReportDuplicates
  visibility: public
  parameters: []
  comment: '# * Do not report duplicate exceptions.

    # *

    # * @return $this'
- name: dontFlash
  visibility: public
  parameters:
  - name: attributes
  comment: '# * Indicate that the given attributes should never be flashed to the
    session on validation errors.

    # *

    # * @param  array|string  $attributes

    # * @return $this'
- name: shouldRenderJsonWhen
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register the callable that determines if the exception handler response
    should be JSON.

    # *

    # * @param  callable(\Illuminate\Http\Request $request, \Throwable): bool  $callback

    # * @return $this'
- name: stopIgnoring
  visibility: public
  parameters:
  - name: class
  comment: '# * Indicate that the given exception class should not be ignored.

    # *

    # * @param  array<int, class-string<\Throwable>>|class-string<\Throwable>  $class

    # * @return $this'
traits:
- Closure
- Illuminate\Foundation\Exceptions\Handler
- Illuminate\Support\Arr
interfaces: []
