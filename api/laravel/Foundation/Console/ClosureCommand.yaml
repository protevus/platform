name: ClosureCommand
class_comment: '# * @mixin \Illuminate\Console\Scheduling\Event'
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Command
  type: class
  source: Illuminate\Console\Command
- name: ManuallyFailedException
  type: class
  source: Illuminate\Console\ManuallyFailedException
- name: Schedule
  type: class
  source: Illuminate\Support\Facades\Schedule
- name: ForwardsCalls
  type: class
  source: Illuminate\Support\Traits\ForwardsCalls
- name: ReflectionFunction
  type: class
  source: ReflectionFunction
- name: InputInterface
  type: class
  source: Symfony\Component\Console\Input\InputInterface
- name: OutputInterface
  type: class
  source: Symfony\Component\Console\Output\OutputInterface
- name: ForwardsCalls
  type: class
  source: ForwardsCalls
properties:
- name: callback
  visibility: protected
  comment: "# * @mixin \\Illuminate\\Console\\Scheduling\\Event\n# */\n# class ClosureCommand\
    \ extends Command\n# {\n# use ForwardsCalls;\n# \n# /**\n# * The command callback.\n\
    # *\n# * @var \\Closure"
methods:
- name: __construct
  visibility: public
  parameters:
  - name: signature
  - name: callback
  comment: "# * @mixin \\Illuminate\\Console\\Scheduling\\Event\n# */\n# class ClosureCommand\
    \ extends Command\n# {\n# use ForwardsCalls;\n# \n# /**\n# * The command callback.\n\
    # *\n# * @var \\Closure\n# */\n# protected $callback;\n# \n# /**\n# * Create a\
    \ new command instance.\n# *\n# * @param  string  $signature\n# * @param  \\Closure\
    \  $callback\n# * @return void"
- name: execute
  visibility: protected
  parameters:
  - name: input
  - name: output
  comment: '# * Execute the console command.

    # *

    # * @param  \Symfony\Component\Console\Input\InputInterface  $input

    # * @param  \Symfony\Component\Console\Output\OutputInterface  $output

    # * @return int'
- name: purpose
  visibility: public
  parameters:
  - name: description
  comment: '# * Set the description for the command.

    # *

    # * @param  string  $description

    # * @return $this'
- name: describe
  visibility: public
  parameters:
  - name: description
  comment: '# * Set the description for the command.

    # *

    # * @param  string  $description

    # * @return $this'
- name: schedule
  visibility: public
  parameters:
  - name: parameters
    default: '[]'
  comment: '# * Create a new scheduled event for the command.

    # *

    # * @param  array  $parameters

    # * @return \Illuminate\Console\Scheduling\Event'
- name: __call
  visibility: public
  parameters:
  - name: method
  - name: parameters
  comment: '# * Dynamically proxy calls to a new scheduled event.

    # *

    # * @param  string  $method

    # * @param  array  $parameters

    # * @return mixed

    # *

    # * @throws \BadMethodCallException'
traits:
- Closure
- Illuminate\Console\Command
- Illuminate\Console\ManuallyFailedException
- Illuminate\Support\Facades\Schedule
- Illuminate\Support\Traits\ForwardsCalls
- ReflectionFunction
- Symfony\Component\Console\Input\InputInterface
- Symfony\Component\Console\Output\OutputInterface
- ForwardsCalls
interfaces: []
