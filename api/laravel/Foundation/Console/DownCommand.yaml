name: DownCommand
class_comment: null
dependencies:
- name: PreventRequestsDuringMaintenance
  type: class
  source: App\Http\Middleware\PreventRequestsDuringMaintenance
- name: Exception
  type: class
  source: Exception
- name: Command
  type: class
  source: Illuminate\Console\Command
- name: MaintenanceModeEnabled
  type: class
  source: Illuminate\Foundation\Events\MaintenanceModeEnabled
- name: RegisterErrorViewPaths
  type: class
  source: Illuminate\Foundation\Exceptions\RegisterErrorViewPaths
- name: Str
  type: class
  source: Illuminate\Support\Str
- name: AsCommand
  type: class
  source: Symfony\Component\Console\Attribute\AsCommand
- name: Throwable
  type: class
  source: Throwable
properties:
- name: signature
  visibility: protected
  comment: '# * The console command signature.

    # *

    # * @var string'
- name: description
  visibility: protected
  comment: '# * The console command description.

    # *

    # * @var string'
methods:
- name: handle
  visibility: public
  parameters: []
  comment: "# * The console command signature.\n# *\n# * @var string\n# */\n# protected\
    \ $signature = 'down {--redirect= : The path that users should be redirected to}\n\
    # {--render= : The view that should be prerendered for display during maintenance\
    \ mode}\n# {--retry= : The number of seconds after which the request may be retried}\n\
    # {--refresh= : The number of seconds after which the browser may refresh}\n#\
    \ {--secret= : The secret phrase that may be used to bypass maintenance mode}\n\
    # {--with-secret : Generate a random secret phrase that may be used to bypass\
    \ maintenance mode}\n# {--status=503 : The status code that should be used when\
    \ returning the maintenance mode response}';\n# \n# /**\n# * The console command\
    \ description.\n# *\n# * @var string\n# */\n# protected $description = 'Put the\
    \ application into maintenance / demo mode';\n# \n# /**\n# * Execute the console\
    \ command.\n# *\n# * @return int"
- name: getDownFilePayload
  visibility: protected
  parameters: []
  comment: '# * Get the payload to be placed in the "down" file.

    # *

    # * @return array'
- name: excludedPaths
  visibility: protected
  parameters: []
  comment: '# * Get the paths that should be excluded from maintenance mode.

    # *

    # * @return array'
- name: redirectPath
  visibility: protected
  parameters: []
  comment: '# * Get the path that users should be redirected to.

    # *

    # * @return string'
- name: prerenderView
  visibility: protected
  parameters: []
  comment: '# * Prerender the specified view so that it can be rendered even before
    loading Composer.

    # *

    # * @return string'
- name: getRetryTime
  visibility: protected
  parameters: []
  comment: '# * Get the number of seconds the client should wait before retrying their
    request.

    # *

    # * @return int|null'
- name: getSecret
  visibility: protected
  parameters: []
  comment: '# * Get the secret phrase that may be used to bypass maintenance mode.

    # *

    # * @return string|null'
traits:
- App\Http\Middleware\PreventRequestsDuringMaintenance
- Exception
- Illuminate\Console\Command
- Illuminate\Foundation\Events\MaintenanceModeEnabled
- Illuminate\Foundation\Exceptions\RegisterErrorViewPaths
- Illuminate\Support\Str
- Symfony\Component\Console\Attribute\AsCommand
- Throwable
interfaces: []
