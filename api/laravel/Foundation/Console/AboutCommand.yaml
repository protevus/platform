name: AboutCommand
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Command
  type: class
  source: Illuminate\Console\Command
- name: Composer
  type: class
  source: Illuminate\Support\Composer
- name: Str
  type: class
  source: Illuminate\Support\Str
- name: AsCommand
  type: class
  source: Symfony\Component\Console\Attribute\AsCommand
properties:
- name: signature
  visibility: protected
  comment: '# * The console command signature.

    # *

    # * @var string'
- name: description
  visibility: protected
  comment: '# * The console command description.

    # *

    # * @var string'
- name: composer
  visibility: protected
  comment: '# * The Composer instance.

    # *

    # * @var \Illuminate\Support\Composer'
- name: data
  visibility: protected
  comment: '# * The data to display.

    # *

    # * @var array'
- name: customDataResolvers
  visibility: protected
  comment: '# * The registered callables that add custom data to the command output.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: composer
  comment: "# * The console command signature.\n# *\n# * @var string\n# */\n# protected\
    \ $signature = 'about {--only= : The section to display}\n# {--json : Output the\
    \ information as JSON}';\n# \n# /**\n# * The console command description.\n# *\n\
    # * @var string\n# */\n# protected $description = 'Display basic information about\
    \ your application';\n# \n# /**\n# * The Composer instance.\n# *\n# * @var \\\
    Illuminate\\Support\\Composer\n# */\n# protected $composer;\n# \n# /**\n# * The\
    \ data to display.\n# *\n# * @var array\n# */\n# protected static $data = [];\n\
    # \n# /**\n# * The registered callables that add custom data to the command output.\n\
    # *\n# * @var array\n# */\n# protected static $customDataResolvers = [];\n# \n\
    # /**\n# * Create a new command instance.\n# *\n# * @param  \\Illuminate\\Support\\\
    Composer  $composer\n# * @return void"
- name: handle
  visibility: public
  parameters: []
  comment: '# * Execute the console command.

    # *

    # * @return int'
- name: display
  visibility: protected
  parameters:
  - name: data
  comment: '# * Display the application information.

    # *

    # * @param  \Illuminate\Support\Collection  $data

    # * @return void'
- name: displayDetail
  visibility: protected
  parameters:
  - name: data
  comment: '# * Display the application information as a detail view.

    # *

    # * @param  \Illuminate\Support\Collection  $data

    # * @return void'
- name: displayJson
  visibility: protected
  parameters:
  - name: data
  comment: '# * Display the application information as JSON.

    # *

    # * @param  \Illuminate\Support\Collection  $data

    # * @return void'
- name: gatherApplicationInformation
  visibility: protected
  parameters: []
  comment: '# * Gather information about the application.

    # *

    # * @return void'
- name: hasPhpFiles
  visibility: protected
  parameters:
  - name: path
  comment: '# * Determine whether the given directory has PHP files.

    # *

    # * @param  string  $path

    # * @return bool'
- name: add
  visibility: public
  parameters:
  - name: section
  - name: data
  - name: value
    default: 'null'
  comment: '# * Add additional data to the output of the "about" command.

    # *

    # * @param  string  $section

    # * @param  callable|string|array  $data

    # * @param  string|null  $value

    # * @return void'
- name: addToSection
  visibility: protected
  parameters:
  - name: section
  - name: data
  - name: value
    default: 'null'
  comment: '# * Add additional data to the output of the "about" command.

    # *

    # * @param  string  $section

    # * @param  callable|string|array  $data

    # * @param  string|null  $value

    # * @return void'
- name: sections
  visibility: protected
  parameters: []
  comment: '# * Get the sections provided to the command.

    # *

    # * @return array'
- name: format
  visibility: public
  parameters:
  - name: value
  - name: console
    default: 'null'
  - name: json
    default: 'null'
  comment: '# * Materialize a function that formats a given value for CLI or JSON
    output.

    # *

    # * @param  mixed  $value

    # * @param  (\Closure(mixed):(mixed))|null  $console

    # * @param  (\Closure(mixed):(mixed))|null  $json

    # * @return \Closure(bool):mixed'
- name: toSearchKeyword
  visibility: protected
  parameters:
  - name: value
  comment: '# * Format the given string for searching.

    # *

    # * @param  string  $value

    # * @return string'
- name: flushState
  visibility: public
  parameters: []
  comment: '# * Flush the registered about data.

    # *

    # * @return void'
traits:
- Closure
- Illuminate\Console\Command
- Illuminate\Support\Composer
- Illuminate\Support\Str
- Symfony\Component\Console\Attribute\AsCommand
interfaces: []
