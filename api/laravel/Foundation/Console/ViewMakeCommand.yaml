name: ViewMakeCommand
class_comment: null
dependencies:
- name: CreatesMatchingTest
  type: class
  source: Illuminate\Console\Concerns\CreatesMatchingTest
- name: GeneratorCommand
  type: class
  source: Illuminate\Console\GeneratorCommand
- name: Inspiring
  type: class
  source: Illuminate\Foundation\Inspiring
- name: File
  type: class
  source: Illuminate\Support\Facades\File
- name: Str
  type: class
  source: Illuminate\Support\Str
- name: AsCommand
  type: class
  source: Symfony\Component\Console\Attribute\AsCommand
- name: InputOption
  type: class
  source: Symfony\Component\Console\Input\InputOption
- name: CreatesMatchingTest
  type: class
  source: CreatesMatchingTest
properties:
- name: description
  visibility: protected
  comment: '# * The console command description.

    # *

    # * @var string'
- name: name
  visibility: protected
  comment: '# * The name and signature of the console command.

    # *

    # * @var string'
- name: type
  visibility: protected
  comment: '# * The type of file being generated.

    # *

    # * @var string'
methods:
- name: buildClass
  visibility: protected
  parameters:
  - name: name
  comment: "# * The console command description.\n# *\n# * @var string\n# */\n# protected\
    \ $description = 'Create a new view';\n# \n# /**\n# * The name and signature of\
    \ the console command.\n# *\n# * @var string\n# */\n# protected $name = 'make:view';\n\
    # \n# /**\n# * The type of file being generated.\n# *\n# * @var string\n# */\n\
    # protected $type = 'View';\n# \n# /**\n# * Build the class with the given name.\n\
    # *\n# * @param  string  $name\n# * @return string\n# *\n# * @throws \\Illuminate\\\
    Contracts\\Filesystem\\FileNotFoundException"
- name: getPath
  visibility: protected
  parameters:
  - name: name
  comment: '# * Get the destination view path.

    # *

    # * @param  string  $name

    # * @return string'
- name: getNameInput
  visibility: protected
  parameters: []
  comment: '# * Get the desired view name from the input.

    # *

    # * @return string'
- name: getStub
  visibility: protected
  parameters: []
  comment: '# * Get the stub file for the generator.

    # *

    # * @return string'
- name: resolveStubPath
  visibility: protected
  parameters:
  - name: stub
  comment: '# * Resolve the fully-qualified path to the stub.

    # *

    # * @param  string  $stub

    # * @return string'
- name: getTestPath
  visibility: protected
  parameters: []
  comment: '# * Get the destination test case path.

    # *

    # * @return string'
- name: handleTestCreation
  visibility: protected
  parameters:
  - name: path
  comment: '# * Create the matching test case if requested.

    # *

    # * @param  string  $path'
- name: testNamespace
  visibility: protected
  parameters: []
  comment: '# * Get the namespace for the test.

    # *

    # * @return string'
- name: testClassName
  visibility: protected
  parameters: []
  comment: '# * Get the class name for the test.

    # *

    # * @return string'
- name: testClassFullyQualifiedName
  visibility: protected
  parameters: []
  comment: '# * Get the class fully qualified name for the test.

    # *

    # * @return string'
- name: getTestStub
  visibility: protected
  parameters: []
  comment: '# * Get the test stub file for the generator.

    # *

    # * @return string'
- name: testViewName
  visibility: protected
  parameters: []
  comment: '# * Get the view name for the test.

    # *

    # * @return string'
- name: usingPest
  visibility: protected
  parameters: []
  comment: '# * Determine if Pest is being used by the application.

    # *

    # * @return bool'
- name: getOptions
  visibility: protected
  parameters: []
  comment: '# * Get the console command arguments.

    # *

    # * @return array'
traits:
- Illuminate\Console\Concerns\CreatesMatchingTest
- Illuminate\Console\GeneratorCommand
- Illuminate\Foundation\Inspiring
- Illuminate\Support\Facades\File
- Illuminate\Support\Str
- Symfony\Component\Console\Attribute\AsCommand
- Symfony\Component\Console\Input\InputOption
- CreatesMatchingTest
interfaces: []
