name: BroadcastManager
class_comment: '# * @mixin \Illuminate\Contracts\Broadcasting\Broadcaster'
dependencies:
- name: AblyRest
  type: class
  source: Ably\AblyRest
- name: Closure
  type: class
  source: Closure
- name: GuzzleClient
  type: class
  source: GuzzleHttp\Client
- name: AblyBroadcaster
  type: class
  source: Illuminate\Broadcasting\Broadcasters\AblyBroadcaster
- name: LogBroadcaster
  type: class
  source: Illuminate\Broadcasting\Broadcasters\LogBroadcaster
- name: NullBroadcaster
  type: class
  source: Illuminate\Broadcasting\Broadcasters\NullBroadcaster
- name: PusherBroadcaster
  type: class
  source: Illuminate\Broadcasting\Broadcasters\PusherBroadcaster
- name: RedisBroadcaster
  type: class
  source: Illuminate\Broadcasting\Broadcasters\RedisBroadcaster
- name: UniqueLock
  type: class
  source: Illuminate\Bus\UniqueLock
- name: FactoryContract
  type: class
  source: Illuminate\Contracts\Broadcasting\Factory
- name: ShouldBeUnique
  type: class
  source: Illuminate\Contracts\Broadcasting\ShouldBeUnique
- name: ShouldBroadcastNow
  type: class
  source: Illuminate\Contracts\Broadcasting\ShouldBroadcastNow
- name: BusDispatcherContract
  type: class
  source: Illuminate\Contracts\Bus\Dispatcher
- name: Cache
  type: class
  source: Illuminate\Contracts\Cache\Repository
- name: CachesRoutes
  type: class
  source: Illuminate\Contracts\Foundation\CachesRoutes
- name: InvalidArgumentException
  type: class
  source: InvalidArgumentException
- name: LoggerInterface
  type: class
  source: Psr\Log\LoggerInterface
- name: Pusher
  type: class
  source: Pusher\Pusher
properties:
- name: app
  visibility: protected
  comment: '# * @mixin \Illuminate\Contracts\Broadcasting\Broadcaster

    # */

    # class BroadcastManager implements FactoryContract

    # {

    # /**

    # * The application instance.

    # *

    # * @var \Illuminate\Contracts\Container\Container'
- name: drivers
  visibility: protected
  comment: '# * The array of resolved broadcast drivers.

    # *

    # * @var array'
- name: customCreators
  visibility: protected
  comment: '# * The registered custom driver creators.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: app
  comment: "# * @mixin \\Illuminate\\Contracts\\Broadcasting\\Broadcaster\n# */\n\
    # class BroadcastManager implements FactoryContract\n# {\n# /**\n# * The application\
    \ instance.\n# *\n# * @var \\Illuminate\\Contracts\\Container\\Container\n# */\n\
    # protected $app;\n# \n# /**\n# * The array of resolved broadcast drivers.\n#\
    \ *\n# * @var array\n# */\n# protected $drivers = [];\n# \n# /**\n# * The registered\
    \ custom driver creators.\n# *\n# * @var array\n# */\n# protected $customCreators\
    \ = [];\n# \n# /**\n# * Create a new manager instance.\n# *\n# * @param  \\Illuminate\\\
    Contracts\\Container\\Container  $app\n# * @return void"
- name: routes
  visibility: public
  parameters:
  - name: attributes
    default: 'null'
  comment: '# * Register the routes for handling broadcast channel authentication
    and sockets.

    # *

    # * @param  array|null  $attributes

    # * @return void'
- name: userRoutes
  visibility: public
  parameters:
  - name: attributes
    default: 'null'
  comment: '# * Register the routes for handling broadcast user authentication.

    # *

    # * @param  array|null  $attributes

    # * @return void'
- name: channelRoutes
  visibility: public
  parameters:
  - name: attributes
    default: 'null'
  comment: '# * Register the routes for handling broadcast authentication and sockets.

    # *

    # * Alias of "routes" method.

    # *

    # * @param  array|null  $attributes

    # * @return void'
- name: socket
  visibility: public
  parameters:
  - name: request
    default: 'null'
  comment: '# * Get the socket ID for the given request.

    # *

    # * @param  \Illuminate\Http\Request|null  $request

    # * @return string|null'
- name: 'on'
  visibility: public
  parameters:
  - name: channels
  comment: '# * Begin sending an anonymous broadcast to the given channels.'
- name: private
  visibility: public
  parameters:
  - name: channel
  comment: '# * Begin sending an anonymous broadcast to the given private channels.'
- name: presence
  visibility: public
  parameters:
  - name: channel
  comment: '# * Begin sending an anonymous broadcast to the given presence channels.'
- name: event
  visibility: public
  parameters:
  - name: event
    default: 'null'
  comment: '# * Begin broadcasting an event.

    # *

    # * @param  mixed|null  $event

    # * @return \Illuminate\Broadcasting\PendingBroadcast'
- name: queue
  visibility: public
  parameters:
  - name: event
  comment: '# * Queue the given event for broadcast.

    # *

    # * @param  mixed  $event

    # * @return void'
- name: mustBeUniqueAndCannotAcquireLock
  visibility: protected
  parameters:
  - name: event
  comment: '# * Determine if the broadcastable event must be unique and determine
    if we can acquire the necessary lock.

    # *

    # * @param  mixed  $event

    # * @return bool'
- name: connection
  visibility: public
  parameters:
  - name: driver
    default: 'null'
  comment: '# * Get a driver instance.

    # *

    # * @param  string|null  $driver

    # * @return mixed'
- name: driver
  visibility: public
  parameters:
  - name: name
    default: 'null'
  comment: '# * Get a driver instance.

    # *

    # * @param  string|null  $name

    # * @return mixed'
- name: get
  visibility: protected
  parameters:
  - name: name
  comment: '# * Attempt to get the connection from the local cache.

    # *

    # * @param  string  $name

    # * @return \Illuminate\Contracts\Broadcasting\Broadcaster'
- name: resolve
  visibility: protected
  parameters:
  - name: name
  comment: '# * Resolve the given broadcaster.

    # *

    # * @param  string  $name

    # * @return \Illuminate\Contracts\Broadcasting\Broadcaster

    # *

    # * @throws \InvalidArgumentException'
- name: callCustomCreator
  visibility: protected
  parameters:
  - name: config
  comment: '# * Call a custom driver creator.

    # *

    # * @param  array  $config

    # * @return mixed'
- name: createReverbDriver
  visibility: protected
  parameters:
  - name: config
  comment: '# * Create an instance of the driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Broadcasting\Broadcaster'
- name: createPusherDriver
  visibility: protected
  parameters:
  - name: config
  comment: '# * Create an instance of the driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Broadcasting\Broadcaster'
- name: pusher
  visibility: public
  parameters:
  - name: config
  comment: '# * Get a Pusher instance for the given configuration.

    # *

    # * @param  array  $config

    # * @return \Pusher\Pusher'
- name: createAblyDriver
  visibility: protected
  parameters:
  - name: config
  comment: '# * Create an instance of the driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Broadcasting\Broadcaster'
- name: ably
  visibility: public
  parameters:
  - name: config
  comment: '# * Get an Ably instance for the given configuration.

    # *

    # * @param  array  $config

    # * @return \Ably\AblyRest'
- name: createRedisDriver
  visibility: protected
  parameters:
  - name: config
  comment: '# * Create an instance of the driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Broadcasting\Broadcaster'
- name: createLogDriver
  visibility: protected
  parameters:
  - name: config
  comment: '# * Create an instance of the driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Broadcasting\Broadcaster'
- name: createNullDriver
  visibility: protected
  parameters:
  - name: config
  comment: '# * Create an instance of the driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Broadcasting\Broadcaster'
- name: getConfig
  visibility: protected
  parameters:
  - name: name
  comment: '# * Get the connection configuration.

    # *

    # * @param  string  $name

    # * @return array'
- name: getDefaultDriver
  visibility: public
  parameters: []
  comment: '# * Get the default driver name.

    # *

    # * @return string'
- name: setDefaultDriver
  visibility: public
  parameters:
  - name: name
  comment: '# * Set the default driver name.

    # *

    # * @param  string  $name

    # * @return void'
- name: purge
  visibility: public
  parameters:
  - name: name
    default: 'null'
  comment: '# * Disconnect the given disk and remove from local cache.

    # *

    # * @param  string|null  $name

    # * @return void'
- name: extend
  visibility: public
  parameters:
  - name: driver
  - name: callback
  comment: '# * Register a custom driver creator Closure.

    # *

    # * @param  string  $driver

    # * @param  \Closure  $callback

    # * @return $this'
- name: getApplication
  visibility: public
  parameters: []
  comment: '# * Get the application instance used by the manager.

    # *

    # * @return \Illuminate\Contracts\Foundation\Application'
- name: setApplication
  visibility: public
  parameters:
  - name: app
  comment: '# * Set the application instance used by the manager.

    # *

    # * @param  \Illuminate\Contracts\Foundation\Application  $app

    # * @return $this'
- name: forgetDrivers
  visibility: public
  parameters: []
  comment: '# * Forget all of the resolved driver instances.

    # *

    # * @return $this'
- name: __call
  visibility: public
  parameters:
  - name: method
  - name: parameters
  comment: '# * Dynamically call the default driver instance.

    # *

    # * @param  string  $method

    # * @param  array  $parameters

    # * @return mixed'
traits:
- Ably\AblyRest
- Closure
- Illuminate\Broadcasting\Broadcasters\AblyBroadcaster
- Illuminate\Broadcasting\Broadcasters\LogBroadcaster
- Illuminate\Broadcasting\Broadcasters\NullBroadcaster
- Illuminate\Broadcasting\Broadcasters\PusherBroadcaster
- Illuminate\Broadcasting\Broadcasters\RedisBroadcaster
- Illuminate\Bus\UniqueLock
- Illuminate\Contracts\Broadcasting\ShouldBeUnique
- Illuminate\Contracts\Broadcasting\ShouldBroadcastNow
- Illuminate\Contracts\Foundation\CachesRoutes
- InvalidArgumentException
- Psr\Log\LoggerInterface
- Pusher\Pusher
interfaces:
- FactoryContract
