name: PendingBroadcast
class_comment: null
dependencies:
- name: Dispatcher
  type: class
  source: Illuminate\Contracts\Events\Dispatcher
properties:
- name: events
  visibility: protected
  comment: '# * The event dispatcher implementation.

    # *

    # * @var \Illuminate\Contracts\Events\Dispatcher'
- name: event
  visibility: protected
  comment: '# * The event instance.

    # *

    # * @var mixed'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: events
  - name: event
  comment: "# * The event dispatcher implementation.\n# *\n# * @var \\Illuminate\\\
    Contracts\\Events\\Dispatcher\n# */\n# protected $events;\n# \n# /**\n# * The\
    \ event instance.\n# *\n# * @var mixed\n# */\n# protected $event;\n# \n# /**\n\
    # * Create a new pending broadcast instance.\n# *\n# * @param  \\Illuminate\\\
    Contracts\\Events\\Dispatcher  $events\n# * @param  mixed  $event\n# * @return\
    \ void"
- name: via
  visibility: public
  parameters:
  - name: connection
    default: 'null'
  comment: '# * Broadcast the event using a specific broadcaster.

    # *

    # * @param  string|null  $connection

    # * @return $this'
- name: toOthers
  visibility: public
  parameters: []
  comment: '# * Broadcast the event to everyone except the current user.

    # *

    # * @return $this'
- name: __destruct
  visibility: public
  parameters: []
  comment: '# * Handle the object''s destruction.

    # *

    # * @return void'
traits:
- Illuminate\Contracts\Events\Dispatcher
interfaces: []
