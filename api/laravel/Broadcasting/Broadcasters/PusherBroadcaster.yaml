name: PusherBroadcaster
class_comment: null
dependencies:
- name: BroadcastException
  type: class
  source: Illuminate\Broadcasting\BroadcastException
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: Collection
  type: class
  source: Illuminate\Support\Collection
- name: ApiErrorException
  type: class
  source: Pusher\ApiErrorException
- name: Pusher
  type: class
  source: Pusher\Pusher
- name: AccessDeniedHttpException
  type: class
  source: Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
- name: UsePusherChannelConventions
  type: class
  source: UsePusherChannelConventions
properties:
- name: pusher
  visibility: protected
  comment: '# * The Pusher SDK instance.

    # *

    # * @var \Pusher\Pusher'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: pusher
  comment: "# * The Pusher SDK instance.\n# *\n# * @var \\Pusher\\Pusher\n# */\n#\
    \ protected $pusher;\n# \n# /**\n# * Create a new broadcaster instance.\n# *\n\
    # * @param  \\Pusher\\Pusher  $pusher\n# * @return void"
- name: resolveAuthenticatedUser
  visibility: public
  parameters:
  - name: request
  comment: '# * Resolve the authenticated user payload for an incoming connection
    request.

    # *

    # * See: https://pusher.com/docs/channels/library_auth_reference/auth-signatures/#user-authentication

    # * See: https://pusher.com/docs/channels/server_api/authenticating-users/#response

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @return array|null'
- name: auth
  visibility: public
  parameters:
  - name: request
  comment: '# * Authenticate the incoming request for a given channel.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @return mixed

    # *

    # * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException'
- name: validAuthenticationResponse
  visibility: public
  parameters:
  - name: request
  - name: result
  comment: '# * Return the valid authentication response.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @param  mixed  $result

    # * @return mixed'
- name: decodePusherResponse
  visibility: protected
  parameters:
  - name: request
  - name: response
  comment: '# * Decode the given Pusher response.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @param  mixed  $response

    # * @return array'
- name: broadcast
  visibility: public
  parameters:
  - name: channels
  - name: event
  - name: payload
    default: '[]'
  comment: '# * Broadcast the given event.

    # *

    # * @param  array  $channels

    # * @param  string  $event

    # * @param  array  $payload

    # * @return void

    # *

    # * @throws \Illuminate\Broadcasting\BroadcastException'
- name: getPusher
  visibility: public
  parameters: []
  comment: '# * Get the Pusher SDK instance.

    # *

    # * @return \Pusher\Pusher'
- name: setPusher
  visibility: public
  parameters:
  - name: pusher
  comment: '# * Set the Pusher SDK instance.

    # *

    # * @param  \Pusher\Pusher  $pusher

    # * @return void'
traits:
- Illuminate\Broadcasting\BroadcastException
- Illuminate\Support\Arr
- Illuminate\Support\Collection
- Pusher\ApiErrorException
- Pusher\Pusher
- Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
- UsePusherChannelConventions
interfaces: []
