name: UniqueBroadcastEvent
class_comment: null
dependencies:
- name: Container
  type: class
  source: Illuminate\Container\Container
- name: Repository
  type: class
  source: Illuminate\Contracts\Cache\Repository
- name: ShouldBeUnique
  type: class
  source: Illuminate\Contracts\Queue\ShouldBeUnique
properties:
- name: uniqueId
  visibility: public
  comment: '# * The unique lock identifier.

    # *

    # * @var mixed'
- name: uniqueFor
  visibility: public
  comment: '# * The number of seconds the unique lock should be maintained.

    # *

    # * @var int'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: event
  comment: "# * The unique lock identifier.\n# *\n# * @var mixed\n# */\n# public $uniqueId;\n\
    # \n# /**\n# * The number of seconds the unique lock should be maintained.\n#\
    \ *\n# * @var int\n# */\n# public $uniqueFor;\n# \n# /**\n# * Create a new event\
    \ instance.\n# *\n# * @param  mixed  $event\n# * @return void"
- name: uniqueVia
  visibility: public
  parameters: []
  comment: '# * Resolve the cache implementation that should manage the event''s uniqueness.

    # *

    # * @return \Illuminate\Contracts\Cache\Repository'
traits:
- Illuminate\Container\Container
- Illuminate\Contracts\Cache\Repository
- Illuminate\Contracts\Queue\ShouldBeUnique
interfaces:
- ShouldBeUnique
