name: InvokedProcessPool
class_comment: null
dependencies:
- name: Countable
  type: class
  source: Countable
properties:
- name: invokedProcesses
  visibility: protected
  comment: '# * The array of invoked processes.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: invokedProcesses
  comment: "# * The array of invoked processes.\n# *\n# * @var array\n# */\n# protected\
    \ $invokedProcesses;\n# \n# /**\n# * Create a new invoked process pool.\n# *\n\
    # * @param  array  $invokedProcesses\n# * @return void"
- name: signal
  visibility: public
  parameters:
  - name: signal
  comment: '# * Send a signal to each running process in the pool, returning the processes
    that were signalled.

    # *

    # * @param  int  $signal

    # * @return \Illuminate\Support\Collection'
- name: running
  visibility: public
  parameters: []
  comment: '# * Get the processes in the pool that are still currently running.

    # *

    # * @return \Illuminate\Support\Collection'
- name: wait
  visibility: public
  parameters: []
  comment: '# * Wait for the processes to finish.

    # *

    # * @return \Illuminate\Process\ProcessPoolResults'
- name: count
  visibility: public
  parameters: []
  comment: '# * Get the total number of processes.

    # *

    # * @return int'
traits:
- Countable
interfaces:
- Countable
