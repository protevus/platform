name: ArrayStore
class_comment: null
dependencies:
- name: LockProvider
  type: class
  source: Illuminate\Contracts\Cache\LockProvider
- name: Carbon
  type: class
  source: Illuminate\Support\Carbon
- name: InteractsWithTime
  type: class
  source: Illuminate\Support\InteractsWithTime
properties:
- name: storage
  visibility: protected
  comment: '# * The array of stored values.

    # *

    # * @var array'
- name: locks
  visibility: public
  comment: '# * The array of locks.

    # *

    # * @var array'
- name: serializesValues
  visibility: protected
  comment: '# * Indicates if values are serialized within the store.

    # *

    # * @var bool'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: serializesValues
    default: 'false'
  comment: "# * The array of stored values.\n# *\n# * @var array\n# */\n# protected\
    \ $storage = [];\n# \n# /**\n# * The array of locks.\n# *\n# * @var array\n# */\n\
    # public $locks = [];\n# \n# /**\n# * Indicates if values are serialized within\
    \ the store.\n# *\n# * @var bool\n# */\n# protected $serializesValues;\n# \n#\
    \ /**\n# * Create a new Array store.\n# *\n# * @param  bool  $serializesValues\n\
    # * @return void"
- name: get
  visibility: public
  parameters:
  - name: key
  comment: '# * Retrieve an item from the cache by key.

    # *

    # * @param  string  $key

    # * @return mixed'
- name: put
  visibility: public
  parameters:
  - name: key
  - name: value
  - name: seconds
  comment: '# * Store an item in the cache for a given number of seconds.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @param  int  $seconds

    # * @return bool'
- name: increment
  visibility: public
  parameters:
  - name: key
  - name: value
    default: '1'
  comment: '# * Increment the value of an item in the cache.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @return int'
- name: decrement
  visibility: public
  parameters:
  - name: key
  - name: value
    default: '1'
  comment: '# * Decrement the value of an item in the cache.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @return int'
- name: forever
  visibility: public
  parameters:
  - name: key
  - name: value
  comment: '# * Store an item in the cache indefinitely.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @return bool'
- name: forget
  visibility: public
  parameters:
  - name: key
  comment: '# * Remove an item from the cache.

    # *

    # * @param  string  $key

    # * @return bool'
- name: flush
  visibility: public
  parameters: []
  comment: '# * Remove all items from the cache.

    # *

    # * @return bool'
- name: getPrefix
  visibility: public
  parameters: []
  comment: '# * Get the cache key prefix.

    # *

    # * @return string'
- name: calculateExpiration
  visibility: protected
  parameters:
  - name: seconds
  comment: '# * Get the expiration time of the key.

    # *

    # * @param  int  $seconds

    # * @return float'
- name: toTimestamp
  visibility: protected
  parameters:
  - name: seconds
  comment: '# * Get the UNIX timestamp, with milliseconds, for the given number of
    seconds in the future.

    # *

    # * @param  int  $seconds

    # * @return float'
- name: lock
  visibility: public
  parameters:
  - name: name
  - name: seconds
    default: '0'
  - name: owner
    default: 'null'
  comment: '# * Get a lock instance.

    # *

    # * @param  string  $name

    # * @param  int  $seconds

    # * @param  string|null  $owner

    # * @return \Illuminate\Contracts\Cache\Lock'
- name: restoreLock
  visibility: public
  parameters:
  - name: name
  - name: owner
  comment: '# * Restore a lock instance using the owner identifier.

    # *

    # * @param  string  $name

    # * @param  string  $owner

    # * @return \Illuminate\Contracts\Cache\Lock'
traits:
- Illuminate\Contracts\Cache\LockProvider
- Illuminate\Support\Carbon
- Illuminate\Support\InteractsWithTime
- InteractsWithTime
interfaces:
- LockProvider
