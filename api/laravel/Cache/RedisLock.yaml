name: RedisLock
class_comment: null
dependencies: []
properties:
- name: redis
  visibility: protected
  comment: '# * The Redis factory implementation.

    # *

    # * @var \Illuminate\Redis\Connections\Connection'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: redis
  - name: name
  - name: seconds
  - name: owner
    default: 'null'
  comment: "# * The Redis factory implementation.\n# *\n# * @var \\Illuminate\\Redis\\\
    Connections\\Connection\n# */\n# protected $redis;\n# \n# /**\n# * Create a new\
    \ lock instance.\n# *\n# * @param  \\Illuminate\\Redis\\Connections\\Connection\
    \  $redis\n# * @param  string  $name\n# * @param  int  $seconds\n# * @param  string|null\
    \  $owner\n# * @return void"
- name: acquire
  visibility: public
  parameters: []
  comment: '# * Attempt to acquire the lock.

    # *

    # * @return bool'
- name: release
  visibility: public
  parameters: []
  comment: '# * Release the lock.

    # *

    # * @return bool'
- name: forceRelease
  visibility: public
  parameters: []
  comment: '# * Releases this lock in disregard of ownership.

    # *

    # * @return void'
- name: getCurrentOwner
  visibility: protected
  parameters: []
  comment: '# * Returns the owner value written into the driver for this lock.

    # *

    # * @return string'
- name: getConnectionName
  visibility: public
  parameters: []
  comment: '# * Get the name of the Redis connection being used to manage the lock.

    # *

    # * @return string'
traits: []
interfaces: []
