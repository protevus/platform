name: FileStore
class_comment: null
dependencies:
- name: Exception
  type: class
  source: Exception
- name: LockProvider
  type: class
  source: Illuminate\Contracts\Cache\LockProvider
- name: Store
  type: class
  source: Illuminate\Contracts\Cache\Store
- name: LockTimeoutException
  type: class
  source: Illuminate\Contracts\Filesystem\LockTimeoutException
- name: Filesystem
  type: class
  source: Illuminate\Filesystem\Filesystem
- name: LockableFile
  type: class
  source: Illuminate\Filesystem\LockableFile
- name: InteractsWithTime
  type: class
  source: Illuminate\Support\InteractsWithTime
properties:
- name: files
  visibility: protected
  comment: '# * The Illuminate Filesystem instance.

    # *

    # * @var \Illuminate\Filesystem\Filesystem'
- name: directory
  visibility: protected
  comment: '# * The file cache directory.

    # *

    # * @var string'
- name: lockDirectory
  visibility: protected
  comment: '# * The file cache lock directory.

    # *

    # * @var string|null'
- name: filePermission
  visibility: protected
  comment: '# * Octal representation of the cache file permissions.

    # *

    # * @var int|null'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: files
  - name: directory
  - name: filePermission
    default: 'null'
  comment: "# * The Illuminate Filesystem instance.\n# *\n# * @var \\Illuminate\\\
    Filesystem\\Filesystem\n# */\n# protected $files;\n# \n# /**\n# * The file cache\
    \ directory.\n# *\n# * @var string\n# */\n# protected $directory;\n# \n# /**\n\
    # * The file cache lock directory.\n# *\n# * @var string|null\n# */\n# protected\
    \ $lockDirectory;\n# \n# /**\n# * Octal representation of the cache file permissions.\n\
    # *\n# * @var int|null\n# */\n# protected $filePermission;\n# \n# /**\n# * Create\
    \ a new file cache store instance.\n# *\n# * @param  \\Illuminate\\Filesystem\\\
    Filesystem  $files\n# * @param  string  $directory\n# * @param  int|null  $filePermission\n\
    # * @return void"
- name: get
  visibility: public
  parameters:
  - name: key
  comment: '# * Retrieve an item from the cache by key.

    # *

    # * @param  string  $key

    # * @return mixed'
- name: put
  visibility: public
  parameters:
  - name: key
  - name: value
  - name: seconds
  comment: '# * Store an item in the cache for a given number of seconds.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @param  int  $seconds

    # * @return bool'
- name: add
  visibility: public
  parameters:
  - name: key
  - name: value
  - name: seconds
  comment: '# * Store an item in the cache if the key doesn''t exist.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @param  int  $seconds

    # * @return bool'
- name: ensureCacheDirectoryExists
  visibility: protected
  parameters:
  - name: path
  comment: '# * Create the file cache directory if necessary.

    # *

    # * @param  string  $path

    # * @return void'
- name: ensurePermissionsAreCorrect
  visibility: protected
  parameters:
  - name: path
  comment: '# * Ensure the created node has the correct permissions.

    # *

    # * @param  string  $path

    # * @return void'
- name: increment
  visibility: public
  parameters:
  - name: key
  - name: value
    default: '1'
  comment: '# * Increment the value of an item in the cache.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @return int'
- name: decrement
  visibility: public
  parameters:
  - name: key
  - name: value
    default: '1'
  comment: '# * Decrement the value of an item in the cache.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @return int'
- name: forever
  visibility: public
  parameters:
  - name: key
  - name: value
  comment: '# * Store an item in the cache indefinitely.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @return bool'
- name: lock
  visibility: public
  parameters:
  - name: name
  - name: seconds
    default: '0'
  - name: owner
    default: 'null'
  comment: '# * Get a lock instance.

    # *

    # * @param  string  $name

    # * @param  int  $seconds

    # * @param  string|null  $owner

    # * @return \Illuminate\Contracts\Cache\Lock'
- name: restoreLock
  visibility: public
  parameters:
  - name: name
  - name: owner
  comment: '# * Restore a lock instance using the owner identifier.

    # *

    # * @param  string  $name

    # * @param  string  $owner

    # * @return \Illuminate\Contracts\Cache\Lock'
- name: forget
  visibility: public
  parameters:
  - name: key
  comment: '# * Remove an item from the cache.

    # *

    # * @param  string  $key

    # * @return bool'
- name: flush
  visibility: public
  parameters: []
  comment: '# * Remove all items from the cache.

    # *

    # * @return bool'
- name: getPayload
  visibility: protected
  parameters:
  - name: key
  comment: '# * Retrieve an item and expiry time from the cache by key.

    # *

    # * @param  string  $key

    # * @return array'
- name: emptyPayload
  visibility: protected
  parameters: []
  comment: '# * Get a default empty payload for the cache.

    # *

    # * @return array'
- name: path
  visibility: public
  parameters:
  - name: key
  comment: '# * Get the full path for the given cache key.

    # *

    # * @param  string  $key

    # * @return string'
- name: expiration
  visibility: protected
  parameters:
  - name: seconds
  comment: '# * Get the expiration time based on the given seconds.

    # *

    # * @param  int  $seconds

    # * @return int'
- name: getFilesystem
  visibility: public
  parameters: []
  comment: '# * Get the Filesystem instance.

    # *

    # * @return \Illuminate\Filesystem\Filesystem'
- name: getDirectory
  visibility: public
  parameters: []
  comment: '# * Get the working directory of the cache.

    # *

    # * @return string'
- name: setDirectory
  visibility: public
  parameters:
  - name: directory
  comment: '# * Set the working directory of the cache.

    # *

    # * @param  string  $directory

    # * @return $this'
- name: setLockDirectory
  visibility: public
  parameters:
  - name: lockDirectory
  comment: '# * Set the cache directory where locks should be stored.

    # *

    # * @param  string|null  $lockDirectory

    # * @return $this'
- name: getPrefix
  visibility: public
  parameters: []
  comment: '# * Get the cache key prefix.

    # *

    # * @return string'
traits:
- Exception
- Illuminate\Contracts\Cache\LockProvider
- Illuminate\Contracts\Cache\Store
- Illuminate\Contracts\Filesystem\LockTimeoutException
- Illuminate\Filesystem\Filesystem
- Illuminate\Filesystem\LockableFile
- Illuminate\Support\InteractsWithTime
- InteractsWithTime
interfaces:
- Store
