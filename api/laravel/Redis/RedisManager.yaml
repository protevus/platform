name: RedisManager
class_comment: '# * @mixin \Illuminate\Redis\Connections\Connection'
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Factory
  type: class
  source: Illuminate\Contracts\Redis\Factory
- name: Connection
  type: class
  source: Illuminate\Redis\Connections\Connection
- name: PhpRedisConnector
  type: class
  source: Illuminate\Redis\Connectors\PhpRedisConnector
- name: PredisConnector
  type: class
  source: Illuminate\Redis\Connectors\PredisConnector
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: ConfigurationUrlParser
  type: class
  source: Illuminate\Support\ConfigurationUrlParser
- name: InvalidArgumentException
  type: class
  source: InvalidArgumentException
properties:
- name: app
  visibility: protected
  comment: '# * @mixin \Illuminate\Redis\Connections\Connection

    # */

    # class RedisManager implements Factory

    # {

    # /**

    # * The application instance.

    # *

    # * @var \Illuminate\Contracts\Foundation\Application'
- name: driver
  visibility: protected
  comment: '# * The name of the default driver.

    # *

    # * @var string'
- name: customCreators
  visibility: protected
  comment: '# * The registered custom driver creators.

    # *

    # * @var array'
- name: config
  visibility: protected
  comment: '# * The Redis server configurations.

    # *

    # * @var array'
- name: connections
  visibility: protected
  comment: '# * The Redis connections.

    # *

    # * @var mixed'
- name: events
  visibility: protected
  comment: '# * Indicates whether event dispatcher is set on connections.

    # *

    # * @var bool'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: app
  - name: driver
  - name: config
  comment: "# * @mixin \\Illuminate\\Redis\\Connections\\Connection\n# */\n# class\
    \ RedisManager implements Factory\n# {\n# /**\n# * The application instance.\n\
    # *\n# * @var \\Illuminate\\Contracts\\Foundation\\Application\n# */\n# protected\
    \ $app;\n# \n# /**\n# * The name of the default driver.\n# *\n# * @var string\n\
    # */\n# protected $driver;\n# \n# /**\n# * The registered custom driver creators.\n\
    # *\n# * @var array\n# */\n# protected $customCreators = [];\n# \n# /**\n# * The\
    \ Redis server configurations.\n# *\n# * @var array\n# */\n# protected $config;\n\
    # \n# /**\n# * The Redis connections.\n# *\n# * @var mixed\n# */\n# protected\
    \ $connections;\n# \n# /**\n# * Indicates whether event dispatcher is set on connections.\n\
    # *\n# * @var bool\n# */\n# protected $events = false;\n# \n# /**\n# * Create\
    \ a new Redis manager instance.\n# *\n# * @param  \\Illuminate\\Contracts\\Foundation\\\
    Application  $app\n# * @param  string  $driver\n# * @param  array  $config\n#\
    \ * @return void"
- name: connection
  visibility: public
  parameters:
  - name: name
    default: 'null'
  comment: '# * Get a Redis connection by name.

    # *

    # * @param  string|null  $name

    # * @return \Illuminate\Redis\Connections\Connection'
- name: resolve
  visibility: public
  parameters:
  - name: name
    default: 'null'
  comment: '# * Resolve the given connection by name.

    # *

    # * @param  string|null  $name

    # * @return \Illuminate\Redis\Connections\Connection

    # *

    # * @throws \InvalidArgumentException'
- name: resolveCluster
  visibility: protected
  parameters:
  - name: name
  comment: '# * Resolve the given cluster connection by name.

    # *

    # * @param  string  $name

    # * @return \Illuminate\Redis\Connections\Connection'
- name: configure
  visibility: protected
  parameters:
  - name: connection
  - name: name
  comment: '# * Configure the given connection to prepare it for commands.

    # *

    # * @param  \Illuminate\Redis\Connections\Connection  $connection

    # * @param  string  $name

    # * @return \Illuminate\Redis\Connections\Connection'
- name: connector
  visibility: protected
  parameters: []
  comment: '# * Get the connector instance for the current driver.

    # *

    # * @return \Illuminate\Contracts\Redis\Connector|null'
- name: parseConnectionConfiguration
  visibility: protected
  parameters:
  - name: config
  comment: '# * Parse the Redis connection configuration.

    # *

    # * @param  mixed  $config

    # * @return array'
- name: connections
  visibility: public
  parameters: []
  comment: '# * Return all of the created connections.

    # *

    # * @return array'
- name: enableEvents
  visibility: public
  parameters: []
  comment: '# * Enable the firing of Redis command events.

    # *

    # * @return void'
- name: disableEvents
  visibility: public
  parameters: []
  comment: '# * Disable the firing of Redis command events.

    # *

    # * @return void'
- name: setDriver
  visibility: public
  parameters:
  - name: driver
  comment: '# * Set the default driver.

    # *

    # * @param  string  $driver

    # * @return void'
- name: purge
  visibility: public
  parameters:
  - name: name
    default: 'null'
  comment: '# * Disconnect the given connection and remove from local cache.

    # *

    # * @param  string|null  $name

    # * @return void'
- name: extend
  visibility: public
  parameters:
  - name: driver
  - name: callback
  comment: '# * Register a custom driver creator Closure.

    # *

    # * @param  string  $driver

    # * @param  \Closure  $callback

    # * @return $this'
- name: __call
  visibility: public
  parameters:
  - name: method
  - name: parameters
  comment: '# * Pass methods onto the default Redis connection.

    # *

    # * @param  string  $method

    # * @param  array  $parameters

    # * @return mixed'
traits:
- Closure
- Illuminate\Contracts\Redis\Factory
- Illuminate\Redis\Connections\Connection
- Illuminate\Redis\Connectors\PhpRedisConnector
- Illuminate\Redis\Connectors\PredisConnector
- Illuminate\Support\Arr
- Illuminate\Support\ConfigurationUrlParser
- InvalidArgumentException
interfaces:
- Factory
