name: PredisConnection
class_comment: '# * @mixin \Predis\Client'
dependencies:
- name: Closure
  type: class
  source: Closure
- name: ConnectionContract
  type: class
  source: Illuminate\Contracts\Redis\Connection
- name: ArrayableArgument
  type: class
  source: Predis\Command\Argument\ArrayableArgument
properties:
- name: client
  visibility: protected
  comment: '# * @mixin \Predis\Client

    # */

    # class PredisConnection extends Connection implements ConnectionContract

    # {

    # /**

    # * The Predis client.

    # *

    # * @var \Predis\Client'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: client
  comment: "# * @mixin \\Predis\\Client\n# */\n# class PredisConnection extends Connection\
    \ implements ConnectionContract\n# {\n# /**\n# * The Predis client.\n# *\n# *\
    \ @var \\Predis\\Client\n# */\n# protected $client;\n# \n# /**\n# * Create a new\
    \ Predis connection.\n# *\n# * @param  \\Predis\\Client  $client\n# * @return\
    \ void"
- name: createSubscription
  visibility: public
  parameters:
  - name: channels
  - name: callback
  - name: method
    default: '''subscribe'''
  comment: '# * Subscribe to a set of given channels for messages.

    # *

    # * @param  array|string  $channels

    # * @param  \Closure  $callback

    # * @param  string  $method

    # * @return void'
- name: parseParametersForEvent
  visibility: protected
  parameters:
  - name: parameters
  comment: '# * Parse the command''s parameters for event dispatching.

    # *

    # * @param  array  $parameters

    # * @return array'
traits:
- Closure
- Predis\Command\Argument\ArrayableArgument
interfaces:
- ConnectionContract
