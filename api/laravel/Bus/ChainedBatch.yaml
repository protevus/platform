name: ChainedBatch
class_comment: null
dependencies:
- name: Container
  type: class
  source: Illuminate\Container\Container
- name: Dispatcher
  type: class
  source: Illuminate\Contracts\Bus\Dispatcher
- name: ShouldQueue
  type: class
  source: Illuminate\Contracts\Queue\ShouldQueue
- name: Dispatchable
  type: class
  source: Illuminate\Foundation\Bus\Dispatchable
- name: InteractsWithQueue
  type: class
  source: Illuminate\Queue\InteractsWithQueue
- name: Collection
  type: class
  source: Illuminate\Support\Collection
- name: Throwable
  type: class
  source: Throwable
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: batch
  comment: "# * The collection of batched jobs.\n# *\n# * @var \\Illuminate\\Support\\\
    Collection\n# */\n# public Collection $jobs;\n# \n# /**\n# * The name of the batch.\n\
    # *\n# * @var string\n# */\n# public string $name;\n# \n# /**\n# * The batch options.\n\
    # *\n# * @var array\n# */\n# public array $options;\n# \n# /**\n# * Create a new\
    \ chained batch instance.\n# *\n# * @param  \\Illuminate\\Bus\\PendingBatch  $batch\n\
    # * @return void"
- name: prepareNestedBatches
  visibility: public
  parameters:
  - name: jobs
  comment: '# * Prepare any nested batches within the given collection of jobs.

    # *

    # * @param  \Illuminate\Support\Collection  $jobs

    # * @return \Illuminate\Support\Collection'
- name: handle
  visibility: public
  parameters: []
  comment: '# * Handle the job.

    # *

    # * @return void'
- name: toPendingBatch
  visibility: public
  parameters: []
  comment: '# * Convert the chained batch instance into a pending batch.

    # *

    # * @return \Illuminate\Bus\PendingBatch'
- name: attachRemainderOfChainToEndOfBatch
  visibility: protected
  parameters:
  - name: batch
  comment: '# * Move the remainder of the chain to a "finally" batch callback.

    # *

    # * @param  \Illuminate\Bus\PendingBatch  $batch

    # * @return \Illuminate\Bus\PendingBatch'
traits:
- Illuminate\Container\Container
- Illuminate\Contracts\Bus\Dispatcher
- Illuminate\Contracts\Queue\ShouldQueue
- Illuminate\Foundation\Bus\Dispatchable
- Illuminate\Queue\InteractsWithQueue
- Illuminate\Support\Collection
- Throwable
- Batchable
interfaces:
- ShouldQueue
