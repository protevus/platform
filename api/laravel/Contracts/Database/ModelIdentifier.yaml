name: ModelIdentifier
class_comment: null
dependencies: []
properties:
- name: class
  visibility: public
  comment: '# * The class name of the model.

    # *

    # * @var string'
- name: id
  visibility: public
  comment: '# * The unique identifier of the model.

    # *

    # * This may be either a single ID or an array of IDs.

    # *

    # * @var mixed'
- name: relations
  visibility: public
  comment: '# * The relationships loaded on the model.

    # *

    # * @var array'
- name: connection
  visibility: public
  comment: '# * The connection name of the model.

    # *

    # * @var string|null'
- name: collectionClass
  visibility: public
  comment: '# * The class name of the model collection.

    # *

    # * @var string|null'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: class
  - name: id
  - name: relations
  - name: connection
  comment: "# * The class name of the model.\n# *\n# * @var string\n# */\n# public\
    \ $class;\n# \n# /**\n# * The unique identifier of the model.\n# *\n# * This may\
    \ be either a single ID or an array of IDs.\n# *\n# * @var mixed\n# */\n# public\
    \ $id;\n# \n# /**\n# * The relationships loaded on the model.\n# *\n# * @var array\n\
    # */\n# public $relations;\n# \n# /**\n# * The connection name of the model.\n\
    # *\n# * @var string|null\n# */\n# public $connection;\n# \n# /**\n# * The class\
    \ name of the model collection.\n# *\n# * @var string|null\n# */\n# public $collectionClass;\n\
    # \n# /**\n# * Create a new model identifier.\n# *\n# * @param  string  $class\n\
    # * @param  mixed  $id\n# * @param  array  $relations\n# * @param  mixed  $connection\n\
    # * @return void"
- name: useCollectionClass
  visibility: public
  parameters:
  - name: collectionClass
  comment: '# * Specify the collection class that should be used when serializing
    / restoring collections.

    # *

    # * @param  string|null  $collectionClass

    # * @return $this'
traits: []
interfaces: []
