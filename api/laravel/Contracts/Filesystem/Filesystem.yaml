name: Filesystem
class_comment: null
dependencies: []
properties: []
methods:
- name: path
  visibility: public
  parameters:
  - name: path
  comment: "# * The public visibility setting.\n# *\n# * @var string\n# */\n# const\
    \ VISIBILITY_PUBLIC = 'public';\n# \n# /**\n# * The private visibility setting.\n\
    # *\n# * @var string\n# */\n# const VISIBILITY_PRIVATE = 'private';\n# \n# /**\n\
    # * Get the full path to the file that exists at the given relative path.\n# *\n\
    # * @param  string  $path\n# * @return string"
- name: exists
  visibility: public
  parameters:
  - name: path
  comment: '# * Determine if a file exists.

    # *

    # * @param  string  $path

    # * @return bool'
- name: get
  visibility: public
  parameters:
  - name: path
  comment: '# * Get the contents of a file.

    # *

    # * @param  string  $path

    # * @return string|null'
- name: readStream
  visibility: public
  parameters:
  - name: path
  comment: '# * Get a resource to read the file.

    # *

    # * @param  string  $path

    # * @return resource|null The path resource or null on failure.'
- name: put
  visibility: public
  parameters:
  - name: path
  - name: contents
  - name: options
    default: '[]'
  comment: '# * Write the contents of a file.

    # *

    # * @param  string  $path

    # * @param  \Psr\Http\Message\StreamInterface|\Illuminate\Http\File|\Illuminate\Http\UploadedFile|string|resource  $contents

    # * @param  mixed  $options

    # * @return bool'
- name: putFile
  visibility: public
  parameters:
  - name: path
  - name: file
    default: 'null'
  - name: options
    default: '[]'
  comment: '# * Store the uploaded file on the disk.

    # *

    # * @param  \Illuminate\Http\File|\Illuminate\Http\UploadedFile|string  $path

    # * @param  \Illuminate\Http\File|\Illuminate\Http\UploadedFile|string|array|null  $file

    # * @param  mixed  $options

    # * @return string|false'
- name: putFileAs
  visibility: public
  parameters:
  - name: path
  - name: file
  - name: name
    default: 'null'
  - name: options
    default: '[]'
  comment: '# * Store the uploaded file on the disk with a given name.

    # *

    # * @param  \Illuminate\Http\File|\Illuminate\Http\UploadedFile|string  $path

    # * @param  \Illuminate\Http\File|\Illuminate\Http\UploadedFile|string|array|null  $file

    # * @param  string|array|null  $name

    # * @param  mixed  $options

    # * @return string|false'
- name: writeStream
  visibility: public
  parameters:
  - name: path
  - name: resource
  - name: options
    default: '[]'
  comment: '# * Write a new file using a stream.

    # *

    # * @param  string  $path

    # * @param  resource  $resource

    # * @param  array  $options

    # * @return bool'
- name: getVisibility
  visibility: public
  parameters:
  - name: path
  comment: '# * Get the visibility for the given path.

    # *

    # * @param  string  $path

    # * @return string'
- name: setVisibility
  visibility: public
  parameters:
  - name: path
  - name: visibility
  comment: '# * Set the visibility for the given path.

    # *

    # * @param  string  $path

    # * @param  string  $visibility

    # * @return bool'
- name: prepend
  visibility: public
  parameters:
  - name: path
  - name: data
  comment: '# * Prepend to a file.

    # *

    # * @param  string  $path

    # * @param  string  $data

    # * @return bool'
- name: append
  visibility: public
  parameters:
  - name: path
  - name: data
  comment: '# * Append to a file.

    # *

    # * @param  string  $path

    # * @param  string  $data

    # * @return bool'
- name: delete
  visibility: public
  parameters:
  - name: paths
  comment: '# * Delete the file at a given path.

    # *

    # * @param  string|array  $paths

    # * @return bool'
- name: copy
  visibility: public
  parameters:
  - name: from
  - name: to
  comment: '# * Copy a file to a new location.

    # *

    # * @param  string  $from

    # * @param  string  $to

    # * @return bool'
- name: move
  visibility: public
  parameters:
  - name: from
  - name: to
  comment: '# * Move a file to a new location.

    # *

    # * @param  string  $from

    # * @param  string  $to

    # * @return bool'
- name: size
  visibility: public
  parameters:
  - name: path
  comment: '# * Get the file size of a given file.

    # *

    # * @param  string  $path

    # * @return int'
- name: lastModified
  visibility: public
  parameters:
  - name: path
  comment: '# * Get the file''s last modification time.

    # *

    # * @param  string  $path

    # * @return int'
- name: files
  visibility: public
  parameters:
  - name: directory
    default: 'null'
  - name: recursive
    default: 'false'
  comment: '# * Get an array of all files in a directory.

    # *

    # * @param  string|null  $directory

    # * @param  bool  $recursive

    # * @return array'
- name: allFiles
  visibility: public
  parameters:
  - name: directory
    default: 'null'
  comment: '# * Get all of the files from the given directory (recursive).

    # *

    # * @param  string|null  $directory

    # * @return array'
- name: directories
  visibility: public
  parameters:
  - name: directory
    default: 'null'
  - name: recursive
    default: 'false'
  comment: '# * Get all of the directories within a given directory.

    # *

    # * @param  string|null  $directory

    # * @param  bool  $recursive

    # * @return array'
- name: allDirectories
  visibility: public
  parameters:
  - name: directory
    default: 'null'
  comment: '# * Get all (recursive) of the directories within a given directory.

    # *

    # * @param  string|null  $directory

    # * @return array'
- name: makeDirectory
  visibility: public
  parameters:
  - name: path
  comment: '# * Create a directory.

    # *

    # * @param  string  $path

    # * @return bool'
- name: deleteDirectory
  visibility: public
  parameters:
  - name: directory
  comment: '# * Recursively delete a directory.

    # *

    # * @param  string  $directory

    # * @return bool'
traits: []
interfaces: []
