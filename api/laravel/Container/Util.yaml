name: Util
class_comment: '# * @internal'
dependencies:
- name: Closure
  type: class
  source: Closure
- name: ReflectionNamedType
  type: class
  source: ReflectionNamedType
properties: []
methods:
- name: arrayWrap
  visibility: public
  parameters:
  - name: value
  comment: '# * @internal

    # */

    # class Util

    # {

    # /**

    # * If the given value is not an array and not null, wrap it in one.

    # *

    # * From Arr::wrap() in Illuminate\Support.

    # *

    # * @param  mixed  $value

    # * @return array'
- name: unwrapIfClosure
  visibility: public
  parameters:
  - name: value
  - name: '...$args'
  comment: '# * Return the default value of the given value.

    # *

    # * From global value() helper in Illuminate\Support.

    # *

    # * @param  mixed  $value

    # * @param  mixed  ...$args

    # * @return mixed'
- name: getParameterClassName
  visibility: public
  parameters:
  - name: parameter
  comment: '# * Get the class name of the given parameter''s type, if possible.

    # *

    # * From Reflector::getParameterClassName() in Illuminate\Support.

    # *

    # * @param  \ReflectionParameter  $parameter

    # * @return string|null'
traits:
- Closure
- ReflectionNamedType
interfaces: []
