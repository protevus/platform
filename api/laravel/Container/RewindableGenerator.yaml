name: RewindableGenerator
class_comment: null
dependencies:
- name: Countable
  type: class
  source: Countable
- name: IteratorAggregate
  type: class
  source: IteratorAggregate
- name: Traversable
  type: class
  source: Traversable
properties:
- name: generator
  visibility: protected
  comment: '# * The generator callback.

    # *

    # * @var callable'
- name: count
  visibility: protected
  comment: '# * The number of tagged services.

    # *

    # * @var callable|int'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: generator
  - name: count
  comment: "# * The generator callback.\n# *\n# * @var callable\n# */\n# protected\
    \ $generator;\n# \n# /**\n# * The number of tagged services.\n# *\n# * @var callable|int\n\
    # */\n# protected $count;\n# \n# /**\n# * Create a new generator instance.\n#\
    \ *\n# * @param  callable  $generator\n# * @param  callable|int  $count\n# * @return\
    \ void"
- name: getIterator
  visibility: public
  parameters: []
  comment: '# * Get an iterator from the generator.

    # *

    # * @return \Traversable'
- name: count
  visibility: public
  parameters: []
  comment: '# * Get the total number of tagged services.

    # *

    # * @return int'
traits:
- Countable
- IteratorAggregate
- Traversable
interfaces:
- Countable
