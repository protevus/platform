name: DatabaseMigrationRepository
class_comment: null
dependencies:
- name: Resolver
  type: class
  source: Illuminate\Database\ConnectionResolverInterface
properties:
- name: resolver
  visibility: protected
  comment: '# * The database connection resolver instance.

    # *

    # * @var \Illuminate\Database\ConnectionResolverInterface'
- name: table
  visibility: protected
  comment: '# * The name of the migration table.

    # *

    # * @var string'
- name: connection
  visibility: protected
  comment: '# * The name of the database connection to use.

    # *

    # * @var string'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: resolver
  - name: table
  comment: "# * The database connection resolver instance.\n# *\n# * @var \\Illuminate\\\
    Database\\ConnectionResolverInterface\n# */\n# protected $resolver;\n# \n# /**\n\
    # * The name of the migration table.\n# *\n# * @var string\n# */\n# protected\
    \ $table;\n# \n# /**\n# * The name of the database connection to use.\n# *\n#\
    \ * @var string\n# */\n# protected $connection;\n# \n# /**\n# * Create a new database\
    \ migration repository instance.\n# *\n# * @param  \\Illuminate\\Database\\ConnectionResolverInterface\
    \  $resolver\n# * @param  string  $table\n# * @return void"
- name: getRan
  visibility: public
  parameters: []
  comment: '# * Get the completed migrations.

    # *

    # * @return array'
- name: getMigrations
  visibility: public
  parameters:
  - name: steps
  comment: '# * Get the list of migrations.

    # *

    # * @param  int  $steps

    # * @return array'
- name: getMigrationsByBatch
  visibility: public
  parameters:
  - name: batch
  comment: '# * Get the list of the migrations by batch number.

    # *

    # * @param  int  $batch

    # * @return array'
- name: getLast
  visibility: public
  parameters: []
  comment: '# * Get the last migration batch.

    # *

    # * @return array'
- name: getMigrationBatches
  visibility: public
  parameters: []
  comment: '# * Get the completed migrations with their batch numbers.

    # *

    # * @return array'
- name: log
  visibility: public
  parameters:
  - name: file
  - name: batch
  comment: '# * Log that a migration was run.

    # *

    # * @param  string  $file

    # * @param  int  $batch

    # * @return void'
- name: delete
  visibility: public
  parameters:
  - name: migration
  comment: '# * Remove a migration from the log.

    # *

    # * @param  object  $migration

    # * @return void'
- name: getNextBatchNumber
  visibility: public
  parameters: []
  comment: '# * Get the next migration batch number.

    # *

    # * @return int'
- name: getLastBatchNumber
  visibility: public
  parameters: []
  comment: '# * Get the last migration batch number.

    # *

    # * @return int'
- name: createRepository
  visibility: public
  parameters: []
  comment: '# * Create the migration repository data store.

    # *

    # * @return void'
- name: repositoryExists
  visibility: public
  parameters: []
  comment: '# * Determine if the migration repository exists.

    # *

    # * @return bool'
- name: deleteRepository
  visibility: public
  parameters: []
  comment: '# * Delete the migration repository data store.

    # *

    # * @return void'
- name: table
  visibility: protected
  parameters: []
  comment: '# * Get a query builder for the migration table.

    # *

    # * @return \Illuminate\Database\Query\Builder'
- name: getConnectionResolver
  visibility: public
  parameters: []
  comment: '# * Get the connection resolver instance.

    # *

    # * @return \Illuminate\Database\ConnectionResolverInterface'
- name: getConnection
  visibility: public
  parameters: []
  comment: '# * Resolve the database connection instance.

    # *

    # * @return \Illuminate\Database\Connection'
- name: setSource
  visibility: public
  parameters:
  - name: name
  comment: '# * Set the information source to gather data.

    # *

    # * @param  string  $name

    # * @return void'
traits: []
interfaces:
- MigrationRepositoryInterface
