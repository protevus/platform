name: DbCommand
class_comment: null
dependencies:
- name: Command
  type: class
  source: Illuminate\Console\Command
- name: ConfigurationUrlParser
  type: class
  source: Illuminate\Support\ConfigurationUrlParser
- name: AsCommand
  type: class
  source: Symfony\Component\Console\Attribute\AsCommand
- name: Process
  type: class
  source: Symfony\Component\Process\Process
- name: UnexpectedValueException
  type: class
  source: UnexpectedValueException
properties:
- name: signature
  visibility: protected
  comment: '# * The name and signature of the console command.

    # *

    # * @var string'
- name: description
  visibility: protected
  comment: '# * The console command description.

    # *

    # * @var string'
methods:
- name: handle
  visibility: public
  parameters: []
  comment: "# * The name and signature of the console command.\n# *\n# * @var string\n\
    # */\n# protected $signature = 'db {connection? : The database connection that\
    \ should be used}\n# {--read : Connect to the read connection}\n# {--write : Connect\
    \ to the write connection}';\n# \n# /**\n# * The console command description.\n\
    # *\n# * @var string\n# */\n# protected $description = 'Start a new database CLI\
    \ session';\n# \n# /**\n# * Execute the console command.\n# *\n# * @return int"
- name: getConnection
  visibility: public
  parameters: []
  comment: '# * Get the database connection configuration.

    # *

    # * @return array

    # *

    # * @throws \UnexpectedValueException'
- name: commandArguments
  visibility: public
  parameters:
  - name: connection
  comment: '# * Get the arguments for the database client command.

    # *

    # * @param  array  $connection

    # * @return array'
- name: commandEnvironment
  visibility: public
  parameters:
  - name: connection
  comment: '# * Get the environment variables for the database client command.

    # *

    # * @param  array  $connection

    # * @return array|null'
- name: getCommand
  visibility: public
  parameters:
  - name: connection
  comment: '# * Get the database client command to run.

    # *

    # * @param  array  $connection

    # * @return string'
- name: getMysqlArguments
  visibility: protected
  parameters:
  - name: connection
  comment: '# * Get the arguments for the MySQL CLI.

    # *

    # * @param  array  $connection

    # * @return array'
- name: getMariaDbArguments
  visibility: protected
  parameters:
  - name: connection
  comment: '# * Get the arguments for the MariaDB CLI.

    # *

    # * @param  array  $connection

    # * @return array'
- name: getPgsqlArguments
  visibility: protected
  parameters:
  - name: connection
  comment: '# * Get the arguments for the Postgres CLI.

    # *

    # * @param  array  $connection

    # * @return array'
- name: getSqliteArguments
  visibility: protected
  parameters:
  - name: connection
  comment: '# * Get the arguments for the SQLite CLI.

    # *

    # * @param  array  $connection

    # * @return array'
- name: getSqlsrvArguments
  visibility: protected
  parameters:
  - name: connection
  comment: '# * Get the arguments for the SQL Server CLI.

    # *

    # * @param  array  $connection

    # * @return array'
- name: getPgsqlEnvironment
  visibility: protected
  parameters:
  - name: connection
  comment: '# * Get the environment variables for the Postgres CLI.

    # *

    # * @param  array  $connection

    # * @return array|null'
- name: getOptionalArguments
  visibility: protected
  parameters:
  - name: args
  - name: connection
  comment: '# * Get the optional arguments based on the connection configuration.

    # *

    # * @param  array  $args

    # * @param  array  $connection

    # * @return array'
traits:
- Illuminate\Console\Command
- Illuminate\Support\ConfigurationUrlParser
- Symfony\Component\Console\Attribute\AsCommand
- Symfony\Component\Process\Process
- UnexpectedValueException
interfaces: []
