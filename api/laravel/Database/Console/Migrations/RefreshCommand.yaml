name: RefreshCommand
class_comment: null
dependencies:
- name: Command
  type: class
  source: Illuminate\Console\Command
- name: ConfirmableTrait
  type: class
  source: Illuminate\Console\ConfirmableTrait
- name: Prohibitable
  type: class
  source: Illuminate\Console\Prohibitable
- name: Dispatcher
  type: class
  source: Illuminate\Contracts\Events\Dispatcher
- name: DatabaseRefreshed
  type: class
  source: Illuminate\Database\Events\DatabaseRefreshed
- name: AsCommand
  type: class
  source: Symfony\Component\Console\Attribute\AsCommand
- name: InputOption
  type: class
  source: Symfony\Component\Console\Input\InputOption
properties:
- name: name
  visibility: protected
  comment: '# * The console command name.

    # *

    # * @var string'
- name: description
  visibility: protected
  comment: '# * The console command description.

    # *

    # * @var string'
methods:
- name: handle
  visibility: public
  parameters: []
  comment: "# * The console command name.\n# *\n# * @var string\n# */\n# protected\
    \ $name = 'migrate:refresh';\n# \n# /**\n# * The console command description.\n\
    # *\n# * @var string\n# */\n# protected $description = 'Reset and re-run all migrations';\n\
    # \n# /**\n# * Execute the console command.\n# *\n# * @return int"
- name: runRollback
  visibility: protected
  parameters:
  - name: database
  - name: path
  - name: step
  comment: '# * Run the rollback command.

    # *

    # * @param  string  $database

    # * @param  string  $path

    # * @param  int  $step

    # * @return void'
- name: runReset
  visibility: protected
  parameters:
  - name: database
  - name: path
  comment: '# * Run the reset command.

    # *

    # * @param  string  $database

    # * @param  string  $path

    # * @return void'
- name: needsSeeding
  visibility: protected
  parameters: []
  comment: '# * Determine if the developer has requested database seeding.

    # *

    # * @return bool'
- name: runSeeder
  visibility: protected
  parameters:
  - name: database
  comment: '# * Run the database seeder command.

    # *

    # * @param  string  $database

    # * @return void'
- name: getOptions
  visibility: protected
  parameters: []
  comment: '# * Get the console command options.

    # *

    # * @return array'
traits:
- Illuminate\Console\Command
- Illuminate\Console\ConfirmableTrait
- Illuminate\Console\Prohibitable
- Illuminate\Contracts\Events\Dispatcher
- Illuminate\Database\Events\DatabaseRefreshed
- Symfony\Component\Console\Attribute\AsCommand
- Symfony\Component\Console\Input\InputOption
- ConfirmableTrait
interfaces: []
