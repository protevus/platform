name: DatabaseTransactionRecord
class_comment: null
dependencies: []
properties:
- name: connection
  visibility: public
  comment: '# * The name of the database connection.

    # *

    # * @var string'
- name: level
  visibility: public
  comment: '# * The transaction level.

    # *

    # * @var int'
- name: parent
  visibility: public
  comment: '# * The parent instance of this transaction.

    # *

    # * @var \Illuminate\Database\DatabaseTransactionRecord'
- name: callbacks
  visibility: protected
  comment: '# * The callbacks that should be executed after committing.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: connection
  - name: level
  - name: parent
    default: 'null'
  comment: "# * The name of the database connection.\n# *\n# * @var string\n# */\n\
    # public $connection;\n# \n# /**\n# * The transaction level.\n# *\n# * @var int\n\
    # */\n# public $level;\n# \n# /**\n# * The parent instance of this transaction.\n\
    # *\n# * @var \\Illuminate\\Database\\DatabaseTransactionRecord\n# */\n# public\
    \ $parent;\n# \n# /**\n# * The callbacks that should be executed after committing.\n\
    # *\n# * @var array\n# */\n# protected $callbacks = [];\n# \n# /**\n# * Create\
    \ a new database transaction record instance.\n# *\n# * @param  string  $connection\n\
    # * @param  int  $level\n# * @param  \\Illuminate\\Database\\DatabaseTransactionRecord|null\
    \  $parent\n# * @return void"
- name: addCallback
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a callback to be executed after committing.

    # *

    # * @param  callable  $callback

    # * @return void'
- name: executeCallbacks
  visibility: public
  parameters: []
  comment: '# * Execute all of the callbacks.

    # *

    # * @return void'
- name: getCallbacks
  visibility: public
  parameters: []
  comment: '# * Get all of the callbacks.

    # *

    # * @return array'
traits: []
interfaces: []
