name: Relationship
class_comment: null
dependencies:
- name: Model
  type: class
  source: Illuminate\Database\Eloquent\Model
- name: BelongsToMany
  type: class
  source: Illuminate\Database\Eloquent\Relations\BelongsToMany
- name: HasOneOrMany
  type: class
  source: Illuminate\Database\Eloquent\Relations\HasOneOrMany
- name: MorphOneOrMany
  type: class
  source: Illuminate\Database\Eloquent\Relations\MorphOneOrMany
properties:
- name: factory
  visibility: protected
  comment: '# * The related factory instance.

    # *

    # * @var \Illuminate\Database\Eloquent\Factories\Factory'
- name: relationship
  visibility: protected
  comment: '# * The relationship name.

    # *

    # * @var string'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: factory
  - name: relationship
  comment: "# * The related factory instance.\n# *\n# * @var \\Illuminate\\Database\\\
    Eloquent\\Factories\\Factory\n# */\n# protected $factory;\n# \n# /**\n# * The\
    \ relationship name.\n# *\n# * @var string\n# */\n# protected $relationship;\n\
    # \n# /**\n# * Create a new child relationship instance.\n# *\n# * @param  \\\
    Illuminate\\Database\\Eloquent\\Factories\\Factory  $factory\n# * @param  string\
    \  $relationship\n# * @return void"
- name: createFor
  visibility: public
  parameters:
  - name: parent
  comment: '# * Create the child relationship for the given parent model.

    # *

    # * @param  \Illuminate\Database\Eloquent\Model  $parent

    # * @return void'
- name: recycle
  visibility: public
  parameters:
  - name: recycle
  comment: '# * Specify the model instances to always use when creating relationships.

    # *

    # * @param  \Illuminate\Support\Collection  $recycle

    # * @return $this'
traits:
- Illuminate\Database\Eloquent\Model
- Illuminate\Database\Eloquent\Relations\BelongsToMany
- Illuminate\Database\Eloquent\Relations\HasOneOrMany
- Illuminate\Database\Eloquent\Relations\MorphOneOrMany
interfaces: []
