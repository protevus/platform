name: BroadcastableModelEventOccurred
class_comment: null
dependencies:
- name: InteractsWithSockets
  type: class
  source: Illuminate\Broadcasting\InteractsWithSockets
- name: PrivateChannel
  type: class
  source: Illuminate\Broadcasting\PrivateChannel
- name: ShouldBroadcast
  type: class
  source: Illuminate\Contracts\Broadcasting\ShouldBroadcast
- name: SerializesModels
  type: class
  source: Illuminate\Queue\SerializesModels
properties:
- name: model
  visibility: public
  comment: '# * The model instance corresponding to the event.

    # *

    # * @var \Illuminate\Database\Eloquent\Model'
- name: event
  visibility: protected
  comment: '# * The event name (created, updated, etc.).

    # *

    # * @var string'
- name: channels
  visibility: protected
  comment: '# * The channels that the event should be broadcast on.

    # *

    # * @var array'
- name: connection
  visibility: public
  comment: '# * The queue connection that should be used to queue the broadcast job.

    # *

    # * @var string'
- name: queue
  visibility: public
  comment: '# * The queue that should be used to queue the broadcast job.

    # *

    # * @var string'
- name: afterCommit
  visibility: public
  comment: '# * Indicates whether the job should be dispatched after all database
    transactions have committed.

    # *

    # * @var bool|null'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: model
  - name: event
  comment: "# * The model instance corresponding to the event.\n# *\n# * @var \\Illuminate\\\
    Database\\Eloquent\\Model\n# */\n# public $model;\n# \n# /**\n# * The event name\
    \ (created, updated, etc.).\n# *\n# * @var string\n# */\n# protected $event;\n\
    # \n# /**\n# * The channels that the event should be broadcast on.\n# *\n# * @var\
    \ array\n# */\n# protected $channels = [];\n# \n# /**\n# * The queue connection\
    \ that should be used to queue the broadcast job.\n# *\n# * @var string\n# */\n\
    # public $connection;\n# \n# /**\n# * The queue that should be used to queue the\
    \ broadcast job.\n# *\n# * @var string\n# */\n# public $queue;\n# \n# /**\n# *\
    \ Indicates whether the job should be dispatched after all database transactions\
    \ have committed.\n# *\n# * @var bool|null\n# */\n# public $afterCommit;\n# \n\
    # /**\n# * Create a new event instance.\n# *\n# * @param  \\Illuminate\\Database\\\
    Eloquent\\Model  $model\n# * @param  string  $event\n# * @return void"
- name: broadcastOn
  visibility: public
  parameters: []
  comment: '# * The channels the event should broadcast on.

    # *

    # * @return array'
- name: broadcastAs
  visibility: public
  parameters: []
  comment: '# * The name the event should broadcast as.

    # *

    # * @return string'
- name: broadcastWith
  visibility: public
  parameters: []
  comment: '# * Get the data that should be sent with the broadcasted event.

    # *

    # * @return array|null'
- name: onChannels
  visibility: public
  parameters:
  - name: channels
  comment: '# * Manually specify the channels the event should broadcast on.

    # *

    # * @param  array  $channels

    # * @return $this'
- name: shouldBroadcastNow
  visibility: public
  parameters: []
  comment: '# * Determine if the event should be broadcast synchronously.

    # *

    # * @return bool'
- name: event
  visibility: public
  parameters: []
  comment: '# * Get the event name.

    # *

    # * @return string'
traits:
- Illuminate\Broadcasting\InteractsWithSockets
- Illuminate\Broadcasting\PrivateChannel
- Illuminate\Contracts\Broadcasting\ShouldBroadcast
- Illuminate\Queue\SerializesModels
- InteractsWithSockets
interfaces:
- ShouldBroadcast
