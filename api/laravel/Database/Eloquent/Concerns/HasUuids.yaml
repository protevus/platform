name: HasUuids
class_comment: null
dependencies:
- name: ModelNotFoundException
  type: class
  source: Illuminate\Database\Eloquent\ModelNotFoundException
- name: Str
  type: class
  source: Illuminate\Support\Str
properties: []
methods:
- name: initializeHasUuids
  visibility: public
  parameters: []
  comment: '# * Initialize the trait.

    # *

    # * @return void'
- name: uniqueIds
  visibility: public
  parameters: []
  comment: '# * Get the columns that should receive a unique identifier.

    # *

    # * @return array'
- name: newUniqueId
  visibility: public
  parameters: []
  comment: '# * Generate a new UUID for the model.

    # *

    # * @return string'
- name: resolveRouteBindingQuery
  visibility: public
  parameters:
  - name: query
  - name: value
  - name: field
    default: 'null'
  comment: '# * Retrieve the model for a bound value.

    # *

    # * @param  \Illuminate\Database\Eloquent\Model|\Illuminate\Database\Eloquent\Relations\Relation<*,
    *, *>  $query

    # * @param  mixed  $value

    # * @param  string|null  $field

    # * @return \Illuminate\Contracts\Database\Eloquent\Builder

    # *

    # * @throws \Illuminate\Database\Eloquent\ModelNotFoundException'
- name: getKeyType
  visibility: public
  parameters: []
  comment: '# * Get the auto-incrementing key type.

    # *

    # * @return string'
- name: getIncrementing
  visibility: public
  parameters: []
  comment: '# * Get the value indicating whether the IDs are incrementing.

    # *

    # * @return bool'
traits:
- Illuminate\Database\Eloquent\ModelNotFoundException
- Illuminate\Support\Str
interfaces: []
