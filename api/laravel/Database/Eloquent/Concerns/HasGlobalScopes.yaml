name: HasGlobalScopes
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: ScopedBy
  type: class
  source: Illuminate\Database\Eloquent\Attributes\ScopedBy
- name: Scope
  type: class
  source: Illuminate\Database\Eloquent\Scope
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: InvalidArgumentException
  type: class
  source: InvalidArgumentException
- name: ReflectionClass
  type: class
  source: ReflectionClass
properties: []
methods:
- name: bootHasGlobalScopes
  visibility: public
  parameters: []
  comment: '# * Boot the has global scopes trait for a model.

    # *

    # * @return void'
- name: resolveGlobalScopeAttributes
  visibility: public
  parameters: []
  comment: '# * Resolve the global scope class names from the attributes.

    # *

    # * @return array'
- name: addGlobalScope
  visibility: public
  parameters:
  - name: scope
  - name: implementation
    default: 'null'
  comment: '# * Register a new global scope on the model.

    # *

    # * @param  \Illuminate\Database\Eloquent\Scope|\Closure|string  $scope

    # * @param  \Illuminate\Database\Eloquent\Scope|\Closure|null  $implementation

    # * @return mixed

    # *

    # * @throws \InvalidArgumentException'
- name: addGlobalScopes
  visibility: public
  parameters:
  - name: scopes
  comment: '# * Register multiple global scopes on the model.

    # *

    # * @param  array  $scopes

    # * @return void'
- name: hasGlobalScope
  visibility: public
  parameters:
  - name: scope
  comment: '# * Determine if a model has a global scope.

    # *

    # * @param  \Illuminate\Database\Eloquent\Scope|string  $scope

    # * @return bool'
- name: getGlobalScope
  visibility: public
  parameters:
  - name: scope
  comment: '# * Get a global scope registered with the model.

    # *

    # * @param  \Illuminate\Database\Eloquent\Scope|string  $scope

    # * @return \Illuminate\Database\Eloquent\Scope|\Closure|null'
- name: getAllGlobalScopes
  visibility: public
  parameters: []
  comment: '# * Get all of the global scopes that are currently registered.

    # *

    # * @return array'
- name: setAllGlobalScopes
  visibility: public
  parameters:
  - name: scopes
  comment: '# * Set the current global scopes.

    # *

    # * @param  array  $scopes

    # * @return void'
- name: getGlobalScopes
  visibility: public
  parameters: []
  comment: '# * Get the global scopes for this class instance.

    # *

    # * @return array'
traits:
- Closure
- Illuminate\Database\Eloquent\Attributes\ScopedBy
- Illuminate\Database\Eloquent\Scope
- Illuminate\Support\Arr
- InvalidArgumentException
- ReflectionClass
interfaces: []
