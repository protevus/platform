name: CacheBasedSessionHandler
class_comment: null
dependencies:
- name: CacheContract
  type: class
  source: Illuminate\Contracts\Cache\Repository
- name: SessionHandlerInterface
  type: class
  source: SessionHandlerInterface
properties:
- name: cache
  visibility: protected
  comment: '# * The cache repository instance.

    # *

    # * @var \Illuminate\Contracts\Cache\Repository'
- name: minutes
  visibility: protected
  comment: '# * The number of minutes to store the data in the cache.

    # *

    # * @var int'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: cache
  - name: minutes
  comment: "# * The cache repository instance.\n# *\n# * @var \\Illuminate\\Contracts\\\
    Cache\\Repository\n# */\n# protected $cache;\n# \n# /**\n# * The number of minutes\
    \ to store the data in the cache.\n# *\n# * @var int\n# */\n# protected $minutes;\n\
    # \n# /**\n# * Create a new cache driven handler instance.\n# *\n# * @param  \\\
    Illuminate\\Contracts\\Cache\\Repository  $cache\n# * @param  int  $minutes\n\
    # * @return void"
- name: open
  visibility: public
  parameters:
  - name: savePath
  - name: sessionName
  comment: '# * {@inheritdoc}

    # *

    # * @return bool'
- name: close
  visibility: public
  parameters: []
  comment: '# * {@inheritdoc}

    # *

    # * @return bool'
- name: read
  visibility: public
  parameters:
  - name: sessionId
  comment: '# * {@inheritdoc}

    # *

    # * @return string'
- name: write
  visibility: public
  parameters:
  - name: sessionId
  - name: data
  comment: '# * {@inheritdoc}

    # *

    # * @return bool'
- name: destroy
  visibility: public
  parameters:
  - name: sessionId
  comment: '# * {@inheritdoc}

    # *

    # * @return bool'
- name: gc
  visibility: public
  parameters:
  - name: lifetime
  comment: '# * {@inheritdoc}

    # *

    # * @return int'
- name: getCache
  visibility: public
  parameters: []
  comment: '# * Get the underlying cache repository.

    # *

    # * @return \Illuminate\Contracts\Cache\Repository'
traits:
- SessionHandlerInterface
interfaces:
- SessionHandlerInterface
