name: Reflector
class_comment: null
dependencies:
- name: ReflectionClass
  type: class
  source: ReflectionClass
- name: ReflectionEnum
  type: class
  source: ReflectionEnum
- name: ReflectionMethod
  type: class
  source: ReflectionMethod
- name: ReflectionNamedType
  type: class
  source: ReflectionNamedType
- name: ReflectionUnionType
  type: class
  source: ReflectionUnionType
properties: []
methods:
- name: isCallable
  visibility: public
  parameters:
  - name: var
  - name: syntaxOnly
    default: 'false'
  comment: '# * This is a PHP 7.4 compatible implementation of is_callable.

    # *

    # * @param  mixed  $var

    # * @param  bool  $syntaxOnly

    # * @return bool'
- name: getParameterClassName
  visibility: public
  parameters:
  - name: parameter
  comment: '# * Get the class name of the given parameter''s type, if possible.

    # *

    # * @param  \ReflectionParameter  $parameter

    # * @return string|null'
- name: getParameterClassNames
  visibility: public
  parameters:
  - name: parameter
  comment: '# * Get the class names of the given parameter''s type, including union
    types.

    # *

    # * @param  \ReflectionParameter  $parameter

    # * @return array'
- name: getTypeName
  visibility: protected
  parameters:
  - name: parameter
  - name: type
  comment: '# * Get the given type''s class name.

    # *

    # * @param  \ReflectionParameter  $parameter

    # * @param  \ReflectionNamedType  $type

    # * @return string'
- name: isParameterSubclassOf
  visibility: public
  parameters:
  - name: parameter
  - name: className
  comment: '# * Determine if the parameter''s type is a subclass of the given type.

    # *

    # * @param  \ReflectionParameter  $parameter

    # * @param  string  $className

    # * @return bool'
- name: isParameterBackedEnumWithStringBackingType
  visibility: public
  parameters:
  - name: parameter
  comment: '# * Determine if the parameter''s type is a Backed Enum with a string
    backing type.

    # *

    # * @param  \ReflectionParameter  $parameter

    # * @return bool'
traits:
- ReflectionClass
- ReflectionEnum
- ReflectionMethod
- ReflectionNamedType
- ReflectionUnionType
interfaces: []
