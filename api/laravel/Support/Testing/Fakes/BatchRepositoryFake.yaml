name: BatchRepositoryFake
class_comment: null
dependencies:
- name: CarbonImmutable
  type: class
  source: Carbon\CarbonImmutable
- name: Closure
  type: class
  source: Closure
- name: BatchRepository
  type: class
  source: Illuminate\Bus\BatchRepository
- name: PendingBatch
  type: class
  source: Illuminate\Bus\PendingBatch
- name: UpdatedBatchJobCounts
  type: class
  source: Illuminate\Bus\UpdatedBatchJobCounts
- name: Str
  type: class
  source: Illuminate\Support\Str
properties:
- name: batches
  visibility: protected
  comment: '# * The batches stored in the repository.

    # *

    # * @var \Illuminate\Bus\Batch[]'
methods:
- name: get
  visibility: public
  parameters:
  - name: limit
  - name: before
  comment: "# * The batches stored in the repository.\n# *\n# * @var \\Illuminate\\\
    Bus\\Batch[]\n# */\n# protected $batches = [];\n# \n# /**\n# * Retrieve a list\
    \ of batches.\n# *\n# * @param  int  $limit\n# * @param  mixed  $before\n# * @return\
    \ \\Illuminate\\Bus\\Batch[]"
- name: find
  visibility: public
  parameters:
  - name: batchId
  comment: '# * Retrieve information about an existing batch.

    # *

    # * @param  string  $batchId

    # * @return \Illuminate\Bus\Batch|null'
- name: store
  visibility: public
  parameters:
  - name: batch
  comment: '# * Store a new pending batch.

    # *

    # * @param  \Illuminate\Bus\PendingBatch  $batch

    # * @return \Illuminate\Bus\Batch'
- name: incrementTotalJobs
  visibility: public
  parameters:
  - name: batchId
  - name: amount
  comment: '# * Increment the total number of jobs within the batch.

    # *

    # * @param  string  $batchId

    # * @param  int  $amount

    # * @return void'
- name: decrementPendingJobs
  visibility: public
  parameters:
  - name: batchId
  - name: jobId
  comment: '# * Decrement the total number of pending jobs for the batch.

    # *

    # * @param  string  $batchId

    # * @param  string  $jobId

    # * @return \Illuminate\Bus\UpdatedBatchJobCounts'
- name: incrementFailedJobs
  visibility: public
  parameters:
  - name: batchId
  - name: jobId
  comment: '# * Increment the total number of failed jobs for the batch.

    # *

    # * @param  string  $batchId

    # * @param  string  $jobId

    # * @return \Illuminate\Bus\UpdatedBatchJobCounts'
- name: markAsFinished
  visibility: public
  parameters:
  - name: batchId
  comment: '# * Mark the batch that has the given ID as finished.

    # *

    # * @param  string  $batchId

    # * @return void'
- name: cancel
  visibility: public
  parameters:
  - name: batchId
  comment: '# * Cancel the batch that has the given ID.

    # *

    # * @param  string  $batchId

    # * @return void'
- name: delete
  visibility: public
  parameters:
  - name: batchId
  comment: '# * Delete the batch that has the given ID.

    # *

    # * @param  string  $batchId

    # * @return void'
- name: transaction
  visibility: public
  parameters:
  - name: callback
  comment: '# * Execute the given Closure within a storage specific transaction.

    # *

    # * @param  \Closure  $callback

    # * @return mixed'
- name: rollBack
  visibility: public
  parameters: []
  comment: '# * Rollback the last database transaction for the connection.

    # *

    # * @return void'
traits:
- Carbon\CarbonImmutable
- Closure
- Illuminate\Bus\BatchRepository
- Illuminate\Bus\PendingBatch
- Illuminate\Bus\UpdatedBatchJobCounts
- Illuminate\Support\Str
interfaces:
- BatchRepository
