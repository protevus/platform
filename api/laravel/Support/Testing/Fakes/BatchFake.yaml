name: BatchFake
class_comment: null
dependencies:
- name: CarbonImmutable
  type: class
  source: Carbon\CarbonImmutable
- name: Batch
  type: class
  source: Illuminate\Bus\Batch
- name: UpdatedBatchJobCounts
  type: class
  source: Illuminate\Bus\UpdatedBatchJobCounts
- name: Carbon
  type: class
  source: Illuminate\Support\Carbon
- name: Collection
  type: class
  source: Illuminate\Support\Collection
properties:
- name: added
  visibility: public
  comment: '# * The jobs that have been added to the batch.

    # *

    # * @var array'
- name: deleted
  visibility: public
  comment: '# * Indicates if the batch has been deleted.

    # *

    # * @var bool'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: id
  - name: name
  - name: totalJobs
  - name: pendingJobs
  - name: failedJobs
  - name: failedJobIds
  - name: options
  - name: createdAt
  - name: cancelledAt
    default: 'null'
  - name: finishedAt
    default: 'null'
  comment: "# * The jobs that have been added to the batch.\n# *\n# * @var array\n\
    # */\n# public $added = [];\n# \n# /**\n# * Indicates if the batch has been deleted.\n\
    # *\n# * @var bool\n# */\n# public $deleted = false;\n# \n# /**\n# * Create a\
    \ new batch instance.\n# *\n# * @param  string  $id\n# * @param  string  $name\n\
    # * @param  int  $totalJobs\n# * @param  int  $pendingJobs\n# * @param  int  $failedJobs\n\
    # * @param  array  $failedJobIds\n# * @param  array  $options\n# * @param  \\\
    Carbon\\CarbonImmutable  $createdAt\n# * @param  \\Carbon\\CarbonImmutable|null\
    \  $cancelledAt\n# * @param  \\Carbon\\CarbonImmutable|null  $finishedAt\n# *\
    \ @return void"
- name: fresh
  visibility: public
  parameters: []
  comment: '# * Get a fresh instance of the batch represented by this ID.

    # *

    # * @return self'
- name: add
  visibility: public
  parameters:
  - name: jobs
  comment: '# * Add additional jobs to the batch.

    # *

    # * @param  \Illuminate\Support\Enumerable|object|array  $jobs

    # * @return self'
- name: recordSuccessfulJob
  visibility: public
  parameters:
  - name: jobId
  comment: '# * Record that a job within the batch finished successfully, executing
    any callbacks if necessary.

    # *

    # * @param  string  $jobId

    # * @return void'
- name: decrementPendingJobs
  visibility: public
  parameters:
  - name: jobId
  comment: '# * Decrement the pending jobs for the batch.

    # *

    # * @param  string  $jobId

    # * @return \Illuminate\Bus\UpdatedBatchJobCounts'
- name: recordFailedJob
  visibility: public
  parameters:
  - name: jobId
  - name: e
  comment: '# * Record that a job within the batch failed to finish successfully,
    executing any callbacks if necessary.

    # *

    # * @param  string  $jobId

    # * @param  \Throwable  $e

    # * @return void'
- name: incrementFailedJobs
  visibility: public
  parameters:
  - name: jobId
  comment: '# * Increment the failed jobs for the batch.

    # *

    # * @param  string  $jobId

    # * @return \Illuminate\Bus\UpdatedBatchJobCounts'
- name: cancel
  visibility: public
  parameters: []
  comment: '# * Cancel the batch.

    # *

    # * @return void'
- name: delete
  visibility: public
  parameters: []
  comment: '# * Delete the batch from storage.

    # *

    # * @return void'
- name: deleted
  visibility: public
  parameters: []
  comment: '# * Determine if the batch has been deleted.

    # *

    # * @return bool'
traits:
- Carbon\CarbonImmutable
- Illuminate\Bus\Batch
- Illuminate\Bus\UpdatedBatchJobCounts
- Illuminate\Support\Carbon
- Illuminate\Support\Collection
interfaces: []
