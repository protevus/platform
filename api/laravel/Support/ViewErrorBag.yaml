name: ViewErrorBag
class_comment: '# * @mixin \Illuminate\Contracts\Support\MessageBag'
dependencies:
- name: Countable
  type: class
  source: Countable
- name: MessageBagContract
  type: class
  source: Illuminate\Contracts\Support\MessageBag
- name: Stringable
  type: class
  source: Stringable
properties:
- name: bags
  visibility: protected
  comment: '# * @mixin \Illuminate\Contracts\Support\MessageBag

    # */

    # class ViewErrorBag implements Countable, Stringable

    # {

    # /**

    # * The array of the view error bags.

    # *

    # * @var array'
methods:
- name: hasBag
  visibility: public
  parameters:
  - name: key
    default: '''default'''
  comment: "# * @mixin \\Illuminate\\Contracts\\Support\\MessageBag\n# */\n# class\
    \ ViewErrorBag implements Countable, Stringable\n# {\n# /**\n# * The array of\
    \ the view error bags.\n# *\n# * @var array\n# */\n# protected $bags = [];\n#\
    \ \n# /**\n# * Checks if a named MessageBag exists in the bags.\n# *\n# * @param\
    \  string  $key\n# * @return bool"
- name: getBag
  visibility: public
  parameters:
  - name: key
  comment: '# * Get a MessageBag instance from the bags.

    # *

    # * @param  string  $key

    # * @return \Illuminate\Contracts\Support\MessageBag'
- name: getBags
  visibility: public
  parameters: []
  comment: '# * Get all the bags.

    # *

    # * @return array'
- name: put
  visibility: public
  parameters:
  - name: key
  - name: bag
  comment: '# * Add a new MessageBag instance to the bags.

    # *

    # * @param  string  $key

    # * @param  \Illuminate\Contracts\Support\MessageBag  $bag

    # * @return $this'
- name: any
  visibility: public
  parameters: []
  comment: '# * Determine if the default message bag has any messages.

    # *

    # * @return bool'
- name: count
  visibility: public
  parameters: []
  comment: '# * Get the number of messages in the default bag.

    # *

    # * @return int'
- name: __call
  visibility: public
  parameters:
  - name: method
  - name: parameters
  comment: '# * Dynamically call methods on the default bag.

    # *

    # * @param  string  $method

    # * @param  array  $parameters

    # * @return mixed'
- name: __get
  visibility: public
  parameters:
  - name: key
  comment: '# * Dynamically access a view error bag.

    # *

    # * @param  string  $key

    # * @return \Illuminate\Contracts\Support\MessageBag'
- name: __set
  visibility: public
  parameters:
  - name: key
  - name: value
  comment: '# * Dynamically set a view error bag.

    # *

    # * @param  string  $key

    # * @param  \Illuminate\Contracts\Support\MessageBag  $value

    # * @return void'
- name: __toString
  visibility: public
  parameters: []
  comment: '# * Convert the default bag to its string representation.

    # *

    # * @return string'
traits:
- Countable
- Stringable
interfaces:
- Countable
