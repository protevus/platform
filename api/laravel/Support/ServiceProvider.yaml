name: ServiceProvider
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Artisan
  type: class
  source: Illuminate\Console\Application
- name: CachesConfiguration
  type: class
  source: Illuminate\Contracts\Foundation\CachesConfiguration
- name: CachesRoutes
  type: class
  source: Illuminate\Contracts\Foundation\CachesRoutes
- name: DeferrableProvider
  type: class
  source: Illuminate\Contracts\Support\DeferrableProvider
- name: ModelFactory
  type: class
  source: Illuminate\Database\Eloquent\Factory
- name: BladeCompiler
  type: class
  source: Illuminate\View\Compilers\BladeCompiler
properties:
- name: app
  visibility: protected
  comment: '# * The application instance.

    # *

    # * @var \Illuminate\Contracts\Foundation\Application'
- name: bootingCallbacks
  visibility: protected
  comment: '# * All of the registered booting callbacks.

    # *

    # * @var array'
- name: bootedCallbacks
  visibility: protected
  comment: '# * All of the registered booted callbacks.

    # *

    # * @var array'
- name: publishes
  visibility: public
  comment: '# * The paths that should be published.

    # *

    # * @var array'
- name: publishGroups
  visibility: public
  comment: '# * The paths that should be published by group.

    # *

    # * @var array'
- name: publishableMigrationPaths
  visibility: protected
  comment: '# * The migration paths available for publishing.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: app
  comment: "# * The application instance.\n# *\n# * @var \\Illuminate\\Contracts\\\
    Foundation\\Application\n# */\n# protected $app;\n# \n# /**\n# * All of the registered\
    \ booting callbacks.\n# *\n# * @var array\n# */\n# protected $bootingCallbacks\
    \ = [];\n# \n# /**\n# * All of the registered booted callbacks.\n# *\n# * @var\
    \ array\n# */\n# protected $bootedCallbacks = [];\n# \n# /**\n# * The paths that\
    \ should be published.\n# *\n# * @var array\n# */\n# public static $publishes\
    \ = [];\n# \n# /**\n# * The paths that should be published by group.\n# *\n# *\
    \ @var array\n# */\n# public static $publishGroups = [];\n# \n# /**\n# * The migration\
    \ paths available for publishing.\n# *\n# * @var array\n# */\n# protected static\
    \ $publishableMigrationPaths = [];\n# \n# /**\n# * Create a new service provider\
    \ instance.\n# *\n# * @param  \\Illuminate\\Contracts\\Foundation\\Application\
    \  $app\n# * @return void"
- name: register
  visibility: public
  parameters: []
  comment: '# * Register any application services.

    # *

    # * @return void'
- name: booting
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a booting callback to be run before the "boot" method is
    called.

    # *

    # * @param  \Closure  $callback

    # * @return void'
- name: booted
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a booted callback to be run after the "boot" method is called.

    # *

    # * @param  \Closure  $callback

    # * @return void'
- name: callBootingCallbacks
  visibility: public
  parameters: []
  comment: '# * Call the registered booting callbacks.

    # *

    # * @return void'
- name: callBootedCallbacks
  visibility: public
  parameters: []
  comment: '# * Call the registered booted callbacks.

    # *

    # * @return void'
- name: mergeConfigFrom
  visibility: protected
  parameters:
  - name: path
  - name: key
  comment: '# * Merge the given configuration with the existing configuration.

    # *

    # * @param  string  $path

    # * @param  string  $key

    # * @return void'
- name: replaceConfigRecursivelyFrom
  visibility: protected
  parameters:
  - name: path
  - name: key
  comment: '# * Replace the given configuration with the existing configuration recursively.

    # *

    # * @param  string  $path

    # * @param  string  $key

    # * @return void'
- name: loadRoutesFrom
  visibility: protected
  parameters:
  - name: path
  comment: '# * Load the given routes file if routes are not already cached.

    # *

    # * @param  string  $path

    # * @return void'
- name: loadViewsFrom
  visibility: protected
  parameters:
  - name: path
  - name: namespace
  comment: '# * Register a view file namespace.

    # *

    # * @param  string|array  $path

    # * @param  string  $namespace

    # * @return void'
- name: loadViewComponentsAs
  visibility: protected
  parameters:
  - name: prefix
  - name: components
  comment: '# * Register the given view components with a custom prefix.

    # *

    # * @param  string  $prefix

    # * @param  array  $components

    # * @return void'
- name: loadTranslationsFrom
  visibility: protected
  parameters:
  - name: path
  - name: namespace
  comment: '# * Register a translation file namespace.

    # *

    # * @param  string  $path

    # * @param  string  $namespace

    # * @return void'
- name: loadJsonTranslationsFrom
  visibility: protected
  parameters:
  - name: path
  comment: '# * Register a JSON translation file path.

    # *

    # * @param  string  $path

    # * @return void'
- name: loadMigrationsFrom
  visibility: protected
  parameters:
  - name: paths
  comment: '# * Register database migration paths.

    # *

    # * @param  array|string  $paths

    # * @return void'
- name: loadFactoriesFrom
  visibility: protected
  parameters:
  - name: paths
  comment: '# * Register Eloquent model factory paths.

    # *

    # * @deprecated Will be removed in a future Laravel version.

    # *

    # * @param  array|string  $paths

    # * @return void'
- name: callAfterResolving
  visibility: protected
  parameters:
  - name: name
  - name: callback
  comment: '# * Setup an after resolving listener, or fire immediately if already
    resolved.

    # *

    # * @param  string  $name

    # * @param  callable  $callback

    # * @return void'
- name: publishesMigrations
  visibility: protected
  parameters:
  - name: paths
  - name: groups
    default: 'null'
  comment: '# * Register migration paths to be published by the publish command.

    # *

    # * @param  array  $paths

    # * @param  mixed  $groups

    # * @return void'
- name: publishes
  visibility: protected
  parameters:
  - name: paths
  - name: groups
    default: 'null'
  comment: '# * Register paths to be published by the publish command.

    # *

    # * @param  array  $paths

    # * @param  mixed  $groups

    # * @return void'
- name: ensurePublishArrayInitialized
  visibility: protected
  parameters:
  - name: class
  comment: '# * Ensure the publish array for the service provider is initialized.

    # *

    # * @param  string  $class

    # * @return void'
- name: addPublishGroup
  visibility: protected
  parameters:
  - name: group
  - name: paths
  comment: '# * Add a publish group / tag to the service provider.

    # *

    # * @param  string  $group

    # * @param  array  $paths

    # * @return void'
- name: pathsToPublish
  visibility: public
  parameters:
  - name: provider
    default: 'null'
  - name: group
    default: 'null'
  comment: '# * Get the paths to publish.

    # *

    # * @param  string|null  $provider

    # * @param  string|null  $group

    # * @return array'
- name: pathsForProviderOrGroup
  visibility: protected
  parameters:
  - name: provider
  - name: group
  comment: '# * Get the paths for the provider or group (or both).

    # *

    # * @param  string|null  $provider

    # * @param  string|null  $group

    # * @return array'
- name: pathsForProviderAndGroup
  visibility: protected
  parameters:
  - name: provider
  - name: group
  comment: '# * Get the paths for the provider and group.

    # *

    # * @param  string  $provider

    # * @param  string  $group

    # * @return array'
- name: publishableProviders
  visibility: public
  parameters: []
  comment: '# * Get the service providers available for publishing.

    # *

    # * @return array'
- name: publishableMigrationPaths
  visibility: public
  parameters: []
  comment: '# * Get the migration paths available for publishing.

    # *

    # * @return array'
- name: publishableGroups
  visibility: public
  parameters: []
  comment: '# * Get the groups available for publishing.

    # *

    # * @return array'
- name: commands
  visibility: public
  parameters:
  - name: commands
  comment: '# * Register the package''s custom Artisan commands.

    # *

    # * @param  array|mixed  $commands

    # * @return void'
- name: provides
  visibility: public
  parameters: []
  comment: '# * Get the services provided by the provider.

    # *

    # * @return array'
- name: when
  visibility: public
  parameters: []
  comment: '# * Get the events that trigger this service provider to register.

    # *

    # * @return array'
- name: isDeferred
  visibility: public
  parameters: []
  comment: '# * Determine if the provider is deferred.

    # *

    # * @return bool'
- name: defaultProviders
  visibility: public
  parameters: []
  comment: '# * Get the default providers for a Laravel application.

    # *

    # * @return \Illuminate\Support\DefaultProviders'
- name: addProviderToBootstrapFile
  visibility: public
  parameters:
  - name: provider
  - name: path
    default: 'null'
  comment: '# * Add the given provider to the application''s provider bootstrap file.

    # *

    # * @param  string  $provider

    # * @param  string  $path

    # * @return bool'
traits:
- Closure
- Illuminate\Contracts\Foundation\CachesConfiguration
- Illuminate\Contracts\Foundation\CachesRoutes
- Illuminate\Contracts\Support\DeferrableProvider
- Illuminate\View\Compilers\BladeCompiler
interfaces: []
