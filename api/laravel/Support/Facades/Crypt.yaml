name: Crypt
class_comment: '# * @method static bool supported(string $key, string $cipher)

  # * @method static string generateKey(string $cipher)

  # * @method static string encrypt(mixed $value, bool $serialize = true)

  # * @method static string encryptString(string $value)

  # * @method static mixed decrypt(string $payload, bool $unserialize = true)

  # * @method static string decryptString(string $payload)

  # * @method static string getKey()

  # * @method static array getAllKeys()

  # * @method static array getPreviousKeys()

  # * @method static \Illuminate\Encryption\Encrypter previousKeys(array $keys)

  # *

  # * @see \Illuminate\Encryption\Encrypter'
dependencies: []
properties: []
methods:
- name: getFacadeAccessor
  visibility: protected
  parameters: []
  comment: '# * @method static bool supported(string $key, string $cipher)

    # * @method static string generateKey(string $cipher)

    # * @method static string encrypt(mixed $value, bool $serialize = true)

    # * @method static string encryptString(string $value)

    # * @method static mixed decrypt(string $payload, bool $unserialize = true)

    # * @method static string decryptString(string $payload)

    # * @method static string getKey()

    # * @method static array getAllKeys()

    # * @method static array getPreviousKeys()

    # * @method static \Illuminate\Encryption\Encrypter previousKeys(array $keys)

    # *

    # * @see \Illuminate\Encryption\Encrypter

    # */

    # class Crypt extends Facade

    # {

    # /**

    # * Get the registered name of the component.

    # *

    # * @return string'
traits: []
interfaces: []
