name: Composer
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Filesystem
  type: class
  source: Illuminate\Filesystem\Filesystem
- name: RuntimeException
  type: class
  source: RuntimeException
- name: OutputInterface
  type: class
  source: Symfony\Component\Console\Output\OutputInterface
- name: PhpExecutableFinder
  type: class
  source: Symfony\Component\Process\PhpExecutableFinder
- name: Process
  type: class
  source: Symfony\Component\Process\Process
properties:
- name: files
  visibility: protected
  comment: '# * The filesystem instance.

    # *

    # * @var \Illuminate\Filesystem\Filesystem'
- name: workingPath
  visibility: protected
  comment: '# * The working path to regenerate from.

    # *

    # * @var string|null'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: files
  - name: workingPath
    default: 'null'
  comment: "# * The filesystem instance.\n# *\n# * @var \\Illuminate\\Filesystem\\\
    Filesystem\n# */\n# protected $files;\n# \n# /**\n# * The working path to regenerate\
    \ from.\n# *\n# * @var string|null\n# */\n# protected $workingPath;\n# \n# /**\n\
    # * Create a new Composer manager instance.\n# *\n# * @param  \\Illuminate\\Filesystem\\\
    Filesystem  $files\n# * @param  string|null  $workingPath\n# * @return void"
- name: hasPackage
  visibility: protected
  parameters:
  - name: package
  comment: '# * Determine if the given Composer package is installed.

    # *

    # * @param  string  $package

    # * @return bool

    # *

    # * @throw \RuntimeException'
- name: requirePackages
  visibility: public
  parameters:
  - name: packages
  - name: dev
    default: 'false'
  - name: output
    default: 'null'
  - name: composerBinary
    default: 'null'
  comment: '# * Install the given Composer packages into the application.

    # *

    # * @param  array<int, string>  $packages

    # * @param  bool  $dev

    # * @param  \Closure|\Symfony\Component\Console\Output\OutputInterface|null  $output

    # * @param  string|null  $composerBinary

    # * @return bool'
- name: removePackages
  visibility: public
  parameters:
  - name: packages
  - name: dev
    default: 'false'
  - name: output
    default: 'null'
  - name: composerBinary
    default: 'null'
  comment: '# * Remove the given Composer packages from the application.

    # *

    # * @param  array<int, string>  $packages

    # * @param  bool  $dev

    # * @param  \Closure|\Symfony\Component\Console\Output\OutputInterface|null  $output

    # * @param  string|null  $composerBinary

    # * @return bool'
- name: modify
  visibility: public
  parameters:
  - name: callback
  comment: '# * Modify the "composer.json" file contents using the given callback.

    # *

    # * @param  callable(array):array  $callback

    # * @return void

    # *

    # * @throw \RuntimeException'
- name: dumpAutoloads
  visibility: public
  parameters:
  - name: extra
    default: ''''''
  - name: composerBinary
    default: 'null'
  comment: '# * Regenerate the Composer autoloader files.

    # *

    # * @param  string|array  $extra

    # * @param  string|null  $composerBinary

    # * @return int'
- name: dumpOptimized
  visibility: public
  parameters:
  - name: composerBinary
    default: 'null'
  comment: '# * Regenerate the optimized Composer autoloader files.

    # *

    # * @param  string|null  $composerBinary

    # * @return int'
- name: findComposer
  visibility: public
  parameters:
  - name: composerBinary
    default: 'null'
  comment: '# * Get the Composer binary / command for the environment.

    # *

    # * @param  string|null  $composerBinary

    # * @return array'
- name: findComposerFile
  visibility: protected
  parameters: []
  comment: '# * Get the path to the "composer.json" file.

    # *

    # * @return string

    # *

    # * @throw \RuntimeException'
- name: phpBinary
  visibility: protected
  parameters: []
  comment: '# * Get the PHP binary.

    # *

    # * @return string'
- name: getProcess
  visibility: protected
  parameters:
  - name: command
  - name: env
    default: '[]'
  comment: '# * Get a new Symfony process instance.

    # *

    # * @param  array  $command

    # * @param  array  $env

    # * @return \Symfony\Component\Process\Process'
- name: setWorkingPath
  visibility: public
  parameters:
  - name: path
  comment: '# * Set the working path used by the class.

    # *

    # * @param  string  $path

    # * @return $this'
- name: getVersion
  visibility: public
  parameters: []
  comment: '# * Get the version of Composer.

    # *

    # * @return string|null'
traits:
- Closure
- Illuminate\Filesystem\Filesystem
- RuntimeException
- Symfony\Component\Console\Output\OutputInterface
- Symfony\Component\Process\PhpExecutableFinder
- Symfony\Component\Process\Process
interfaces: []
