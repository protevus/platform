name: ValidatesWhenResolvedTrait
class_comment: null
dependencies:
- name: Precognition
  type: class
  source: Illuminate\Foundation\Precognition
properties: []
methods:
- name: validateResolved
  visibility: public
  parameters: []
  comment: '# * Provides default implementation of ValidatesWhenResolved contract.

    # */

    # trait ValidatesWhenResolvedTrait

    # {

    # /**

    # * Validate the class instance.

    # *

    # * @return void'
- name: prepareForValidation
  visibility: protected
  parameters: []
  comment: '# * Prepare the data for validation.

    # *

    # * @return void'
- name: getValidatorInstance
  visibility: protected
  parameters: []
  comment: '# * Get the validator instance for the request.

    # *

    # * @return \Illuminate\Validation\Validator'
- name: passedValidation
  visibility: protected
  parameters: []
  comment: '# * Handle a passed validation attempt.

    # *

    # * @return void'
- name: failedValidation
  visibility: protected
  parameters:
  - name: validator
  comment: '# * Handle a failed validation attempt.

    # *

    # * @param  \Illuminate\Validation\Validator  $validator

    # * @return void

    # *

    # * @throws \Illuminate\Validation\ValidationException'
- name: passesAuthorization
  visibility: protected
  parameters: []
  comment: '# * Determine if the request passes the authorization check.

    # *

    # * @return bool'
- name: failedAuthorization
  visibility: protected
  parameters: []
  comment: '# * Handle a failed authorization attempt.

    # *

    # * @return void

    # *

    # * @throws \Illuminate\Validation\UnauthorizedException'
traits:
- Illuminate\Foundation\Precognition
interfaces: []
