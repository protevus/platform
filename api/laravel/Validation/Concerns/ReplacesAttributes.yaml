name: ReplacesAttributes
class_comment: null
dependencies:
- name: Arr
  type: class
  source: Illuminate\Support\Arr
properties: []
methods:
- name: replaceAcceptedIf
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the accepted_if rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDeclinedIf
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the declined_if rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceBetween
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the between rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDateFormat
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the date_format rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDecimal
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the decimal rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,int>  $parameters

    # * @return string'
- name: replaceDifferent
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the different rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDigits
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the digits rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDigitsBetween
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the digits (between) rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceExtensions
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the extensions rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMin
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the min rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMinDigits
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the min digits rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMax
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the max rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMaxDigits
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the max digits rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMissingIf
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the missing_if rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMissingUnless
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the missing_unless rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMissingWith
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the missing_with rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMissingWithAll
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the missing_with_all rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMultipleOf
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the multiple_of rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceIn
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the in rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceNotIn
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the not_in rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceInArray
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the in_array rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredArrayKeys
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_array_keys rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMimetypes
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the mimetypes rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceMimes
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the mimes rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replacePresentIf
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the present_if rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replacePresentUnless
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the present_unless rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replacePresentWith
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the present_with rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replacePresentWithAll
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the present_with_all rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredWith
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_with rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredWithAll
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_with_all rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredWithout
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_without rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredWithoutAll
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_without_all rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceSize
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the size rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceGt
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the gt rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceLt
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the lt rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceGte
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the gte rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceLte
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the lte rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredIf
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_if rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredIfAccepted
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_if_accepted rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredIfDeclined
  visibility: public
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_if_declined rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceRequiredUnless
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the required_unless rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceProhibitedIf
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the prohibited_if rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceProhibitedUnless
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the prohibited_unless rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceProhibits
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the prohibited_with rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceSame
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the same rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceBefore
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the before rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceBeforeOrEqual
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the before_or_equal rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceAfter
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the after rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceAfterOrEqual
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the after_or_equal rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDateEquals
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the date_equals rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDimensions
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the dimensions rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceEndsWith
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the ends_with rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDoesntEndWith
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the doesnt_end_with rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceStartsWith
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the starts_with rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
- name: replaceDoesntStartWith
  visibility: protected
  parameters:
  - name: message
  - name: attribute
  - name: rule
  - name: parameters
  comment: '# * Replace all place-holders for the doesnt_start_with rule.

    # *

    # * @param  string  $message

    # * @param  string  $attribute

    # * @param  string  $rule

    # * @param  array<int,string>  $parameters

    # * @return string'
traits:
- Illuminate\Support\Arr
interfaces: []
