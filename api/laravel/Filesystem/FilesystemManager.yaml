name: FilesystemManager
class_comment: '# * @mixin \Illuminate\Contracts\Filesystem\Filesystem

  # * @mixin \Illuminate\Filesystem\FilesystemAdapter'
dependencies:
- name: S3Client
  type: class
  source: Aws\S3\S3Client
- name: Closure
  type: class
  source: Closure
- name: FactoryContract
  type: class
  source: Illuminate\Contracts\Filesystem\Factory
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: InvalidArgumentException
  type: class
  source: InvalidArgumentException
- name: S3Adapter
  type: class
  source: League\Flysystem\AwsS3V3\AwsS3V3Adapter
- name: AwsS3PortableVisibilityConverter
  type: class
  source: League\Flysystem\AwsS3V3\PortableVisibilityConverter
- name: Flysystem
  type: class
  source: League\Flysystem\Filesystem
- name: FlysystemAdapter
  type: class
  source: League\Flysystem\FilesystemAdapter
- name: FtpAdapter
  type: class
  source: League\Flysystem\Ftp\FtpAdapter
- name: FtpConnectionOptions
  type: class
  source: League\Flysystem\Ftp\FtpConnectionOptions
- name: LocalAdapter
  type: class
  source: League\Flysystem\Local\LocalFilesystemAdapter
- name: PathPrefixedAdapter
  type: class
  source: League\Flysystem\PathPrefixing\PathPrefixedAdapter
- name: SftpAdapter
  type: class
  source: League\Flysystem\PhpseclibV3\SftpAdapter
- name: SftpConnectionProvider
  type: class
  source: League\Flysystem\PhpseclibV3\SftpConnectionProvider
- name: ReadOnlyFilesystemAdapter
  type: class
  source: League\Flysystem\ReadOnly\ReadOnlyFilesystemAdapter
- name: PortableVisibilityConverter
  type: class
  source: League\Flysystem\UnixVisibility\PortableVisibilityConverter
- name: Visibility
  type: class
  source: League\Flysystem\Visibility
properties:
- name: app
  visibility: protected
  comment: '# * @mixin \Illuminate\Contracts\Filesystem\Filesystem

    # * @mixin \Illuminate\Filesystem\FilesystemAdapter

    # */

    # class FilesystemManager implements FactoryContract

    # {

    # /**

    # * The application instance.

    # *

    # * @var \Illuminate\Contracts\Foundation\Application'
- name: disks
  visibility: protected
  comment: '# * The array of resolved filesystem drivers.

    # *

    # * @var array'
- name: customCreators
  visibility: protected
  comment: '# * The registered custom driver creators.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: app
  comment: "# * @mixin \\Illuminate\\Contracts\\Filesystem\\Filesystem\n# * @mixin\
    \ \\Illuminate\\Filesystem\\FilesystemAdapter\n# */\n# class FilesystemManager\
    \ implements FactoryContract\n# {\n# /**\n# * The application instance.\n# *\n\
    # * @var \\Illuminate\\Contracts\\Foundation\\Application\n# */\n# protected $app;\n\
    # \n# /**\n# * The array of resolved filesystem drivers.\n# *\n# * @var array\n\
    # */\n# protected $disks = [];\n# \n# /**\n# * The registered custom driver creators.\n\
    # *\n# * @var array\n# */\n# protected $customCreators = [];\n# \n# /**\n# * Create\
    \ a new filesystem manager instance.\n# *\n# * @param  \\Illuminate\\Contracts\\\
    Foundation\\Application  $app\n# * @return void"
- name: drive
  visibility: public
  parameters:
  - name: name
    default: 'null'
  comment: '# * Get a filesystem instance.

    # *

    # * @param  string|null  $name

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: disk
  visibility: public
  parameters:
  - name: name
    default: 'null'
  comment: '# * Get a filesystem instance.

    # *

    # * @param  string|null  $name

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: cloud
  visibility: public
  parameters: []
  comment: '# * Get a default cloud filesystem instance.

    # *

    # * @return \Illuminate\Contracts\Filesystem\Cloud'
- name: build
  visibility: public
  parameters:
  - name: config
  comment: '# * Build an on-demand disk.

    # *

    # * @param  string|array  $config

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: get
  visibility: protected
  parameters:
  - name: name
  comment: '# * Attempt to get the disk from the local cache.

    # *

    # * @param  string  $name

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: resolve
  visibility: protected
  parameters:
  - name: name
  - name: config
    default: 'null'
  comment: '# * Resolve the given disk.

    # *

    # * @param  string  $name

    # * @param  array|null  $config

    # * @return \Illuminate\Contracts\Filesystem\Filesystem

    # *

    # * @throws \InvalidArgumentException'
- name: callCustomCreator
  visibility: protected
  parameters:
  - name: config
  comment: '# * Call a custom driver creator.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: createLocalDriver
  visibility: public
  parameters:
  - name: config
  comment: '# * Create an instance of the local driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: createFtpDriver
  visibility: public
  parameters:
  - name: config
  comment: '# * Create an instance of the ftp driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: createSftpDriver
  visibility: public
  parameters:
  - name: config
  comment: '# * Create an instance of the sftp driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: createS3Driver
  visibility: public
  parameters:
  - name: config
  comment: '# * Create an instance of the Amazon S3 driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Filesystem\Cloud'
- name: formatS3Config
  visibility: protected
  parameters:
  - name: config
  comment: '# * Format the given S3 configuration with the default options.

    # *

    # * @param  array  $config

    # * @return array'
- name: createScopedDriver
  visibility: public
  parameters:
  - name: config
  comment: '# * Create a scoped driver.

    # *

    # * @param  array  $config

    # * @return \Illuminate\Contracts\Filesystem\Filesystem'
- name: createFlysystem
  visibility: protected
  parameters:
  - name: adapter
  - name: config
  comment: '# * Create a Flysystem instance with the given adapter.

    # *

    # * @param  \League\Flysystem\FilesystemAdapter  $adapter

    # * @param  array  $config

    # * @return \League\Flysystem\FilesystemOperator'
- name: set
  visibility: public
  parameters:
  - name: name
  - name: disk
  comment: '# * Set the given disk instance.

    # *

    # * @param  string  $name

    # * @param  mixed  $disk

    # * @return $this'
- name: getConfig
  visibility: protected
  parameters:
  - name: name
  comment: '# * Get the filesystem connection configuration.

    # *

    # * @param  string  $name

    # * @return array'
- name: getDefaultDriver
  visibility: public
  parameters: []
  comment: '# * Get the default driver name.

    # *

    # * @return string'
- name: getDefaultCloudDriver
  visibility: public
  parameters: []
  comment: '# * Get the default cloud driver name.

    # *

    # * @return string'
- name: forgetDisk
  visibility: public
  parameters:
  - name: disk
  comment: '# * Unset the given disk instances.

    # *

    # * @param  array|string  $disk

    # * @return $this'
- name: purge
  visibility: public
  parameters:
  - name: name
    default: 'null'
  comment: '# * Disconnect the given disk and remove from local cache.

    # *

    # * @param  string|null  $name

    # * @return void'
- name: extend
  visibility: public
  parameters:
  - name: driver
  - name: callback
  comment: '# * Register a custom driver creator Closure.

    # *

    # * @param  string  $driver

    # * @param  \Closure  $callback

    # * @return $this'
- name: setApplication
  visibility: public
  parameters:
  - name: app
  comment: '# * Set the application instance used by the manager.

    # *

    # * @param  \Illuminate\Contracts\Foundation\Application  $app

    # * @return $this'
- name: __call
  visibility: public
  parameters:
  - name: method
  - name: parameters
  comment: '# * Dynamically call the default driver instance.

    # *

    # * @param  string  $method

    # * @param  array  $parameters

    # * @return mixed'
traits:
- Aws\S3\S3Client
- Closure
- Illuminate\Support\Arr
- InvalidArgumentException
- League\Flysystem\Ftp\FtpAdapter
- League\Flysystem\Ftp\FtpConnectionOptions
- League\Flysystem\PathPrefixing\PathPrefixedAdapter
- League\Flysystem\PhpseclibV3\SftpAdapter
- League\Flysystem\PhpseclibV3\SftpConnectionProvider
- League\Flysystem\ReadOnly\ReadOnlyFilesystemAdapter
- League\Flysystem\UnixVisibility\PortableVisibilityConverter
- League\Flysystem\Visibility
interfaces:
- FactoryContract
