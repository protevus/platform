name: ListenCommand
class_comment: null
dependencies:
- name: Command
  type: class
  source: Illuminate\Console\Command
- name: Listener
  type: class
  source: Illuminate\Queue\Listener
- name: ListenerOptions
  type: class
  source: Illuminate\Queue\ListenerOptions
- name: AsCommand
  type: class
  source: Symfony\Component\Console\Attribute\AsCommand
properties:
- name: signature
  visibility: protected
  comment: '# * The console command name.

    # *

    # * @var string'
- name: description
  visibility: protected
  comment: '# * The console command description.

    # *

    # * @var string'
- name: listener
  visibility: protected
  comment: '# * The queue listener instance.

    # *

    # * @var \Illuminate\Queue\Listener'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: listener
  comment: "# * The console command name.\n# *\n# * @var string\n# */\n# protected\
    \ $signature = 'queue:listen\n# {connection? : The name of connection}\n# {--name=default\
    \ : The name of the worker}\n# {--delay=0 : The number of seconds to delay failed\
    \ jobs (Deprecated)}\n# {--backoff=0 : The number of seconds to wait before retrying\
    \ a job that encountered an uncaught exception}\n# {--force : Force the worker\
    \ to run even in maintenance mode}\n# {--memory=128 : The memory limit in megabytes}\n\
    # {--queue= : The queue to listen on}\n# {--sleep=3 : Number of seconds to sleep\
    \ when no job is available}\n# {--rest=0 : Number of seconds to rest between jobs}\n\
    # {--timeout=60 : The number of seconds a child process can run}\n# {--tries=1\
    \ : Number of times to attempt a job before logging it failed}';\n# \n# /**\n\
    # * The console command description.\n# *\n# * @var string\n# */\n# protected\
    \ $description = 'Listen to a given queue';\n# \n# /**\n# * The queue listener\
    \ instance.\n# *\n# * @var \\Illuminate\\Queue\\Listener\n# */\n# protected $listener;\n\
    # \n# /**\n# * Create a new queue listen command.\n# *\n# * @param  \\Illuminate\\\
    Queue\\Listener  $listener\n# * @return void"
- name: handle
  visibility: public
  parameters: []
  comment: '# * Execute the console command.

    # *

    # * @return void'
- name: getQueue
  visibility: protected
  parameters:
  - name: connection
  comment: '# * Get the name of the queue connection to listen on.

    # *

    # * @param  string  $connection

    # * @return string'
- name: gatherOptions
  visibility: protected
  parameters: []
  comment: '# * Get the listener options for the command.

    # *

    # * @return \Illuminate\Queue\ListenerOptions'
- name: setOutputHandler
  visibility: protected
  parameters:
  - name: listener
  comment: '# * Set the options on the queue listener.

    # *

    # * @param  \Illuminate\Queue\Listener  $listener

    # * @return void'
traits:
- Illuminate\Console\Command
- Illuminate\Queue\Listener
- Illuminate\Queue\ListenerOptions
- Symfony\Component\Console\Attribute\AsCommand
interfaces: []
