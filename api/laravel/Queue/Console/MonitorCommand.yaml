name: MonitorCommand
class_comment: null
dependencies:
- name: Command
  type: class
  source: Illuminate\Console\Command
- name: Dispatcher
  type: class
  source: Illuminate\Contracts\Events\Dispatcher
- name: Factory
  type: class
  source: Illuminate\Contracts\Queue\Factory
- name: QueueBusy
  type: class
  source: Illuminate\Queue\Events\QueueBusy
- name: Collection
  type: class
  source: Illuminate\Support\Collection
- name: AsCommand
  type: class
  source: Symfony\Component\Console\Attribute\AsCommand
properties:
- name: signature
  visibility: protected
  comment: '# * The console command name.

    # *

    # * @var string'
- name: description
  visibility: protected
  comment: '# * The console command description.

    # *

    # * @var string'
- name: manager
  visibility: protected
  comment: '# * The queue manager instance.

    # *

    # * @var \Illuminate\Contracts\Queue\Factory'
- name: events
  visibility: protected
  comment: '# * The events dispatcher instance.

    # *

    # * @var \Illuminate\Contracts\Events\Dispatcher'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: manager
  - name: events
  comment: "# * The console command name.\n# *\n# * @var string\n# */\n# protected\
    \ $signature = 'queue:monitor\n# {queues : The names of the queues to monitor}\n\
    # {--max=1000 : The maximum number of jobs that can be on the queue before an\
    \ event is dispatched}';\n# \n# /**\n# * The console command description.\n# *\n\
    # * @var string\n# */\n# protected $description = 'Monitor the size of the specified\
    \ queues';\n# \n# /**\n# * The queue manager instance.\n# *\n# * @var \\Illuminate\\\
    Contracts\\Queue\\Factory\n# */\n# protected $manager;\n# \n# /**\n# * The events\
    \ dispatcher instance.\n# *\n# * @var \\Illuminate\\Contracts\\Events\\Dispatcher\n\
    # */\n# protected $events;\n# \n# /**\n# * Create a new queue monitor command.\n\
    # *\n# * @param  \\Illuminate\\Contracts\\Queue\\Factory  $manager\n# * @param\
    \  \\Illuminate\\Contracts\\Events\\Dispatcher  $events\n# * @return void"
- name: handle
  visibility: public
  parameters: []
  comment: '# * Execute the console command.

    # *

    # * @return void'
- name: parseQueues
  visibility: protected
  parameters:
  - name: queues
  comment: '# * Parse the queues into an array of the connections and queues.

    # *

    # * @param  string  $queues

    # * @return \Illuminate\Support\Collection'
- name: displaySizes
  visibility: protected
  parameters:
  - name: queues
  comment: '# * Display the queue sizes in the console.

    # *

    # * @param  \Illuminate\Support\Collection  $queues

    # * @return void'
- name: dispatchEvents
  visibility: protected
  parameters:
  - name: queues
  comment: '# * Fire the monitoring events.

    # *

    # * @param  \Illuminate\Support\Collection  $queues

    # * @return void'
traits:
- Illuminate\Console\Command
- Illuminate\Contracts\Events\Dispatcher
- Illuminate\Contracts\Queue\Factory
- Illuminate\Queue\Events\QueueBusy
- Illuminate\Support\Collection
- Symfony\Component\Console\Attribute\AsCommand
interfaces: []
