name: LuaScripts
class_comment: null
dependencies: []
properties: []
methods:
- name: size
  visibility: public
  parameters: []
  comment: '# * Get the Lua script for computing the size of queue.

    # *

    # * KEYS[1] - The name of the primary queue

    # * KEYS[2] - The name of the "delayed" queue

    # * KEYS[3] - The name of the "reserved" queue

    # *

    # * @return string'
- name: push
  visibility: public
  parameters: []
  comment: '# * Get the Lua script for pushing jobs onto the queue.

    # *

    # * KEYS[1] - The queue to push the job onto, for example: queues:foo

    # * KEYS[2] - The notification list for the queue we are pushing jobs onto, for
    example: queues:foo:notify

    # * ARGV[1] - The job payload

    # *

    # * @return string'
- name: pop
  visibility: public
  parameters: []
  comment: '# * Get the Lua script for popping the next job off of the queue.

    # *

    # * KEYS[1] - The queue to pop jobs from, for example: queues:foo

    # * KEYS[2] - The queue to place reserved jobs on, for example: queues:foo:reserved

    # * KEYS[3] - The notify queue

    # * ARGV[1] - The time at which the reserved job will expire

    # *

    # * @return string'
- name: release
  visibility: public
  parameters: []
  comment: '# * Get the Lua script for releasing reserved jobs.

    # *

    # * KEYS[1] - The "delayed" queue we release jobs onto, for example: queues:foo:delayed

    # * KEYS[2] - The queue the jobs are currently on, for example: queues:foo:reserved

    # * ARGV[1] - The raw payload of the job to add to the "delayed" queue

    # * ARGV[2] - The UNIX timestamp at which the job should become available

    # *

    # * @return string'
- name: migrateExpiredJobs
  visibility: public
  parameters: []
  comment: '# * Get the Lua script to migrate expired jobs back onto the queue.

    # *

    # * KEYS[1] - The queue we are removing jobs from, for example: queues:foo:reserved

    # * KEYS[2] - The queue we are moving jobs to, for example: queues:foo

    # * KEYS[3] - The notification list for the queue we are moving jobs to, for example
    queues:foo:notify

    # * ARGV[1] - The current UNIX timestamp

    # *

    # * @return string'
- name: clear
  visibility: public
  parameters: []
  comment: '# * Get the Lua script for removing all jobs from the queue.

    # *

    # * KEYS[1] - The name of the primary queue

    # * KEYS[2] - The name of the "delayed" queue

    # * KEYS[3] - The name of the "reserved" queue

    # * KEYS[4] - The name of the "notify" queue

    # *

    # * @return string'
traits: []
interfaces: []
