name: CallQueuedClosure
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Batchable
  type: class
  source: Illuminate\Bus\Batchable
- name: Queueable
  type: class
  source: Illuminate\Bus\Queueable
- name: Container
  type: class
  source: Illuminate\Contracts\Container\Container
- name: ShouldQueue
  type: class
  source: Illuminate\Contracts\Queue\ShouldQueue
- name: Dispatchable
  type: class
  source: Illuminate\Foundation\Bus\Dispatchable
- name: SerializableClosure
  type: class
  source: Laravel\SerializableClosure\SerializableClosure
- name: ReflectionFunction
  type: class
  source: ReflectionFunction
properties:
- name: closure
  visibility: public
  comment: '# * The serializable Closure instance.

    # *

    # * @var \Laravel\SerializableClosure\SerializableClosure'
- name: failureCallbacks
  visibility: public
  comment: '# * The callbacks that should be executed on failure.

    # *

    # * @var array'
- name: deleteWhenMissingModels
  visibility: public
  comment: '# * Indicate if the job should be deleted when models are missing.

    # *

    # * @var bool'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: closure
  comment: "# * The serializable Closure instance.\n# *\n# * @var \\Laravel\\SerializableClosure\\\
    SerializableClosure\n# */\n# public $closure;\n# \n# /**\n# * The callbacks that\
    \ should be executed on failure.\n# *\n# * @var array\n# */\n# public $failureCallbacks\
    \ = [];\n# \n# /**\n# * Indicate if the job should be deleted when models are\
    \ missing.\n# *\n# * @var bool\n# */\n# public $deleteWhenMissingModels = true;\n\
    # \n# /**\n# * Create a new job instance.\n# *\n# * @param  \\Laravel\\SerializableClosure\\\
    SerializableClosure  $closure\n# * @return void"
- name: create
  visibility: public
  parameters:
  - name: job
  comment: '# * Create a new job instance.

    # *

    # * @param  \Closure  $job

    # * @return self'
- name: handle
  visibility: public
  parameters:
  - name: container
  comment: '# * Execute the job.

    # *

    # * @param  \Illuminate\Contracts\Container\Container  $container

    # * @return void'
- name: onFailure
  visibility: public
  parameters:
  - name: callback
  comment: '# * Add a callback to be executed if the job fails.

    # *

    # * @param  callable  $callback

    # * @return $this'
- name: failed
  visibility: public
  parameters:
  - name: e
  comment: '# * Handle a job failure.

    # *

    # * @param  \Throwable  $e

    # * @return void'
- name: displayName
  visibility: public
  parameters: []
  comment: '# * Get the display name for the queued job.

    # *

    # * @return string'
traits:
- Closure
- Illuminate\Bus\Batchable
- Illuminate\Bus\Queueable
- Illuminate\Contracts\Container\Container
- Illuminate\Contracts\Queue\ShouldQueue
- Illuminate\Foundation\Bus\Dispatchable
- Laravel\SerializableClosure\SerializableClosure
- ReflectionFunction
- Batchable
interfaces:
- ShouldQueue
