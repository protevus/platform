name: RouteCollectionInterface
class_comment: null
dependencies:
- name: Request
  type: class
  source: Illuminate\Http\Request
properties: []
methods:
- name: add
  visibility: public
  parameters:
  - name: route
  comment: '# * Add a Route instance to the collection.

    # *

    # * @param  \Illuminate\Routing\Route  $route

    # * @return \Illuminate\Routing\Route'
- name: refreshNameLookups
  visibility: public
  parameters: []
  comment: '# * Refresh the name look-up table.

    # *

    # * This is done in case any names are fluently defined or if routes are overwritten.

    # *

    # * @return void'
- name: refreshActionLookups
  visibility: public
  parameters: []
  comment: '# * Refresh the action look-up table.

    # *

    # * This is done in case any actions are overwritten with new controllers.

    # *

    # * @return void'
- name: match
  visibility: public
  parameters:
  - name: request
  comment: '# * Find the first route matching a given request.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @return \Illuminate\Routing\Route

    # *

    # * @throws \Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException

    # * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException'
- name: get
  visibility: public
  parameters:
  - name: method
    default: 'null'
  comment: '# * Get routes from the collection by method.

    # *

    # * @param  string|null  $method

    # * @return \Illuminate\Routing\Route[]'
- name: hasNamedRoute
  visibility: public
  parameters:
  - name: name
  comment: '# * Determine if the route collection contains a given named route.

    # *

    # * @param  string  $name

    # * @return bool'
- name: getByName
  visibility: public
  parameters:
  - name: name
  comment: '# * Get a route instance by its name.

    # *

    # * @param  string  $name

    # * @return \Illuminate\Routing\Route|null'
- name: getByAction
  visibility: public
  parameters:
  - name: action
  comment: '# * Get a route instance by its controller action.

    # *

    # * @param  string  $action

    # * @return \Illuminate\Routing\Route|null'
- name: getRoutes
  visibility: public
  parameters: []
  comment: '# * Get all of the routes in the collection.

    # *

    # * @return \Illuminate\Routing\Route[]'
- name: getRoutesByMethod
  visibility: public
  parameters: []
  comment: '# * Get all of the routes keyed by their HTTP verb / method.

    # *

    # * @return array'
- name: getRoutesByName
  visibility: public
  parameters: []
  comment: '# * Get all of the routes keyed by their name.

    # *

    # * @return \Illuminate\Routing\Route[]'
traits:
- Illuminate\Http\Request
interfaces: []
