name: Response
class_comment: null
dependencies:
- name: Arrayable
  type: class
  source: Illuminate\Contracts\Support\Arrayable
- name: Stringable
  type: class
  source: Stringable
properties:
- name: allowed
  visibility: protected
  comment: '# * Indicates whether the response was allowed.

    # *

    # * @var bool'
- name: message
  visibility: protected
  comment: '# * The response message.

    # *

    # * @var string|null'
- name: code
  visibility: protected
  comment: '# * The response code.

    # *

    # * @var mixed'
- name: status
  visibility: protected
  comment: '# * The HTTP response status code.

    # *

    # * @var int|null'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: allowed
  - name: message
    default: ''''''
  - name: code
    default: 'null'
  comment: "# * Indicates whether the response was allowed.\n# *\n# * @var bool\n\
    # */\n# protected $allowed;\n# \n# /**\n# * The response message.\n# *\n# * @var\
    \ string|null\n# */\n# protected $message;\n# \n# /**\n# * The response code.\n\
    # *\n# * @var mixed\n# */\n# protected $code;\n# \n# /**\n# * The HTTP response\
    \ status code.\n# *\n# * @var int|null\n# */\n# protected $status;\n# \n# /**\n\
    # * Create a new response.\n# *\n# * @param  bool  $allowed\n# * @param  string|null\
    \  $message\n# * @param  mixed  $code\n# * @return void"
- name: allow
  visibility: public
  parameters:
  - name: message
    default: 'null'
  - name: code
    default: 'null'
  comment: '# * Create a new "allow" Response.

    # *

    # * @param  string|null  $message

    # * @param  mixed  $code

    # * @return \Illuminate\Auth\Access\Response'
- name: deny
  visibility: public
  parameters:
  - name: message
    default: 'null'
  - name: code
    default: 'null'
  comment: '# * Create a new "deny" Response.

    # *

    # * @param  string|null  $message

    # * @param  mixed  $code

    # * @return \Illuminate\Auth\Access\Response'
- name: denyWithStatus
  visibility: public
  parameters:
  - name: status
  - name: message
    default: 'null'
  - name: code
    default: 'null'
  comment: '# * Create a new "deny" Response with a HTTP status code.

    # *

    # * @param  int  $status

    # * @param  string|null  $message

    # * @param  mixed  $code

    # * @return \Illuminate\Auth\Access\Response'
- name: denyAsNotFound
  visibility: public
  parameters:
  - name: message
    default: 'null'
  - name: code
    default: 'null'
  comment: '# * Create a new "deny" Response with a 404 HTTP status code.

    # *

    # * @param  string|null  $message

    # * @param  mixed  $code

    # * @return \Illuminate\Auth\Access\Response'
- name: allowed
  visibility: public
  parameters: []
  comment: '# * Determine if the response was allowed.

    # *

    # * @return bool'
- name: denied
  visibility: public
  parameters: []
  comment: '# * Determine if the response was denied.

    # *

    # * @return bool'
- name: message
  visibility: public
  parameters: []
  comment: '# * Get the response message.

    # *

    # * @return string|null'
- name: code
  visibility: public
  parameters: []
  comment: '# * Get the response code / reason.

    # *

    # * @return mixed'
- name: authorize
  visibility: public
  parameters: []
  comment: '# * Throw authorization exception if response was denied.

    # *

    # * @return \Illuminate\Auth\Access\Response

    # *

    # * @throws \Illuminate\Auth\Access\AuthorizationException'
- name: withStatus
  visibility: public
  parameters:
  - name: status
  comment: '# * Set the HTTP response status code.

    # *

    # * @param  null|int  $status

    # * @return $this'
- name: asNotFound
  visibility: public
  parameters: []
  comment: '# * Set the HTTP response status code to 404.

    # *

    # * @return $this'
- name: status
  visibility: public
  parameters: []
  comment: '# * Get the HTTP status code.

    # *

    # * @return int|null'
- name: toArray
  visibility: public
  parameters: []
  comment: '# * Convert the response to an array.

    # *

    # * @return array'
- name: __toString
  visibility: public
  parameters: []
  comment: '# * Get the string representation of the message.

    # *

    # * @return string'
traits:
- Illuminate\Contracts\Support\Arrayable
- Stringable
interfaces:
- Arrayable
