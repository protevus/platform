name: DatabaseUserProvider
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: UserContract
  type: class
  source: Illuminate\Contracts\Auth\Authenticatable
- name: UserProvider
  type: class
  source: Illuminate\Contracts\Auth\UserProvider
- name: HasherContract
  type: class
  source: Illuminate\Contracts\Hashing\Hasher
- name: Arrayable
  type: class
  source: Illuminate\Contracts\Support\Arrayable
- name: ConnectionInterface
  type: class
  source: Illuminate\Database\ConnectionInterface
properties:
- name: connection
  visibility: protected
  comment: '# * The active database connection.

    # *

    # * @var \Illuminate\Database\ConnectionInterface'
- name: hasher
  visibility: protected
  comment: '# * The hasher implementation.

    # *

    # * @var \Illuminate\Contracts\Hashing\Hasher'
- name: table
  visibility: protected
  comment: '# * The table containing the users.

    # *

    # * @var string'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: connection
  - name: hasher
  - name: table
  comment: "# * The active database connection.\n# *\n# * @var \\Illuminate\\Database\\\
    ConnectionInterface\n# */\n# protected $connection;\n# \n# /**\n# * The hasher\
    \ implementation.\n# *\n# * @var \\Illuminate\\Contracts\\Hashing\\Hasher\n# */\n\
    # protected $hasher;\n# \n# /**\n# * The table containing the users.\n# *\n# *\
    \ @var string\n# */\n# protected $table;\n# \n# /**\n# * Create a new database\
    \ user provider.\n# *\n# * @param  \\Illuminate\\Database\\ConnectionInterface\
    \  $connection\n# * @param  \\Illuminate\\Contracts\\Hashing\\Hasher  $hasher\n\
    # * @param  string  $table\n# * @return void"
- name: retrieveById
  visibility: public
  parameters:
  - name: identifier
  comment: '# * Retrieve a user by their unique identifier.

    # *

    # * @param  mixed  $identifier

    # * @return \Illuminate\Contracts\Auth\Authenticatable|null'
- name: retrieveByToken
  visibility: public
  parameters:
  - name: identifier
  - name: token
  comment: '# * Retrieve a user by their unique identifier and "remember me" token.

    # *

    # * @param  mixed  $identifier

    # * @param  string  $token

    # * @return \Illuminate\Contracts\Auth\Authenticatable|null'
- name: updateRememberToken
  visibility: public
  parameters:
  - name: user
  - name: token
  comment: '# * Update the "remember me" token for the given user in storage.

    # *

    # * @param  \Illuminate\Contracts\Auth\Authenticatable  $user

    # * @param  string  $token

    # * @return void'
- name: retrieveByCredentials
  visibility: public
  parameters:
  - name: credentials
  comment: '# * Retrieve a user by the given credentials.

    # *

    # * @param  array  $credentials

    # * @return \Illuminate\Contracts\Auth\Authenticatable|null'
- name: getGenericUser
  visibility: protected
  parameters:
  - name: user
  comment: '# * Get the generic user.

    # *

    # * @param  mixed  $user

    # * @return \Illuminate\Auth\GenericUser|null'
- name: validateCredentials
  visibility: public
  parameters:
  - name: user
  - name: credentials
  comment: '# * Validate a user against the given credentials.

    # *

    # * @param  \Illuminate\Contracts\Auth\Authenticatable  $user

    # * @param  array  $credentials

    # * @return bool'
- name: rehashPasswordIfRequired
  visibility: public
  parameters:
  - name: user
  - name: credentials
  - name: force
    default: 'false'
  comment: '# * Rehash the user''s password if required and supported.

    # *

    # * @param  \Illuminate\Contracts\Auth\Authenticatable  $user

    # * @param  array  $credentials

    # * @param  bool  $force

    # * @return void'
traits:
- Closure
- Illuminate\Contracts\Auth\UserProvider
- Illuminate\Contracts\Support\Arrayable
- Illuminate\Database\ConnectionInterface
interfaces:
- UserProvider
