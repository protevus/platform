name: AssertableJson
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Arrayable
  type: class
  source: Illuminate\Contracts\Support\Arrayable
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: Conditionable
  type: class
  source: Illuminate\Support\Traits\Conditionable
- name: Macroable
  type: class
  source: Illuminate\Support\Traits\Macroable
- name: Tappable
  type: class
  source: Illuminate\Support\Traits\Tappable
- name: AssertableJsonString
  type: class
  source: Illuminate\Testing\AssertableJsonString
- name: PHPUnit
  type: class
  source: PHPUnit\Framework\Assert
properties:
- name: props
  visibility: private
  comment: '# * The properties in the current scope.

    # *

    # * @var array'
- name: path
  visibility: private
  comment: '# * The "dot" path to the current scope.

    # *

    # * @var string|null'
methods:
- name: __construct
  visibility: protected
  parameters:
  - name: props
  - name: path
    default: 'null'
  comment: "# * The properties in the current scope.\n# *\n# * @var array\n# */\n\
    # private $props;\n# \n# /**\n# * The \"dot\" path to the current scope.\n# *\n\
    # * @var string|null\n# */\n# private $path;\n# \n# /**\n# * Create a new fluent,\
    \ assertable JSON data instance.\n# *\n# * @param  array  $props\n# * @param \
    \ string|null  $path\n# * @return void"
- name: dotPath
  visibility: protected
  parameters:
  - name: key
    default: ''''''
  comment: '# * Compose the absolute "dot" path to the given key.

    # *

    # * @param  string  $key

    # * @return string'
- name: prop
  visibility: protected
  parameters:
  - name: key
    default: 'null'
  comment: '# * Retrieve a prop within the current scope using "dot" notation.

    # *

    # * @param  string|null  $key

    # * @return mixed'
- name: scope
  visibility: protected
  parameters:
  - name: key
  - name: callback
  comment: '# * Instantiate a new "scope" at the path of the given key.

    # *

    # * @param  string  $key

    # * @param  \Closure  $callback

    # * @return $this'
- name: first
  visibility: public
  parameters:
  - name: callback
  comment: '# * Instantiate a new "scope" on the first child element.

    # *

    # * @param  \Closure  $callback

    # * @return $this'
- name: each
  visibility: public
  parameters:
  - name: callback
  comment: '# * Instantiate a new "scope" on each child element.

    # *

    # * @param  \Closure  $callback

    # * @return $this'
- name: fromArray
  visibility: public
  parameters:
  - name: data
  comment: '# * Create a new instance from an array.

    # *

    # * @param  array  $data

    # * @return static'
- name: fromAssertableJsonString
  visibility: public
  parameters:
  - name: json
  comment: '# * Create a new instance from an AssertableJsonString.

    # *

    # * @param  \Illuminate\Testing\AssertableJsonString  $json

    # * @return static'
- name: toArray
  visibility: public
  parameters: []
  comment: '# * Get the instance as an array.

    # *

    # * @return array'
traits:
- Closure
- Illuminate\Contracts\Support\Arrayable
- Illuminate\Support\Arr
- Illuminate\Support\Traits\Conditionable
- Illuminate\Support\Traits\Macroable
- Illuminate\Support\Traits\Tappable
- Illuminate\Testing\AssertableJsonString
- Concerns\Has
interfaces:
- Arrayable
