name: ParallelTesting
class_comment: null
dependencies:
- name: Container
  type: class
  source: Illuminate\Contracts\Container\Container
- name: Str
  type: class
  source: Illuminate\Support\Str
properties:
- name: container
  visibility: protected
  comment: '# * The container instance.

    # *

    # * @var \Illuminate\Contracts\Container\Container'
- name: optionsResolver
  visibility: protected
  comment: '# * The options resolver callback.

    # *

    # * @var \Closure|null'
- name: tokenResolver
  visibility: protected
  comment: '# * The token resolver callback.

    # *

    # * @var \Closure|null'
- name: setUpProcessCallbacks
  visibility: protected
  comment: '# * All of the registered "setUp" process callbacks.

    # *

    # * @var array'
- name: setUpTestCaseCallbacks
  visibility: protected
  comment: '# * All of the registered "setUp" test case callbacks.

    # *

    # * @var array'
- name: setUpTestDatabaseCallbacks
  visibility: protected
  comment: '# * All of the registered "setUp" test database callbacks.

    # *

    # * @var array'
- name: tearDownProcessCallbacks
  visibility: protected
  comment: '# * All of the registered "tearDown" process callbacks.

    # *

    # * @var array'
- name: tearDownTestCaseCallbacks
  visibility: protected
  comment: '# * All of the registered "tearDown" test case callbacks.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: container
  comment: "# * The container instance.\n# *\n# * @var \\Illuminate\\Contracts\\Container\\\
    Container\n# */\n# protected $container;\n# \n# /**\n# * The options resolver\
    \ callback.\n# *\n# * @var \\Closure|null\n# */\n# protected $optionsResolver;\n\
    # \n# /**\n# * The token resolver callback.\n# *\n# * @var \\Closure|null\n# */\n\
    # protected $tokenResolver;\n# \n# /**\n# * All of the registered \"setUp\" process\
    \ callbacks.\n# *\n# * @var array\n# */\n# protected $setUpProcessCallbacks =\
    \ [];\n# \n# /**\n# * All of the registered \"setUp\" test case callbacks.\n#\
    \ *\n# * @var array\n# */\n# protected $setUpTestCaseCallbacks = [];\n# \n# /**\n\
    # * All of the registered \"setUp\" test database callbacks.\n# *\n# * @var array\n\
    # */\n# protected $setUpTestDatabaseCallbacks = [];\n# \n# /**\n# * All of the\
    \ registered \"tearDown\" process callbacks.\n# *\n# * @var array\n# */\n# protected\
    \ $tearDownProcessCallbacks = [];\n# \n# /**\n# * All of the registered \"tearDown\"\
    \ test case callbacks.\n# *\n# * @var array\n# */\n# protected $tearDownTestCaseCallbacks\
    \ = [];\n# \n# /**\n# * Create a new parallel testing instance.\n# *\n# * @param\
    \  \\Illuminate\\Contracts\\Container\\Container  $container\n# * @return void"
- name: resolveOptionsUsing
  visibility: public
  parameters:
  - name: resolver
  comment: '# * Set a callback that should be used when resolving options.

    # *

    # * @param  \Closure|null  $resolver

    # * @return void'
- name: resolveTokenUsing
  visibility: public
  parameters:
  - name: resolver
  comment: '# * Set a callback that should be used when resolving the unique process
    token.

    # *

    # * @param  \Closure|null  $resolver

    # * @return void'
- name: setUpProcess
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a "setUp" process callback.

    # *

    # * @param  callable  $callback

    # * @return void'
- name: setUpTestCase
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a "setUp" test case callback.

    # *

    # * @param  callable  $callback

    # * @return void'
- name: setUpTestDatabase
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a "setUp" test database callback.

    # *

    # * @param  callable  $callback

    # * @return void'
- name: tearDownProcess
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a "tearDown" process callback.

    # *

    # * @param  callable  $callback

    # * @return void'
- name: tearDownTestCase
  visibility: public
  parameters:
  - name: callback
  comment: '# * Register a "tearDown" test case callback.

    # *

    # * @param  callable  $callback

    # * @return void'
- name: callSetUpProcessCallbacks
  visibility: public
  parameters: []
  comment: '# * Call all of the "setUp" process callbacks.

    # *

    # * @return void'
- name: callSetUpTestCaseCallbacks
  visibility: public
  parameters:
  - name: testCase
  comment: '# * Call all of the "setUp" test case callbacks.

    # *

    # * @param  \Illuminate\Foundation\Testing\TestCase  $testCase

    # * @return void'
- name: callSetUpTestDatabaseCallbacks
  visibility: public
  parameters:
  - name: database
  comment: '# * Call all of the "setUp" test database callbacks.

    # *

    # * @param  string  $database

    # * @return void'
- name: callTearDownProcessCallbacks
  visibility: public
  parameters: []
  comment: '# * Call all of the "tearDown" process callbacks.

    # *

    # * @return void'
- name: callTearDownTestCaseCallbacks
  visibility: public
  parameters:
  - name: testCase
  comment: '# * Call all of the "tearDown" test case callbacks.

    # *

    # * @param  \Illuminate\Foundation\Testing\TestCase  $testCase

    # * @return void'
- name: option
  visibility: public
  parameters:
  - name: option
  comment: '# * Get a parallel testing option.

    # *

    # * @param  string  $option

    # * @return mixed'
- name: token
  visibility: public
  parameters: []
  comment: '# * Gets a unique test token.

    # *

    # * @return string|false'
- name: whenRunningInParallel
  visibility: protected
  parameters:
  - name: callback
  comment: '# * Apply the callback if tests are running in parallel.

    # *

    # * @param  callable  $callback

    # * @return void'
- name: inParallel
  visibility: protected
  parameters: []
  comment: '# * Indicates if the current tests are been run in parallel.

    # *

    # * @return bool'
traits:
- Illuminate\Contracts\Container\Container
- Illuminate\Support\Str
interfaces: []
