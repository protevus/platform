name: InteractsWithInput
class_comment: null
dependencies:
- name: UploadedFile
  type: class
  source: Illuminate\Http\UploadedFile
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: Date
  type: class
  source: Illuminate\Support\Facades\Date
- name: Dumpable
  type: class
  source: Illuminate\Support\Traits\Dumpable
- name: SplFileInfo
  type: class
  source: SplFileInfo
- name: stdClass
  type: class
  source: stdClass
- name: InputBag
  type: class
  source: Symfony\Component\HttpFoundation\InputBag
- name: Dumpable
  type: class
  source: Dumpable
properties: []
methods:
- name: server
  visibility: public
  parameters:
  - name: key
    default: 'null'
  - name: default
    default: 'null'
  comment: '# * Retrieve a server variable from the request.

    # *

    # * @param  string|null  $key

    # * @param  string|array|null  $default

    # * @return string|array|null'
- name: hasHeader
  visibility: public
  parameters:
  - name: key
  comment: '# * Determine if a header is set on the request.

    # *

    # * @param  string  $key

    # * @return bool'
- name: header
  visibility: public
  parameters:
  - name: key
    default: 'null'
  - name: default
    default: 'null'
  comment: '# * Retrieve a header from the request.

    # *

    # * @param  string|null  $key

    # * @param  string|array|null  $default

    # * @return string|array|null'
- name: bearerToken
  visibility: public
  parameters: []
  comment: '# * Get the bearer token from the request headers.

    # *

    # * @return string|null'
- name: exists
  visibility: public
  parameters:
  - name: key
  comment: '# * Determine if the request contains a given input item key.

    # *

    # * @param  string|array  $key

    # * @return bool'
- name: has
  visibility: public
  parameters:
  - name: key
  comment: '# * Determine if the request contains a given input item key.

    # *

    # * @param  string|array  $key

    # * @return bool'
- name: hasAny
  visibility: public
  parameters:
  - name: keys
  comment: '# * Determine if the request contains any of the given inputs.

    # *

    # * @param  string|array  $keys

    # * @return bool'
- name: whenHas
  visibility: public
  parameters:
  - name: key
  - name: callback
  - name: default
    default: 'null'
  comment: '# * Apply the callback if the request contains the given input item key.

    # *

    # * @param  string  $key

    # * @param  callable  $callback

    # * @param  callable|null  $default

    # * @return $this|mixed'
- name: filled
  visibility: public
  parameters:
  - name: key
  comment: '# * Determine if the request contains a non-empty value for an input item.

    # *

    # * @param  string|array  $key

    # * @return bool'
- name: isNotFilled
  visibility: public
  parameters:
  - name: key
  comment: '# * Determine if the request contains an empty value for an input item.

    # *

    # * @param  string|array  $key

    # * @return bool'
- name: anyFilled
  visibility: public
  parameters:
  - name: keys
  comment: '# * Determine if the request contains a non-empty value for any of the
    given inputs.

    # *

    # * @param  string|array  $keys

    # * @return bool'
- name: whenFilled
  visibility: public
  parameters:
  - name: key
  - name: callback
  - name: default
    default: 'null'
  comment: '# * Apply the callback if the request contains a non-empty value for the
    given input item key.

    # *

    # * @param  string  $key

    # * @param  callable  $callback

    # * @param  callable|null  $default

    # * @return $this|mixed'
- name: missing
  visibility: public
  parameters:
  - name: key
  comment: '# * Determine if the request is missing a given input item key.

    # *

    # * @param  string|array  $key

    # * @return bool'
- name: whenMissing
  visibility: public
  parameters:
  - name: key
  - name: callback
  - name: default
    default: 'null'
  comment: '# * Apply the callback if the request is missing the given input item
    key.

    # *

    # * @param  string  $key

    # * @param  callable  $callback

    # * @param  callable|null  $default

    # * @return $this|mixed'
- name: isEmptyString
  visibility: protected
  parameters:
  - name: key
  comment: '# * Determine if the given input key is an empty string for "filled".

    # *

    # * @param  string  $key

    # * @return bool'
- name: keys
  visibility: public
  parameters: []
  comment: '# * Get the keys for all of the input and files.

    # *

    # * @return array'
- name: all
  visibility: public
  parameters:
  - name: keys
    default: 'null'
  comment: '# * Get all of the input and files for the request.

    # *

    # * @param  array|mixed|null  $keys

    # * @return array'
- name: input
  visibility: public
  parameters:
  - name: key
    default: 'null'
  - name: default
    default: 'null'
  comment: '# * Retrieve an input item from the request.

    # *

    # * @param  string|null  $key

    # * @param  mixed  $default

    # * @return mixed'
- name: str
  visibility: public
  parameters:
  - name: key
  - name: default
    default: 'null'
  comment: '# * Retrieve input from the request as a Stringable instance.

    # *

    # * @param  string  $key

    # * @param  mixed  $default

    # * @return \Illuminate\Support\Stringable'
- name: string
  visibility: public
  parameters:
  - name: key
  - name: default
    default: 'null'
  comment: '# * Retrieve input from the request as a Stringable instance.

    # *

    # * @param  string  $key

    # * @param  mixed  $default

    # * @return \Illuminate\Support\Stringable'
- name: boolean
  visibility: public
  parameters:
  - name: key
    default: 'null'
  - name: default
    default: 'false'
  comment: '# * Retrieve input as a boolean value.

    # *

    # * Returns true when value is "1", "true", "on", and "yes". Otherwise, returns
    false.

    # *

    # * @param  string|null  $key

    # * @param  bool  $default

    # * @return bool'
- name: integer
  visibility: public
  parameters:
  - name: key
  - name: default
    default: '0'
  comment: '# * Retrieve input as an integer value.

    # *

    # * @param  string  $key

    # * @param  int  $default

    # * @return int'
- name: float
  visibility: public
  parameters:
  - name: key
  - name: default
    default: '0.0'
  comment: '# * Retrieve input as a float value.

    # *

    # * @param  string  $key

    # * @param  float  $default

    # * @return float'
- name: date
  visibility: public
  parameters:
  - name: key
  - name: format
    default: 'null'
  - name: tz
    default: 'null'
  comment: '# * Retrieve input from the request as a Carbon instance.

    # *

    # * @param  string  $key

    # * @param  string|null  $format

    # * @param  string|null  $tz

    # * @return \Illuminate\Support\Carbon|null

    # *

    # * @throws \Carbon\Exceptions\InvalidFormatException'
- name: enum
  visibility: public
  parameters:
  - name: key
  - name: enumClass
  comment: '# * Retrieve input from the request as an enum.

    # *

    # * @template TEnum

    # *

    # * @param  string  $key

    # * @param  class-string<TEnum>  $enumClass

    # * @return TEnum|null'
- name: collect
  visibility: public
  parameters:
  - name: key
    default: 'null'
  comment: '# * Retrieve input from the request as a collection.

    # *

    # * @param  array|string|null  $key

    # * @return \Illuminate\Support\Collection'
- name: only
  visibility: public
  parameters:
  - name: keys
  comment: '# * Get a subset containing the provided keys with values from the input
    data.

    # *

    # * @param  array|mixed  $keys

    # * @return array'
- name: except
  visibility: public
  parameters:
  - name: keys
  comment: '# * Get all of the input except for a specified array of items.

    # *

    # * @param  array|mixed  $keys

    # * @return array'
- name: query
  visibility: public
  parameters:
  - name: key
    default: 'null'
  - name: default
    default: 'null'
  comment: '# * Retrieve a query string item from the request.

    # *

    # * @param  string|null  $key

    # * @param  string|array|null  $default

    # * @return string|array|null'
- name: post
  visibility: public
  parameters:
  - name: key
    default: 'null'
  - name: default
    default: 'null'
  comment: '# * Retrieve a request payload item from the request.

    # *

    # * @param  string|null  $key

    # * @param  string|array|null  $default

    # * @return string|array|null'
- name: hasCookie
  visibility: public
  parameters:
  - name: key
  comment: '# * Determine if a cookie is set on the request.

    # *

    # * @param  string  $key

    # * @return bool'
- name: cookie
  visibility: public
  parameters:
  - name: key
    default: 'null'
  - name: default
    default: 'null'
  comment: '# * Retrieve a cookie from the request.

    # *

    # * @param  string|null  $key

    # * @param  string|array|null  $default

    # * @return string|array|null'
- name: allFiles
  visibility: public
  parameters: []
  comment: '# * Get an array of all of the files on the request.

    # *

    # * @return array'
- name: convertUploadedFiles
  visibility: protected
  parameters:
  - name: files
  comment: '# * Convert the given array of Symfony UploadedFiles to custom Laravel
    UploadedFiles.

    # *

    # * @param  array  $files

    # * @return array'
- name: hasFile
  visibility: public
  parameters:
  - name: key
  comment: '# * Determine if the uploaded data contains a file.

    # *

    # * @param  string  $key

    # * @return bool'
- name: isValidFile
  visibility: protected
  parameters:
  - name: file
  comment: '# * Check that the given file is a valid file instance.

    # *

    # * @param  mixed  $file

    # * @return bool'
- name: file
  visibility: public
  parameters:
  - name: key
    default: 'null'
  - name: default
    default: 'null'
  comment: '# * Retrieve a file from the request.

    # *

    # * @param  string|null  $key

    # * @param  mixed  $default

    # * @return \Illuminate\Http\UploadedFile|\Illuminate\Http\UploadedFile[]|array|null'
- name: retrieveItem
  visibility: protected
  parameters:
  - name: source
  - name: key
  - name: default
  comment: '# * Retrieve a parameter item from a given source.

    # *

    # * @param  string  $source

    # * @param  string|null  $key

    # * @param  string|array|null  $default

    # * @return string|array|null'
- name: dump
  visibility: public
  parameters:
  - name: keys
    default: '[]'
  comment: '# * Dump the items.

    # *

    # * @param  mixed  $keys

    # * @return $this'
traits:
- Illuminate\Http\UploadedFile
- Illuminate\Support\Arr
- Illuminate\Support\Facades\Date
- Illuminate\Support\Traits\Dumpable
- SplFileInfo
- stdClass
- Symfony\Component\HttpFoundation\InputBag
- Dumpable
interfaces: []
