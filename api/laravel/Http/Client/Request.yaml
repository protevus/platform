name: Request
class_comment: null
dependencies:
- name: ArrayAccess
  type: class
  source: ArrayAccess
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: Macroable
  type: class
  source: Illuminate\Support\Traits\Macroable
- name: LogicException
  type: class
  source: LogicException
- name: Macroable
  type: class
  source: Macroable
properties:
- name: request
  visibility: protected
  comment: '# * The underlying PSR request.

    # *

    # * @var \Psr\Http\Message\RequestInterface'
- name: data
  visibility: protected
  comment: '# * The decoded payload for the request.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: request
  comment: "# * The underlying PSR request.\n# *\n# * @var \\Psr\\Http\\Message\\\
    RequestInterface\n# */\n# protected $request;\n# \n# /**\n# * The decoded payload\
    \ for the request.\n# *\n# * @var array\n# */\n# protected $data;\n# \n# /**\n\
    # * Create a new request instance.\n# *\n# * @param  \\Psr\\Http\\Message\\RequestInterface\
    \  $request\n# * @return void"
- name: method
  visibility: public
  parameters: []
  comment: '# * Get the request method.

    # *

    # * @return string'
- name: url
  visibility: public
  parameters: []
  comment: '# * Get the URL of the request.

    # *

    # * @return string'
- name: hasHeader
  visibility: public
  parameters:
  - name: key
  - name: value
    default: 'null'
  comment: '# * Determine if the request has a given header.

    # *

    # * @param  string  $key

    # * @param  mixed  $value

    # * @return bool'
- name: hasHeaders
  visibility: public
  parameters:
  - name: headers
  comment: '# * Determine if the request has the given headers.

    # *

    # * @param  array|string  $headers

    # * @return bool'
- name: header
  visibility: public
  parameters:
  - name: key
  comment: '# * Get the values for the header with the given name.

    # *

    # * @param  string  $key

    # * @return array'
- name: headers
  visibility: public
  parameters: []
  comment: '# * Get the request headers.

    # *

    # * @return array'
- name: body
  visibility: public
  parameters: []
  comment: '# * Get the body of the request.

    # *

    # * @return string'
- name: hasFile
  visibility: public
  parameters:
  - name: name
  - name: value
    default: 'null'
  - name: filename
    default: 'null'
  comment: '# * Determine if the request contains the given file.

    # *

    # * @param  string  $name

    # * @param  string|null  $value

    # * @param  string|null  $filename

    # * @return bool'
- name: data
  visibility: public
  parameters: []
  comment: '# * Get the request''s data (form parameters or JSON).

    # *

    # * @return array'
- name: parameters
  visibility: protected
  parameters: []
  comment: '# * Get the request''s form parameters.

    # *

    # * @return array'
- name: json
  visibility: protected
  parameters: []
  comment: '# * Get the JSON decoded body of the request.

    # *

    # * @return array'
- name: isForm
  visibility: public
  parameters: []
  comment: '# * Determine if the request is simple form data.

    # *

    # * @return bool'
- name: isJson
  visibility: public
  parameters: []
  comment: '# * Determine if the request is JSON.

    # *

    # * @return bool'
- name: isMultipart
  visibility: public
  parameters: []
  comment: '# * Determine if the request is multipart.

    # *

    # * @return bool'
- name: withData
  visibility: public
  parameters:
  - name: data
  comment: '# * Set the decoded data on the request.

    # *

    # * @param  array  $data

    # * @return $this'
- name: toPsrRequest
  visibility: public
  parameters: []
  comment: '# * Get the underlying PSR compliant request instance.

    # *

    # * @return \Psr\Http\Message\RequestInterface'
- name: offsetExists
  visibility: public
  parameters:
  - name: offset
  comment: '# * Determine if the given offset exists.

    # *

    # * @param  string  $offset

    # * @return bool'
- name: offsetGet
  visibility: public
  parameters:
  - name: offset
  comment: '# * Get the value for a given offset.

    # *

    # * @param  string  $offset

    # * @return mixed'
- name: offsetSet
  visibility: public
  parameters:
  - name: offset
  - name: value
  comment: '# * Set the value at the given offset.

    # *

    # * @param  string  $offset

    # * @param  mixed  $value

    # * @return void

    # *

    # * @throws \LogicException'
- name: offsetUnset
  visibility: public
  parameters:
  - name: offset
  comment: '# * Unset the value at the given offset.

    # *

    # * @param  string  $offset

    # * @return void

    # *

    # * @throws \LogicException'
traits:
- ArrayAccess
- Illuminate\Support\Arr
- Illuminate\Support\Traits\Macroable
- LogicException
- Macroable
interfaces:
- ArrayAccess
