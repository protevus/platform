name: DeterminesStatusCode
class_comment: null
dependencies: []
properties: []
methods:
- name: ok
  visibility: public
  parameters: []
  comment: '# * Determine if the response code was 200 "OK" response.

    # *

    # * @return bool'
- name: created
  visibility: public
  parameters: []
  comment: '# * Determine if the response code was 201 "Created" response.

    # *

    # * @return bool'
- name: accepted
  visibility: public
  parameters: []
  comment: '# * Determine if the response code was 202 "Accepted" response.

    # *

    # * @return bool'
- name: noContent
  visibility: public
  parameters:
  - name: status
    default: '204'
  comment: '# * Determine if the response code was the given status code and the body
    has no content.

    # *

    # * @param  int  $status

    # * @return bool'
- name: movedPermanently
  visibility: public
  parameters: []
  comment: '# * Determine if the response code was a 301 "Moved Permanently".

    # *

    # * @return bool'
- name: found
  visibility: public
  parameters: []
  comment: '# * Determine if the response code was a 302 "Found" response.

    # *

    # * @return bool'
- name: notModified
  visibility: public
  parameters: []
  comment: '# * Determine if the response code was a 304 "Not Modified" response.

    # *

    # * @return bool'
- name: badRequest
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 400 "Bad Request" response.

    # *

    # * @return bool'
- name: unauthorized
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 401 "Unauthorized" response.

    # *

    # * @return bool'
- name: paymentRequired
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 402 "Payment Required" response.

    # *

    # * @return bool'
- name: forbidden
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 403 "Forbidden" response.

    # *

    # * @return bool'
- name: notFound
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 404 "Not Found" response.

    # *

    # * @return bool'
- name: requestTimeout
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 408 "Request Timeout" response.

    # *

    # * @return bool'
- name: conflict
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 409 "Conflict" response.

    # *

    # * @return bool'
- name: unprocessableContent
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 422 "Unprocessable Content" response.

    # *

    # * @return bool'
- name: unprocessableEntity
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 422 "Unprocessable Content" response.

    # *

    # * @return bool'
- name: tooManyRequests
  visibility: public
  parameters: []
  comment: '# * Determine if the response was a 429 "Too Many Requests" response.

    # *

    # * @return bool'
traits: []
interfaces: []
