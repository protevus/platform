name: CursorPaginator
class_comment: null
dependencies:
- name: ArrayAccess
  type: class
  source: ArrayAccess
- name: Countable
  type: class
  source: Countable
- name: PaginatorContract
  type: class
  source: Illuminate\Contracts\Pagination\CursorPaginator
- name: Arrayable
  type: class
  source: Illuminate\Contracts\Support\Arrayable
- name: Jsonable
  type: class
  source: Illuminate\Contracts\Support\Jsonable
- name: Collection
  type: class
  source: Illuminate\Support\Collection
- name: IteratorAggregate
  type: class
  source: IteratorAggregate
- name: JsonSerializable
  type: class
  source: JsonSerializable
properties:
- name: hasMore
  visibility: protected
  comment: '# * Indicates whether there are more items in the data source.

    # *

    # * @return bool'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: items
  - name: perPage
  - name: cursor
    default: 'null'
  - name: options
    default: '[]'
  comment: "# * Indicates whether there are more items in the data source.\n# *\n\
    # * @return bool\n# */\n# protected $hasMore;\n# \n# /**\n# * Create a new paginator\
    \ instance.\n# *\n# * @param  mixed  $items\n# * @param  int  $perPage\n# * @param\
    \  \\Illuminate\\Pagination\\Cursor|null  $cursor\n# * @param  array  $options\
    \  (path, query, fragment, pageName)\n# * @return void"
- name: setItems
  visibility: protected
  parameters:
  - name: items
  comment: '# * Set the items for the paginator.

    # *

    # * @param  mixed  $items

    # * @return void'
- name: links
  visibility: public
  parameters:
  - name: view
    default: 'null'
  - name: data
    default: '[]'
  comment: '# * Render the paginator using the given view.

    # *

    # * @param  string|null  $view

    # * @param  array  $data

    # * @return \Illuminate\Contracts\Support\Htmlable'
- name: render
  visibility: public
  parameters:
  - name: view
    default: 'null'
  - name: data
    default: '[]'
  comment: '# * Render the paginator using the given view.

    # *

    # * @param  string|null  $view

    # * @param  array  $data

    # * @return \Illuminate\Contracts\Support\Htmlable'
- name: hasMorePages
  visibility: public
  parameters: []
  comment: '# * Determine if there are more items in the data source.

    # *

    # * @return bool'
- name: hasPages
  visibility: public
  parameters: []
  comment: '# * Determine if there are enough items to split into multiple pages.

    # *

    # * @return bool'
- name: onFirstPage
  visibility: public
  parameters: []
  comment: '# * Determine if the paginator is on the first page.

    # *

    # * @return bool'
- name: onLastPage
  visibility: public
  parameters: []
  comment: '# * Determine if the paginator is on the last page.

    # *

    # * @return bool'
- name: toArray
  visibility: public
  parameters: []
  comment: '# * Get the instance as an array.

    # *

    # * @return array'
- name: jsonSerialize
  visibility: public
  parameters: []
  comment: '# * Convert the object into something JSON serializable.

    # *

    # * @return array'
- name: toJson
  visibility: public
  parameters:
  - name: options
    default: '0'
  comment: '# * Convert the object to its JSON representation.

    # *

    # * @param  int  $options

    # * @return string'
traits:
- ArrayAccess
- Countable
- Illuminate\Contracts\Support\Arrayable
- Illuminate\Contracts\Support\Jsonable
- Illuminate\Support\Collection
- IteratorAggregate
- JsonSerializable
interfaces:
- Arrayable
