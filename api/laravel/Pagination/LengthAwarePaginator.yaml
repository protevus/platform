name: LengthAwarePaginator
class_comment: null
dependencies:
- name: ArrayAccess
  type: class
  source: ArrayAccess
- name: Countable
  type: class
  source: Countable
- name: LengthAwarePaginatorContract
  type: class
  source: Illuminate\Contracts\Pagination\LengthAwarePaginator
- name: Arrayable
  type: class
  source: Illuminate\Contracts\Support\Arrayable
- name: Jsonable
  type: class
  source: Illuminate\Contracts\Support\Jsonable
- name: Collection
  type: class
  source: Illuminate\Support\Collection
- name: IteratorAggregate
  type: class
  source: IteratorAggregate
- name: JsonSerializable
  type: class
  source: JsonSerializable
properties:
- name: total
  visibility: protected
  comment: '# * The total number of items before slicing.

    # *

    # * @var int'
- name: lastPage
  visibility: protected
  comment: '# * The last available page.

    # *

    # * @var int'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: items
  - name: total
  - name: perPage
  - name: currentPage
    default: 'null'
  - name: options
    default: '[]'
  comment: "# * The total number of items before slicing.\n# *\n# * @var int\n# */\n\
    # protected $total;\n# \n# /**\n# * The last available page.\n# *\n# * @var int\n\
    # */\n# protected $lastPage;\n# \n# /**\n# * Create a new paginator instance.\n\
    # *\n# * @param  mixed  $items\n# * @param  int  $total\n# * @param  int  $perPage\n\
    # * @param  int|null  $currentPage\n# * @param  array  $options  (path, query,\
    \ fragment, pageName)\n# * @return void"
- name: setCurrentPage
  visibility: protected
  parameters:
  - name: currentPage
  - name: pageName
  comment: '# * Get the current page for the request.

    # *

    # * @param  int  $currentPage

    # * @param  string  $pageName

    # * @return int'
- name: links
  visibility: public
  parameters:
  - name: view
    default: 'null'
  - name: data
    default: '[]'
  comment: '# * Render the paginator using the given view.

    # *

    # * @param  string|null  $view

    # * @param  array  $data

    # * @return \Illuminate\Contracts\Support\Htmlable'
- name: render
  visibility: public
  parameters:
  - name: view
    default: 'null'
  - name: data
    default: '[]'
  comment: '# * Render the paginator using the given view.

    # *

    # * @param  string|null  $view

    # * @param  array  $data

    # * @return \Illuminate\Contracts\Support\Htmlable'
- name: linkCollection
  visibility: public
  parameters: []
  comment: '# * Get the paginator links as a collection (for JSON responses).

    # *

    # * @return \Illuminate\Support\Collection'
- name: elements
  visibility: protected
  parameters: []
  comment: '# * Get the array of elements to pass to the view.

    # *

    # * @return array'
- name: total
  visibility: public
  parameters: []
  comment: '# * Get the total number of items being paginated.

    # *

    # * @return int'
- name: hasMorePages
  visibility: public
  parameters: []
  comment: '# * Determine if there are more items in the data source.

    # *

    # * @return bool'
- name: nextPageUrl
  visibility: public
  parameters: []
  comment: '# * Get the URL for the next page.

    # *

    # * @return string|null'
- name: lastPage
  visibility: public
  parameters: []
  comment: '# * Get the last page.

    # *

    # * @return int'
- name: toArray
  visibility: public
  parameters: []
  comment: '# * Get the instance as an array.

    # *

    # * @return array'
- name: jsonSerialize
  visibility: public
  parameters: []
  comment: '# * Convert the object into something JSON serializable.

    # *

    # * @return array'
- name: toJson
  visibility: public
  parameters:
  - name: options
    default: '0'
  comment: '# * Convert the object to its JSON representation.

    # *

    # * @param  int  $options

    # * @return string'
traits:
- ArrayAccess
- Countable
- Illuminate\Contracts\Support\Arrayable
- Illuminate\Contracts\Support\Jsonable
- Illuminate\Support\Collection
- IteratorAggregate
- JsonSerializable
interfaces:
- Arrayable
