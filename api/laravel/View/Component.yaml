name: Component
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: Container
  type: class
  source: Illuminate\Container\Container
- name: Htmlable
  type: class
  source: Illuminate\Contracts\Support\Htmlable
- name: ViewContract
  type: class
  source: Illuminate\Contracts\View\View
- name: ReflectionClass
  type: class
  source: ReflectionClass
- name: ReflectionMethod
  type: class
  source: ReflectionMethod
- name: ReflectionProperty
  type: class
  source: ReflectionProperty
properties:
- name: except
  visibility: protected
  comment: '# * The properties / methods that should not be exposed to the component.

    # *

    # * @var array'
- name: componentName
  visibility: public
  comment: '# * The component alias name.

    # *

    # * @var string'
- name: attributes
  visibility: public
  comment: '# * The component attributes.

    # *

    # * @var \Illuminate\View\ComponentAttributeBag'
- name: factory
  visibility: protected
  comment: '# * The view factory instance, if any.

    # *

    # * @var \Illuminate\Contracts\View\Factory|null'
- name: componentsResolver
  visibility: protected
  comment: '# * The component resolver callback.

    # *

    # * @var (\Closure(string, array): Component)|null'
- name: bladeViewCache
  visibility: protected
  comment: '# * The cache of blade view names, keyed by contents.

    # *

    # * @var array<string, string>'
- name: propertyCache
  visibility: protected
  comment: '# * The cache of public property names, keyed by class.

    # *

    # * @var array'
- name: methodCache
  visibility: protected
  comment: '# * The cache of public method names, keyed by class.

    # *

    # * @var array'
- name: constructorParametersCache
  visibility: protected
  comment: '# * The cache of constructor parameters, keyed by class.

    # *

    # * @var array<class-string, array<int, string>>'
- name: ignoredParameterNames
  visibility: protected
  comment: '# * The cache of ignored parameter names.

    # *

    # * @var array'
methods:
- name: resolve
  visibility: public
  parameters:
  - name: data
  comment: "# * The properties / methods that should not be exposed to the component.\n\
    # *\n# * @var array\n# */\n# protected $except = [];\n# \n# /**\n# * The component\
    \ alias name.\n# *\n# * @var string\n# */\n# public $componentName;\n# \n# /**\n\
    # * The component attributes.\n# *\n# * @var \\Illuminate\\View\\ComponentAttributeBag\n\
    # */\n# public $attributes;\n# \n# /**\n# * The view factory instance, if any.\n\
    # *\n# * @var \\Illuminate\\Contracts\\View\\Factory|null\n# */\n# protected static\
    \ $factory;\n# \n# /**\n# * The component resolver callback.\n# *\n# * @var (\\\
    Closure(string, array): Component)|null\n# */\n# protected static $componentsResolver;\n\
    # \n# /**\n# * The cache of blade view names, keyed by contents.\n# *\n# * @var\
    \ array<string, string>\n# */\n# protected static $bladeViewCache = [];\n# \n\
    # /**\n# * The cache of public property names, keyed by class.\n# *\n# * @var\
    \ array\n# */\n# protected static $propertyCache = [];\n# \n# /**\n# * The cache\
    \ of public method names, keyed by class.\n# *\n# * @var array\n# */\n# protected\
    \ static $methodCache = [];\n# \n# /**\n# * The cache of constructor parameters,\
    \ keyed by class.\n# *\n# * @var array<class-string, array<int, string>>\n# */\n\
    # protected static $constructorParametersCache = [];\n# \n# /**\n# * The cache\
    \ of ignored parameter names.\n# *\n# * @var array\n# */\n# protected static $ignoredParameterNames\
    \ = [];\n# \n# /**\n# * Get the view / view contents that represent the component.\n\
    # *\n# * @return \\Illuminate\\Contracts\\View\\View|\\Illuminate\\Contracts\\\
    Support\\Htmlable|\\Closure|string\n# */\n# abstract public function render();\n\
    # \n# /**\n# * Resolve the component instance with the given data.\n# *\n# * @param\
    \  array  $data\n# * @return static"
- name: extractConstructorParameters
  visibility: protected
  parameters: []
  comment: '# * Extract the constructor parameters for the component.

    # *

    # * @return array'
- name: resolveView
  visibility: public
  parameters: []
  comment: '# * Resolve the Blade view or view file that should be used when rendering
    the component.

    # *

    # * @return \Illuminate\Contracts\View\View|\Illuminate\Contracts\Support\Htmlable|\Closure|string'
- name: extractBladeViewFromString
  visibility: protected
  parameters:
  - name: contents
  comment: '# * Create a Blade view with the raw component string content.

    # *

    # * @param  string  $contents

    # * @return string'
- name: createBladeViewFromString
  visibility: protected
  parameters:
  - name: factory
  - name: contents
  comment: '# * Create a Blade view with the raw component string content.

    # *

    # * @param  \Illuminate\Contracts\View\Factory  $factory

    # * @param  string  $contents

    # * @return string'
- name: data
  visibility: public
  parameters: []
  comment: '# * Get the data that should be supplied to the view.

    # *

    # * @author Freek Van der Herten

    # * @author Brent Roose

    # *

    # * @return array'
- name: extractPublicProperties
  visibility: protected
  parameters: []
  comment: '# * Extract the public properties for the component.

    # *

    # * @return array'
- name: extractPublicMethods
  visibility: protected
  parameters: []
  comment: '# * Extract the public methods for the component.

    # *

    # * @return array'
- name: createVariableFromMethod
  visibility: protected
  parameters:
  - name: method
  comment: '# * Create a callable variable from the given method.

    # *

    # * @param  \ReflectionMethod  $method

    # * @return mixed'
- name: createInvokableVariable
  visibility: protected
  parameters:
  - name: method
  comment: '# * Create an invokable, toStringable variable for the given component
    method.

    # *

    # * @param  string  $method

    # * @return \Illuminate\View\InvokableComponentVariable'
- name: shouldIgnore
  visibility: protected
  parameters:
  - name: name
  comment: '# * Determine if the given property / method should be ignored.

    # *

    # * @param  string  $name

    # * @return bool'
- name: ignoredMethods
  visibility: protected
  parameters: []
  comment: '# * Get the methods that should be ignored.

    # *

    # * @return array'
- name: withName
  visibility: public
  parameters:
  - name: name
  comment: '# * Set the component alias name.

    # *

    # * @param  string  $name

    # * @return $this'
- name: withAttributes
  visibility: public
  parameters:
  - name: attributes
  comment: '# * Set the extra attributes that the component should make available.

    # *

    # * @param  array  $attributes

    # * @return $this'
- name: newAttributeBag
  visibility: protected
  parameters:
  - name: attributes
    default: '[]'
  comment: '# * Get a new attribute bag instance.

    # *

    # * @param  array  $attributes

    # * @return \Illuminate\View\ComponentAttributeBag'
- name: shouldRender
  visibility: public
  parameters: []
  comment: '# * Determine if the component should be rendered.

    # *

    # * @return bool'
- name: view
  visibility: public
  parameters:
  - name: view
  - name: data
    default: '[]'
  - name: mergeData
    default: '[]'
  comment: '# * Get the evaluated view contents for the given view.

    # *

    # * @param  string|null  $view

    # * @param  \Illuminate\Contracts\Support\Arrayable|array  $data

    # * @param  array  $mergeData

    # * @return \Illuminate\Contracts\View\View'
- name: factory
  visibility: protected
  parameters: []
  comment: '# * Get the view factory instance.

    # *

    # * @return \Illuminate\Contracts\View\Factory'
- name: ignoredParameterNames
  visibility: public
  parameters: []
  comment: '# * Get the cached set of anonymous component constructor parameter names
    to exclude.

    # *

    # * @return array'
- name: flushCache
  visibility: public
  parameters: []
  comment: '# * Flush the component''s cached state.

    # *

    # * @return void'
- name: forgetFactory
  visibility: public
  parameters: []
  comment: '# * Forget the component''s factory instance.

    # *

    # * @return void'
- name: forgetComponentsResolver
  visibility: public
  parameters: []
  comment: '# * Forget the component''s resolver callback.

    # *

    # * @return void

    # *

    # * @internal'
- name: resolveComponentsUsing
  visibility: public
  parameters:
  - name: resolver
  comment: '# * Set the callback that should be used to resolve components within
    views.

    # *

    # * @param  \Closure(string $component, array $data): Component  $resolver

    # * @return void

    # *

    # * @internal'
traits:
- Closure
- Illuminate\Container\Container
- Illuminate\Contracts\Support\Htmlable
- ReflectionClass
- ReflectionMethod
- ReflectionProperty
interfaces: []
