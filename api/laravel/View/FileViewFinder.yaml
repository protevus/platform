name: FileViewFinder
class_comment: null
dependencies:
- name: Filesystem
  type: class
  source: Illuminate\Filesystem\Filesystem
- name: InvalidArgumentException
  type: class
  source: InvalidArgumentException
properties:
- name: files
  visibility: protected
  comment: '# * The filesystem instance.

    # *

    # * @var \Illuminate\Filesystem\Filesystem'
- name: paths
  visibility: protected
  comment: '# * The array of active view paths.

    # *

    # * @var array'
- name: views
  visibility: protected
  comment: '# * The array of views that have been located.

    # *

    # * @var array'
- name: hints
  visibility: protected
  comment: '# * The namespace to file path hints.

    # *

    # * @var array'
- name: extensions
  visibility: protected
  comment: '# * Register a view extension with the finder.

    # *

    # * @var string[]'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: files
  - name: paths
  - name: extensions
    default: 'null'
  comment: "# * The filesystem instance.\n# *\n# * @var \\Illuminate\\Filesystem\\\
    Filesystem\n# */\n# protected $files;\n# \n# /**\n# * The array of active view\
    \ paths.\n# *\n# * @var array\n# */\n# protected $paths;\n# \n# /**\n# * The array\
    \ of views that have been located.\n# *\n# * @var array\n# */\n# protected $views\
    \ = [];\n# \n# /**\n# * The namespace to file path hints.\n# *\n# * @var array\n\
    # */\n# protected $hints = [];\n# \n# /**\n# * Register a view extension with\
    \ the finder.\n# *\n# * @var string[]\n# */\n# protected $extensions = ['blade.php',\
    \ 'php', 'css', 'html'];\n# \n# /**\n# * Create a new file view loader instance.\n\
    # *\n# * @param  \\Illuminate\\Filesystem\\Filesystem  $files\n# * @param  array\
    \  $paths\n# * @param  array|null  $extensions\n# * @return void"
- name: find
  visibility: public
  parameters:
  - name: name
  comment: '# * Get the fully qualified location of the view.

    # *

    # * @param  string  $name

    # * @return string'
- name: findNamespacedView
  visibility: protected
  parameters:
  - name: name
  comment: '# * Get the path to a template with a named path.

    # *

    # * @param  string  $name

    # * @return string'
- name: parseNamespaceSegments
  visibility: protected
  parameters:
  - name: name
  comment: '# * Get the segments of a template with a named path.

    # *

    # * @param  string  $name

    # * @return array

    # *

    # * @throws \InvalidArgumentException'
- name: findInPaths
  visibility: protected
  parameters:
  - name: name
  - name: paths
  comment: '# * Find the given view in the list of paths.

    # *

    # * @param  string  $name

    # * @param  array  $paths

    # * @return string

    # *

    # * @throws \InvalidArgumentException'
- name: getPossibleViewFiles
  visibility: protected
  parameters:
  - name: name
  comment: '# * Get an array of possible view files.

    # *

    # * @param  string  $name

    # * @return array'
- name: addLocation
  visibility: public
  parameters:
  - name: location
  comment: '# * Add a location to the finder.

    # *

    # * @param  string  $location

    # * @return void'
- name: prependLocation
  visibility: public
  parameters:
  - name: location
  comment: '# * Prepend a location to the finder.

    # *

    # * @param  string  $location

    # * @return void'
- name: resolvePath
  visibility: protected
  parameters:
  - name: path
  comment: '# * Resolve the path.

    # *

    # * @param  string  $path

    # * @return string'
- name: addNamespace
  visibility: public
  parameters:
  - name: namespace
  - name: hints
  comment: '# * Add a namespace hint to the finder.

    # *

    # * @param  string  $namespace

    # * @param  string|array  $hints

    # * @return void'
- name: prependNamespace
  visibility: public
  parameters:
  - name: namespace
  - name: hints
  comment: '# * Prepend a namespace hint to the finder.

    # *

    # * @param  string  $namespace

    # * @param  string|array  $hints

    # * @return void'
- name: replaceNamespace
  visibility: public
  parameters:
  - name: namespace
  - name: hints
  comment: '# * Replace the namespace hints for the given namespace.

    # *

    # * @param  string  $namespace

    # * @param  string|array  $hints

    # * @return void'
- name: addExtension
  visibility: public
  parameters:
  - name: extension
  comment: '# * Register an extension with the view finder.

    # *

    # * @param  string  $extension

    # * @return void'
- name: hasHintInformation
  visibility: public
  parameters:
  - name: name
  comment: '# * Returns whether or not the view name has any hint information.

    # *

    # * @param  string  $name

    # * @return bool'
- name: flush
  visibility: public
  parameters: []
  comment: '# * Flush the cache of located views.

    # *

    # * @return void'
- name: getFilesystem
  visibility: public
  parameters: []
  comment: '# * Get the filesystem instance.

    # *

    # * @return \Illuminate\Filesystem\Filesystem'
- name: setPaths
  visibility: public
  parameters:
  - name: paths
  comment: '# * Set the active view paths.

    # *

    # * @param  array  $paths

    # * @return $this'
- name: getPaths
  visibility: public
  parameters: []
  comment: '# * Get the active view paths.

    # *

    # * @return array'
- name: getViews
  visibility: public
  parameters: []
  comment: '# * Get the views that have been located.

    # *

    # * @return array'
- name: getHints
  visibility: public
  parameters: []
  comment: '# * Get the namespace to file path hints.

    # *

    # * @return array'
- name: getExtensions
  visibility: public
  parameters: []
  comment: '# * Get registered extensions.

    # *

    # * @return array'
traits:
- Illuminate\Filesystem\Filesystem
- InvalidArgumentException
interfaces:
- ViewFinderInterface
