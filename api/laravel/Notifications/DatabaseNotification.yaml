name: DatabaseNotification
class_comment: null
dependencies:
- name: Builder
  type: class
  source: Illuminate\Database\Eloquent\Builder
- name: Model
  type: class
  source: Illuminate\Database\Eloquent\Model
properties:
- name: keyType
  visibility: protected
  comment: '# * The "type" of the primary key ID.

    # *

    # * @var string'
- name: incrementing
  visibility: public
  comment: '# * Indicates if the IDs are auto-incrementing.

    # *

    # * @var bool'
- name: table
  visibility: protected
  comment: '# * The table associated with the model.

    # *

    # * @var string'
- name: guarded
  visibility: protected
  comment: '# * The guarded attributes on the model.

    # *

    # * @var array'
- name: casts
  visibility: protected
  comment: '# * The attributes that should be cast to native types.

    # *

    # * @var array'
methods:
- name: notifiable
  visibility: public
  parameters: []
  comment: "# * The \"type\" of the primary key ID.\n# *\n# * @var string\n# */\n\
    # protected $keyType = 'string';\n# \n# /**\n# * Indicates if the IDs are auto-incrementing.\n\
    # *\n# * @var bool\n# */\n# public $incrementing = false;\n# \n# /**\n# * The\
    \ table associated with the model.\n# *\n# * @var string\n# */\n# protected $table\
    \ = 'notifications';\n# \n# /**\n# * The guarded attributes on the model.\n# *\n\
    # * @var array\n# */\n# protected $guarded = [];\n# \n# /**\n# * The attributes\
    \ that should be cast to native types.\n# *\n# * @var array\n# */\n# protected\
    \ $casts = [\n# 'data' => 'array',\n# 'read_at' => 'datetime',\n# ];\n# \n# /**\n\
    # * Get the notifiable entity that the notification belongs to.\n# *\n# * @return\
    \ \\Illuminate\\Database\\Eloquent\\Relations\\MorphTo<\\Illuminate\\Database\\\
    Eloquent\\Model, $this>"
- name: markAsRead
  visibility: public
  parameters: []
  comment: '# * Mark the notification as read.

    # *

    # * @return void'
- name: markAsUnread
  visibility: public
  parameters: []
  comment: '# * Mark the notification as unread.

    # *

    # * @return void'
- name: read
  visibility: public
  parameters: []
  comment: '# * Determine if a notification has been read.

    # *

    # * @return bool'
- name: unread
  visibility: public
  parameters: []
  comment: '# * Determine if a notification has not been read.

    # *

    # * @return bool'
- name: scopeRead
  visibility: public
  parameters:
  - name: query
  comment: '# * Scope a query to only include read notifications.

    # *

    # * @param  \Illuminate\Database\Eloquent\Builder<static>  $query

    # * @return \Illuminate\Database\Eloquent\Builder<static>'
- name: scopeUnread
  visibility: public
  parameters:
  - name: query
  comment: '# * Scope a query to only include unread notifications.

    # *

    # * @param  \Illuminate\Database\Eloquent\Builder<static>  $query

    # * @return \Illuminate\Database\Eloquent\Builder<static>'
- name: newCollection
  visibility: public
  parameters:
  - name: models
    default: '[]'
  comment: '# * Create a new database notification collection instance.

    # *

    # * @param  array  $models

    # * @return \Illuminate\Notifications\DatabaseNotificationCollection'
traits:
- Illuminate\Database\Eloquent\Builder
- Illuminate\Database\Eloquent\Model
interfaces: []
