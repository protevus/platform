name: Message
class_comment: '# * @mixin \Symfony\Component\Mime\Email'
dependencies:
- name: Attachable
  type: class
  source: Illuminate\Contracts\Mail\Attachable
- name: Str
  type: class
  source: Illuminate\Support\Str
- name: ForwardsCalls
  type: class
  source: Illuminate\Support\Traits\ForwardsCalls
- name: Address
  type: class
  source: Symfony\Component\Mime\Address
- name: Email
  type: class
  source: Symfony\Component\Mime\Email
- name: DataPart
  type: class
  source: Symfony\Component\Mime\Part\DataPart
- name: File
  type: class
  source: Symfony\Component\Mime\Part\File
- name: ForwardsCalls
  type: class
  source: ForwardsCalls
properties:
- name: message
  visibility: protected
  comment: "# * @mixin \\Symfony\\Component\\Mime\\Email\n# */\n# class Message\n\
    # {\n# use ForwardsCalls;\n# \n# /**\n# * The Symfony Email instance.\n# *\n#\
    \ * @var \\Symfony\\Component\\Mime\\Email"
- name: embeddedFiles
  visibility: protected
  comment: '# * CIDs of files embedded in the message.

    # *

    # * @deprecated Will be removed in a future Laravel version.

    # *

    # * @var array'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: message
  comment: "# * @mixin \\Symfony\\Component\\Mime\\Email\n# */\n# class Message\n\
    # {\n# use ForwardsCalls;\n# \n# /**\n# * The Symfony Email instance.\n# *\n#\
    \ * @var \\Symfony\\Component\\Mime\\Email\n# */\n# protected $message;\n# \n\
    # /**\n# * CIDs of files embedded in the message.\n# *\n# * @deprecated Will be\
    \ removed in a future Laravel version.\n# *\n# * @var array\n# */\n# protected\
    \ $embeddedFiles = [];\n# \n# /**\n# * Create a new message instance.\n# *\n#\
    \ * @param  \\Symfony\\Component\\Mime\\Email  $message\n# * @return void"
- name: from
  visibility: public
  parameters:
  - name: address
  - name: name
    default: 'null'
  comment: '# * Add a "from" address to the message.

    # *

    # * @param  string|array  $address

    # * @param  string|null  $name

    # * @return $this'
- name: sender
  visibility: public
  parameters:
  - name: address
  - name: name
    default: 'null'
  comment: '# * Set the "sender" of the message.

    # *

    # * @param  string|array  $address

    # * @param  string|null  $name

    # * @return $this'
- name: returnPath
  visibility: public
  parameters:
  - name: address
  comment: '# * Set the "return path" of the message.

    # *

    # * @param  string  $address

    # * @return $this'
- name: to
  visibility: public
  parameters:
  - name: address
  - name: name
    default: 'null'
  - name: override
    default: 'false'
  comment: '# * Add a recipient to the message.

    # *

    # * @param  string|array  $address

    # * @param  string|null  $name

    # * @param  bool  $override

    # * @return $this'
- name: forgetTo
  visibility: public
  parameters: []
  comment: '# * Remove all "to" addresses from the message.

    # *

    # * @return $this'
- name: cc
  visibility: public
  parameters:
  - name: address
  - name: name
    default: 'null'
  - name: override
    default: 'false'
  comment: '# * Add a carbon copy to the message.

    # *

    # * @param  string|array  $address

    # * @param  string|null  $name

    # * @param  bool  $override

    # * @return $this'
- name: forgetCc
  visibility: public
  parameters: []
  comment: '# * Remove all carbon copy addresses from the message.

    # *

    # * @return $this'
- name: bcc
  visibility: public
  parameters:
  - name: address
  - name: name
    default: 'null'
  - name: override
    default: 'false'
  comment: '# * Add a blind carbon copy to the message.

    # *

    # * @param  string|array  $address

    # * @param  string|null  $name

    # * @param  bool  $override

    # * @return $this'
- name: forgetBcc
  visibility: public
  parameters: []
  comment: '# * Remove all of the blind carbon copy addresses from the message.

    # *

    # * @return $this'
- name: replyTo
  visibility: public
  parameters:
  - name: address
  - name: name
    default: 'null'
  comment: '# * Add a "reply to" address to the message.

    # *

    # * @param  string|array  $address

    # * @param  string|null  $name

    # * @return $this'
- name: addAddresses
  visibility: protected
  parameters:
  - name: address
  - name: name
  - name: type
  comment: '# * Add a recipient to the message.

    # *

    # * @param  string|array  $address

    # * @param  string  $name

    # * @param  string  $type

    # * @return $this'
- name: addAddressDebugHeader
  visibility: protected
  parameters:
  - name: header
  - name: addresses
  comment: '# * Add an address debug header for a list of recipients.

    # *

    # * @param  string  $header

    # * @param  \Symfony\Component\Mime\Address[]  $addresses

    # * @return $this'
- name: subject
  visibility: public
  parameters:
  - name: subject
  comment: '# * Set the subject of the message.

    # *

    # * @param  string  $subject

    # * @return $this'
- name: priority
  visibility: public
  parameters:
  - name: level
  comment: '# * Set the message priority level.

    # *

    # * @param  int  $level

    # * @return $this'
- name: attach
  visibility: public
  parameters:
  - name: file
  - name: options
    default: '[]'
  comment: '# * Attach a file to the message.

    # *

    # * @param  string|\Illuminate\Contracts\Mail\Attachable|\Illuminate\Mail\Attachment  $file

    # * @param  array  $options

    # * @return $this'
- name: attachData
  visibility: public
  parameters:
  - name: data
  - name: name
  - name: options
    default: '[]'
  comment: '# * Attach in-memory data as an attachment.

    # *

    # * @param  string|resource  $data

    # * @param  string  $name

    # * @param  array  $options

    # * @return $this'
- name: embed
  visibility: public
  parameters:
  - name: file
  comment: '# * Embed a file in the message and get the CID.

    # *

    # * @param  string|\Illuminate\Contracts\Mail\Attachable|\Illuminate\Mail\Attachment  $file

    # * @return string'
- name: embedData
  visibility: public
  parameters:
  - name: data
  - name: name
  - name: contentType
    default: 'null'
  comment: '# * Embed in-memory data in the message and get the CID.

    # *

    # * @param  string|resource  $data

    # * @param  string  $name

    # * @param  string|null  $contentType

    # * @return string'
- name: getSymfonyMessage
  visibility: public
  parameters: []
  comment: '# * Get the underlying Symfony Email instance.

    # *

    # * @return \Symfony\Component\Mime\Email'
- name: __call
  visibility: public
  parameters:
  - name: method
  - name: parameters
  comment: '# * Dynamically pass missing methods to the Symfony instance.

    # *

    # * @param  string  $method

    # * @param  array  $parameters

    # * @return mixed'
traits:
- Illuminate\Contracts\Mail\Attachable
- Illuminate\Support\Str
- Illuminate\Support\Traits\ForwardsCalls
- Symfony\Component\Mime\Address
- Symfony\Component\Mime\Email
- Symfony\Component\Mime\Part\DataPart
- Symfony\Component\Mime\Part\File
- ForwardsCalls
interfaces: []
