name: EncryptCookies
class_comment: null
dependencies:
- name: Closure
  type: class
  source: Closure
- name: DecryptException
  type: class
  source: Illuminate\Contracts\Encryption\DecryptException
- name: EncrypterContract
  type: class
  source: Illuminate\Contracts\Encryption\Encrypter
- name: CookieValuePrefix
  type: class
  source: Illuminate\Cookie\CookieValuePrefix
- name: Arr
  type: class
  source: Illuminate\Support\Arr
- name: Cookie
  type: class
  source: Symfony\Component\HttpFoundation\Cookie
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
properties:
- name: encrypter
  visibility: protected
  comment: '# * The encrypter instance.

    # *

    # * @var \Illuminate\Contracts\Encryption\Encrypter'
- name: except
  visibility: protected
  comment: '# * The names of the cookies that should not be encrypted.

    # *

    # * @var array<int, string>'
- name: neverEncrypt
  visibility: protected
  comment: '# * The globally ignored cookies that should not be encrypted.

    # *

    # * @var array'
- name: serialize
  visibility: protected
  comment: '# * Indicates if cookies should be serialized.

    # *

    # * @var bool'
methods:
- name: __construct
  visibility: public
  parameters:
  - name: encrypter
  comment: "# * The encrypter instance.\n# *\n# * @var \\Illuminate\\Contracts\\Encryption\\\
    Encrypter\n# */\n# protected $encrypter;\n# \n# /**\n# * The names of the cookies\
    \ that should not be encrypted.\n# *\n# * @var array<int, string>\n# */\n# protected\
    \ $except = [];\n# \n# /**\n# * The globally ignored cookies that should not be\
    \ encrypted.\n# *\n# * @var array\n# */\n# protected static $neverEncrypt = [];\n\
    # \n# /**\n# * Indicates if cookies should be serialized.\n# *\n# * @var bool\n\
    # */\n# protected static $serialize = false;\n# \n# /**\n# * Create a new CookieGuard\
    \ instance.\n# *\n# * @param  \\Illuminate\\Contracts\\Encryption\\Encrypter \
    \ $encrypter\n# * @return void"
- name: disableFor
  visibility: public
  parameters:
  - name: name
  comment: '# * Disable encryption for the given cookie name(s).

    # *

    # * @param  string|array  $name

    # * @return void'
- name: handle
  visibility: public
  parameters:
  - name: request
  - name: next
  comment: '# * Handle an incoming request.

    # *

    # * @param  \Illuminate\Http\Request  $request

    # * @param  \Closure  $next

    # * @return \Symfony\Component\HttpFoundation\Response'
- name: decrypt
  visibility: protected
  parameters:
  - name: request
  comment: '# * Decrypt the cookies on the request.

    # *

    # * @param  \Symfony\Component\HttpFoundation\Request  $request

    # * @return \Symfony\Component\HttpFoundation\Request'
- name: validateValue
  visibility: protected
  parameters:
  - name: key
  - name: value
  comment: '# * Validate and remove the cookie value prefix from the value.

    # *

    # * @param  string  $key

    # * @param  string  $value

    # * @return string|array|null'
- name: validateArray
  visibility: protected
  parameters:
  - name: key
  - name: value
  comment: '# * Validate and remove the cookie value prefix from all values of an
    array.

    # *

    # * @param  string  $key

    # * @param  array  $value

    # * @return array'
- name: decryptCookie
  visibility: protected
  parameters:
  - name: name
  - name: cookie
  comment: '# * Decrypt the given cookie and return the value.

    # *

    # * @param  string  $name

    # * @param  string|array  $cookie

    # * @return string|array'
- name: decryptArray
  visibility: protected
  parameters:
  - name: cookie
  comment: '# * Decrypt an array based cookie.

    # *

    # * @param  array  $cookie

    # * @return array'
- name: encrypt
  visibility: protected
  parameters:
  - name: response
  comment: '# * Encrypt the cookies on an outgoing response.

    # *

    # * @param  \Symfony\Component\HttpFoundation\Response  $response

    # * @return \Symfony\Component\HttpFoundation\Response'
- name: duplicate
  visibility: protected
  parameters:
  - name: cookie
  - name: value
  comment: '# * Duplicate a cookie with a new value.

    # *

    # * @param  \Symfony\Component\HttpFoundation\Cookie  $cookie

    # * @param  mixed  $value

    # * @return \Symfony\Component\HttpFoundation\Cookie'
- name: isDisabled
  visibility: public
  parameters:
  - name: name
  comment: '# * Determine whether encryption has been disabled for the given cookie.

    # *

    # * @param  string  $name

    # * @return bool'
- name: except
  visibility: public
  parameters:
  - name: cookies
  comment: '# * Indicate that the given cookies should never be encrypted.

    # *

    # * @param  array|string  $cookies

    # * @return void'
- name: serialized
  visibility: public
  parameters:
  - name: name
  comment: '# * Determine if the cookie contents should be serialized.

    # *

    # * @param  string  $name

    # * @return bool'
- name: flushState
  visibility: public
  parameters: []
  comment: '# * Flush the middleware''s global state.

    # *

    # * @return void'
traits:
- Closure
- Illuminate\Contracts\Encryption\DecryptException
- Illuminate\Cookie\CookieValuePrefix
- Illuminate\Support\Arr
- Symfony\Component\HttpFoundation\Cookie
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\Response
interfaces: []
