name: AbstractController
class_comment: null
dependencies:
- name: ContainerInterface
  type: class
  source: Psr\Container\ContainerInterface
- name: EvolvableLinkInterface
  type: class
  source: Psr\Link\EvolvableLinkInterface
- name: LinkInterface
  type: class
  source: Psr\Link\LinkInterface
- name: ServiceNotFoundException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException
- name: ContainerBagInterface
  type: class
  source: Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface
- name: FormType
  type: class
  source: Symfony\Component\Form\Extension\Core\Type\FormType
- name: FormBuilderInterface
  type: class
  source: Symfony\Component\Form\FormBuilderInterface
- name: FormFactoryInterface
  type: class
  source: Symfony\Component\Form\FormFactoryInterface
- name: FormInterface
  type: class
  source: Symfony\Component\Form\FormInterface
- name: BinaryFileResponse
  type: class
  source: Symfony\Component\HttpFoundation\BinaryFileResponse
- name: SessionNotFoundException
  type: class
  source: Symfony\Component\HttpFoundation\Exception\SessionNotFoundException
- name: JsonResponse
  type: class
  source: Symfony\Component\HttpFoundation\JsonResponse
- name: RedirectResponse
  type: class
  source: Symfony\Component\HttpFoundation\RedirectResponse
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: RequestStack
  type: class
  source: Symfony\Component\HttpFoundation\RequestStack
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
- name: ResponseHeaderBag
  type: class
  source: Symfony\Component\HttpFoundation\ResponseHeaderBag
- name: FlashBagAwareSessionInterface
  type: class
  source: Symfony\Component\HttpFoundation\Session\FlashBagAwareSessionInterface
- name: StreamedResponse
  type: class
  source: Symfony\Component\HttpFoundation\StreamedResponse
- name: NotFoundHttpException
  type: class
  source: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
- name: HttpKernelInterface
  type: class
  source: Symfony\Component\HttpKernel\HttpKernelInterface
- name: UrlGeneratorInterface
  type: class
  source: Symfony\Component\Routing\Generator\UrlGeneratorInterface
- name: RouterInterface
  type: class
  source: Symfony\Component\Routing\RouterInterface
- name: TokenStorageInterface
  type: class
  source: Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface
- name: AuthorizationCheckerInterface
  type: class
  source: Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface
- name: AccessDeniedException
  type: class
  source: Symfony\Component\Security\Core\Exception\AccessDeniedException
- name: UserInterface
  type: class
  source: Symfony\Component\Security\Core\User\UserInterface
- name: CsrfToken
  type: class
  source: Symfony\Component\Security\Csrf\CsrfToken
- name: CsrfTokenManagerInterface
  type: class
  source: Symfony\Component\Security\Csrf\CsrfTokenManagerInterface
- name: SerializerInterface
  type: class
  source: Symfony\Component\Serializer\SerializerInterface
- name: AddLinkHeaderListener
  type: class
  source: Symfony\Component\WebLink\EventListener\AddLinkHeaderListener
- name: GenericLinkProvider
  type: class
  source: Symfony\Component\WebLink\GenericLinkProvider
- name: HttpHeaderSerializer
  type: class
  source: Symfony\Component\WebLink\HttpHeaderSerializer
- name: Required
  type: class
  source: Symfony\Contracts\Service\Attribute\Required
- name: ServiceSubscriberInterface
  type: class
  source: Symfony\Contracts\Service\ServiceSubscriberInterface
- name: Environment
  type: class
  source: Twig\Environment
properties: []
methods:
- name: getParameter
  visibility: protected
  parameters:
  - name: name
  comment: "# * Provides shortcuts for HTTP-related features in controllers.\n# *\n\
    # * @author Fabien Potencier <fabien@symfony.com>\n# */\n# abstract class AbstractController\
    \ implements ServiceSubscriberInterface\n# {\n# protected ContainerInterface $container;\n\
    # \n# #[Required]\n# public function setContainer(ContainerInterface $container):\
    \ ?ContainerInterface\n# {\n# $previous = $this->container ?? null;\n# $this->container\
    \ = $container;\n# \n# return $previous;\n# }\n# \n# /**\n# * Gets a container\
    \ parameter by its name."
- name: getSubscribedServices
  visibility: public
  parameters: []
  comment: null
- name: generateUrl
  visibility: protected
  parameters:
  - name: route
  - name: parameters
    default: '[]'
  - name: referenceType
    default: UrlGeneratorInterface::ABSOLUTE_PATH
  comment: '# * Generates a URL from the given parameters.

    # *

    # * @see UrlGeneratorInterface'
- name: forward
  visibility: protected
  parameters:
  - name: controller
  - name: path
    default: '[]'
  - name: query
    default: '[]'
  comment: '# * Forwards the request to another controller.

    # *

    # * @param string $controller The controller name (a string like "App\Controller\PostController::index"
    or "App\Controller\PostController" if it is invokable)'
- name: redirect
  visibility: protected
  parameters:
  - name: url
  - name: status
    default: '302'
  comment: '# * Returns a RedirectResponse to the given URL.

    # *

    # * @param int $status The HTTP status code (302 "Found" by default)'
- name: redirectToRoute
  visibility: protected
  parameters:
  - name: route
  - name: parameters
    default: '[]'
  - name: status
    default: '302'
  comment: '# * Returns a RedirectResponse to the given route with the given parameters.

    # *

    # * @param int $status The HTTP status code (302 "Found" by default)'
- name: json
  visibility: protected
  parameters:
  - name: data
  - name: status
    default: '200'
  - name: headers
    default: '[]'
  - name: context
    default: '[]'
  comment: '# * Returns a JsonResponse that uses the serializer component if enabled,
    or json_encode.

    # *

    # * @param int $status The HTTP status code (200 "OK" by default)'
- name: file
  visibility: protected
  parameters:
  - name: file
  - name: fileName
    default: 'null'
  - name: disposition
    default: ResponseHeaderBag::DISPOSITION_ATTACHMENT
  comment: '# * Returns a BinaryFileResponse object with original or customized file
    name and disposition header.'
- name: addFlash
  visibility: protected
  parameters:
  - name: type
  - name: message
  comment: '# * Adds a flash message to the current session for type.

    # *

    # * @throws \LogicException'
- name: isGranted
  visibility: protected
  parameters:
  - name: attribute
  - name: subject
    default: 'null'
  comment: '# * Checks if the attribute is granted against the current authentication
    token and optionally supplied subject.

    # *

    # * @throws \LogicException'
- name: denyAccessUnlessGranted
  visibility: protected
  parameters:
  - name: attribute
  - name: subject
    default: 'null'
  - name: message
    default: '''Access Denied.'''
  comment: '# * Throws an exception unless the attribute is granted against the current
    authentication token and optionally

    # * supplied subject.

    # *

    # * @throws AccessDeniedException'
- name: renderView
  visibility: protected
  parameters:
  - name: view
  - name: parameters
    default: '[]'
  comment: '# * Returns a rendered view.

    # *

    # * Forms found in parameters are auto-cast to form views.'
- name: renderBlockView
  visibility: protected
  parameters:
  - name: view
  - name: block
  - name: parameters
    default: '[]'
  comment: '# * Returns a rendered block from a view.

    # *

    # * Forms found in parameters are auto-cast to form views.'
- name: render
  visibility: protected
  parameters:
  - name: view
  - name: parameters
    default: '[]'
  - name: response
    default: 'null'
  comment: '# * Renders a view.

    # *

    # * If an invalid form is found in the list of parameters, a 422 status code is
    returned.

    # * Forms found in parameters are auto-cast to form views.'
- name: renderBlock
  visibility: protected
  parameters:
  - name: view
  - name: block
  - name: parameters
    default: '[]'
  - name: response
    default: 'null'
  comment: '# * Renders a block in a view.

    # *

    # * If an invalid form is found in the list of parameters, a 422 status code is
    returned.

    # * Forms found in parameters are auto-cast to form views.'
- name: stream
  visibility: protected
  parameters:
  - name: view
  - name: parameters
    default: '[]'
  - name: response
    default: 'null'
  comment: '# * Streams a view.'
- name: createNotFoundException
  visibility: protected
  parameters:
  - name: message
    default: '''Not Found'''
  - name: previous
    default: 'null'
  comment: '# * Returns a NotFoundHttpException.

    # *

    # * This will result in a 404 response code. Usage example:

    # *

    # *     throw $this->createNotFoundException(''Page not found!'');'
- name: createAccessDeniedException
  visibility: protected
  parameters:
  - name: message
    default: '''Access Denied.'''
  - name: previous
    default: 'null'
  comment: '# * Returns an AccessDeniedException.

    # *

    # * This will result in a 403 response code. Usage example:

    # *

    # *     throw $this->createAccessDeniedException(''Unable to access this page!'');

    # *

    # * @throws \LogicException If the Security component is not available'
- name: createForm
  visibility: protected
  parameters:
  - name: type
  - name: data
    default: 'null'
  - name: options
    default: '[]'
  comment: '# * Creates and returns a Form instance from the type of the form.'
- name: createFormBuilder
  visibility: protected
  parameters:
  - name: data
    default: 'null'
  - name: options
    default: '[]'
  comment: '# * Creates and returns a form builder instance.'
- name: getUser
  visibility: protected
  parameters: []
  comment: '# * Get a user from the Security Token Storage.

    # *

    # * @throws \LogicException If SecurityBundle is not available

    # *

    # * @see TokenInterface::getUser()'
- name: isCsrfTokenValid
  visibility: protected
  parameters:
  - name: id
  - name: token
  comment: '# * Checks the validity of a CSRF token.

    # *

    # * @param string      $id    The id used when generating the token

    # * @param string|null $token The actual token sent with the request that should
    be validated'
- name: addLink
  visibility: protected
  parameters:
  - name: request
  - name: link
  comment: '# * Adds a Link HTTP header to the current response.

    # *

    # * @see https://tools.ietf.org/html/rfc5988'
- name: sendEarlyHints
  visibility: protected
  parameters:
  - name: links
    default: '[]'
  - name: response
    default: 'null'
  comment: '# * @param LinkInterface[] $links'
- name: doRenderView
  visibility: private
  parameters:
  - name: view
  - name: block
  - name: parameters
  - name: method
  comment: null
- name: doRender
  visibility: private
  parameters:
  - name: view
  - name: block
  - name: parameters
  - name: response
  - name: method
  comment: null
traits:
- Psr\Container\ContainerInterface
- Psr\Link\EvolvableLinkInterface
- Psr\Link\LinkInterface
- Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException
- Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface
- Symfony\Component\Form\Extension\Core\Type\FormType
- Symfony\Component\Form\FormBuilderInterface
- Symfony\Component\Form\FormFactoryInterface
- Symfony\Component\Form\FormInterface
- Symfony\Component\HttpFoundation\BinaryFileResponse
- Symfony\Component\HttpFoundation\Exception\SessionNotFoundException
- Symfony\Component\HttpFoundation\JsonResponse
- Symfony\Component\HttpFoundation\RedirectResponse
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\RequestStack
- Symfony\Component\HttpFoundation\Response
- Symfony\Component\HttpFoundation\ResponseHeaderBag
- Symfony\Component\HttpFoundation\Session\FlashBagAwareSessionInterface
- Symfony\Component\HttpFoundation\StreamedResponse
- Symfony\Component\HttpKernel\Exception\NotFoundHttpException
- Symfony\Component\HttpKernel\HttpKernelInterface
- Symfony\Component\Routing\Generator\UrlGeneratorInterface
- Symfony\Component\Routing\RouterInterface
- Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface
- Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface
- Symfony\Component\Security\Core\Exception\AccessDeniedException
- Symfony\Component\Security\Core\User\UserInterface
- Symfony\Component\Security\Csrf\CsrfToken
- Symfony\Component\Security\Csrf\CsrfTokenManagerInterface
- Symfony\Component\Serializer\SerializerInterface
- Symfony\Component\WebLink\EventListener\AddLinkHeaderListener
- Symfony\Component\WebLink\GenericLinkProvider
- Symfony\Component\WebLink\HttpHeaderSerializer
- Symfony\Contracts\Service\Attribute\Required
- Symfony\Contracts\Service\ServiceSubscriberInterface
- Twig\Environment
interfaces:
- ServiceSubscriberInterface
