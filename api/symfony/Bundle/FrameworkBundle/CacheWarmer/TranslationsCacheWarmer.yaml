name: TranslationsCacheWarmer
class_comment: '# * Generates the catalogues for translations.

  # *

  # * @author Xavier Leune <xavier.leune@gmail.com>

  # *

  # * @final since Symfony 7.1'
dependencies:
- name: ContainerInterface
  type: class
  source: Psr\Container\ContainerInterface
- name: CacheWarmerInterface
  type: class
  source: Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface
- name: WarmableInterface
  type: class
  source: Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface
- name: ServiceSubscriberInterface
  type: class
  source: Symfony\Contracts\Service\ServiceSubscriberInterface
- name: TranslatorInterface
  type: class
  source: Symfony\Contracts\Translation\TranslatorInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: container
  comment: "# * Generates the catalogues for translations.\n# *\n# * @author Xavier\
    \ Leune <xavier.leune@gmail.com>\n# *\n# * @final since Symfony 7.1\n# */\n# class\
    \ TranslationsCacheWarmer implements CacheWarmerInterface, ServiceSubscriberInterface\n\
    # {\n# private TranslatorInterface $translator;\n# \n# /**\n# * As this cache\
    \ warmer is optional, dependencies should be lazy-loaded, that's why a container\
    \ should be injected."
- name: warmUp
  visibility: public
  parameters:
  - name: cacheDir
  - name: buildDir
    default: 'null'
  comment: null
- name: isOptional
  visibility: public
  parameters: []
  comment: null
- name: getSubscribedServices
  visibility: public
  parameters: []
  comment: null
traits:
- Psr\Container\ContainerInterface
- Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface
- Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface
- Symfony\Contracts\Service\ServiceSubscriberInterface
- Symfony\Contracts\Translation\TranslatorInterface
interfaces:
- CacheWarmerInterface
