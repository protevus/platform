name: TemplateCacheWarmer
class_comment: '# * Generates the Twig cache for all templates.

  # *

  # * @author Fabien Potencier <fabien@symfony.com>

  # *

  # * @final since Symfony 7.1'
dependencies:
- name: ContainerInterface
  type: class
  source: Psr\Container\ContainerInterface
- name: CacheWarmerInterface
  type: class
  source: Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface
- name: ServiceSubscriberInterface
  type: class
  source: Symfony\Contracts\Service\ServiceSubscriberInterface
- name: Environment
  type: class
  source: Twig\Environment
- name: Error
  type: class
  source: Twig\Error\Error
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: container
  - name: iterator
  comment: "# * Generates the Twig cache for all templates.\n# *\n# * @author Fabien\
    \ Potencier <fabien@symfony.com>\n# *\n# * @final since Symfony 7.1\n# */\n# class\
    \ TemplateCacheWarmer implements CacheWarmerInterface, ServiceSubscriberInterface\n\
    # {\n# private Environment $twig;\n# \n# /**\n# * As this cache warmer is optional,\
    \ dependencies should be lazy-loaded, that's why a container should be injected."
- name: warmUp
  visibility: public
  parameters:
  - name: cacheDir
  - name: buildDir
    default: 'null'
  comment: null
- name: isOptional
  visibility: public
  parameters: []
  comment: null
- name: getSubscribedServices
  visibility: public
  parameters: []
  comment: null
traits:
- Psr\Container\ContainerInterface
- Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface
- Symfony\Contracts\Service\ServiceSubscriberInterface
- Twig\Environment
- Twig\Error\Error
interfaces:
- CacheWarmerInterface
