name: Inline
class_comment: '# * Inline implements a YAML parser/dumper for the YAML inline syntax.

  # *

  # * @author Fabien Potencier <fabien@symfony.com>

  # *

  # * @internal'
dependencies:
- name: DumpException
  type: class
  source: Symfony\Component\Yaml\Exception\DumpException
- name: ParseException
  type: class
  source: Symfony\Component\Yaml\Exception\ParseException
- name: TaggedValue
  type: class
  source: Symfony\Component\Yaml\Tag\TaggedValue
properties: []
methods:
- name: parse
  visibility: public
  parameters:
  - name: value
  - name: flags
    default: '0'
  - name: '&$references'
    default: '[]'
  comment: "# * Inline implements a YAML parser/dumper for the YAML inline syntax.\n\
    # *\n# * @author Fabien Potencier <fabien@symfony.com>\n# *\n# * @internal\n#\
    \ */\n# class Inline\n# {\n# public const REGEX_QUOTED_STRING = '(?:\"([^\"\\\\\
    \\\\]*+(?:\\\\\\\\.[^\"\\\\\\\\]*+)*+)\"|\\'([^\\']*+(?:\\'\\'[^\\']*+)*+)\\')';\n\
    # \n# public static int $parsedLineNumber = -1;\n# public static ?string $parsedFilename\
    \ = null;\n# \n# private static bool $exceptionOnInvalidType = false;\n# private\
    \ static bool $objectSupport = false;\n# private static bool $objectForMap = false;\n\
    # private static bool $constantSupport = false;\n# \n# public static function\
    \ initialize(int $flags, ?int $parsedLineNumber = null, ?string $parsedFilename\
    \ = null): void\n# {\n# self::$exceptionOnInvalidType = (bool) (Yaml::PARSE_EXCEPTION_ON_INVALID_TYPE\
    \ & $flags);\n# self::$objectSupport = (bool) (Yaml::PARSE_OBJECT & $flags);\n\
    # self::$objectForMap = (bool) (Yaml::PARSE_OBJECT_FOR_MAP & $flags);\n# self::$constantSupport\
    \ = (bool) (Yaml::PARSE_CONSTANT & $flags);\n# self::$parsedFilename = $parsedFilename;\n\
    # \n# if (null !== $parsedLineNumber) {\n# self::$parsedLineNumber = $parsedLineNumber;\n\
    # }\n# }\n# \n# /**\n# * Converts a YAML string to a PHP value.\n# *\n# * @param\
    \ int   $flags      A bit field of Yaml::PARSE_* constants to customize the YAML\
    \ parser behavior\n# * @param array $references Mapping of variable names to values\n\
    # *\n# * @throws ParseException"
- name: dump
  visibility: public
  parameters:
  - name: value
  - name: flags
    default: '0'
  comment: '# * Dumps a given PHP variable to a YAML string.

    # *

    # * @param mixed $value The PHP variable to convert

    # * @param int   $flags A bit field of Yaml::DUMP_* constants to customize the
    dumped YAML string

    # *

    # * @throws DumpException When trying to dump PHP resource'
- name: isHash
  visibility: public
  parameters:
  - name: value
  comment: '# * Check if given array is hash or just normal indexed array.'
- name: dumpArray
  visibility: private
  parameters:
  - name: value
  - name: flags
  comment: '# * Dumps a PHP array to a YAML string.

    # *

    # * @param array $value The PHP array to dump

    # * @param int   $flags A bit field of Yaml::DUMP_* constants to customize the
    dumped YAML string'
- name: dumpHashArray
  visibility: private
  parameters:
  - name: value
  - name: flags
  comment: '# * Dumps hash array to a YAML string.

    # *

    # * @param array|\ArrayObject|\stdClass $value The hash array to dump

    # * @param int                          $flags A bit field of Yaml::DUMP_* constants
    to customize the dumped YAML string'
- name: dumpNull
  visibility: private
  parameters:
  - name: flags
  comment: null
- name: parseScalar
  visibility: public
  parameters:
  - name: scalar
  - name: flags
    default: '0'
  - name: delimiters
    default: 'null'
  - name: '&$i'
    default: '0'
  - name: evaluate
    default: 'true'
  - name: '&$references'
    default: '[]'
  - name: '&$isQuoted'
    default: 'null'
  comment: '# * Parses a YAML scalar.

    # *

    # * @throws ParseException When malformed inline YAML string is parsed'
- name: parseQuotedScalar
  visibility: private
  parameters:
  - name: scalar
  - name: '&$i'
    default: '0'
  comment: '# * Parses a YAML quoted scalar.

    # *

    # * @throws ParseException When malformed inline YAML string is parsed'
- name: parseSequence
  visibility: private
  parameters:
  - name: sequence
  - name: flags
  - name: '&$i'
    default: '0'
  - name: '&$references'
    default: '[]'
  comment: '# * Parses a YAML sequence.

    # *

    # * @throws ParseException When malformed inline YAML string is parsed'
- name: parseMapping
  visibility: private
  parameters:
  - name: mapping
  - name: flags
  - name: '&$i'
    default: '0'
  - name: '&$references'
    default: '[]'
  comment: '# * Parses a YAML mapping.

    # *

    # * @throws ParseException When malformed inline YAML string is parsed'
- name: evaluateScalar
  visibility: private
  parameters:
  - name: scalar
  - name: flags
  - name: '&$references'
    default: '[]'
  - name: '&$isQuotedString'
    default: 'null'
  comment: '# * Evaluates scalars and replaces magic values.

    # *

    # * @throws ParseException when object parsing support was disabled and the parser
    detected a PHP object or when a reference could not be resolved'
- name: parseTag
  visibility: private
  parameters:
  - name: value
  - name: '&$i'
  - name: flags
  comment: null
- name: evaluateBinaryScalar
  visibility: public
  parameters:
  - name: scalar
  comment: null
- name: isBinaryString
  visibility: private
  parameters:
  - name: value
  comment: null
- name: getTimestampRegex
  visibility: private
  parameters: []
  comment: '# * Gets a regex that matches a YAML date.

    # *

    # * @see http://www.yaml.org/spec/1.2/spec.html#id2761573'
- name: getHexRegex
  visibility: private
  parameters: []
  comment: '# * Gets a regex that matches a YAML number in hexadecimal notation.'
traits:
- Symfony\Component\Yaml\Exception\DumpException
- Symfony\Component\Yaml\Exception\ParseException
- Symfony\Component\Yaml\Tag\TaggedValue
interfaces:
- a
