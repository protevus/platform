name: Dumper
class_comment: '# * Dumper dumps PHP variables to YAML strings.

  # *

  # * @author Fabien Potencier <fabien@symfony.com>

  # *

  # * @final'
dependencies:
- name: TaggedValue
  type: class
  source: Symfony\Component\Yaml\Tag\TaggedValue
properties: []
methods:
- name: dump
  visibility: public
  parameters:
  - name: input
  - name: inline
    default: '0'
  - name: indent
    default: '0'
  - name: flags
    default: '0'
  comment: "# * Dumper dumps PHP variables to YAML strings.\n# *\n# * @author Fabien\
    \ Potencier <fabien@symfony.com>\n# *\n# * @final\n# */\n# class Dumper\n# {\n\
    # /**\n# * The amount of spaces to use for indentation of nested nodes.\n# */\n\
    # private int $indentation;\n# \n# public function __construct(int $indentation\
    \ = 4)\n# {\n# if ($indentation < 1) {\n# throw new \\InvalidArgumentException('The\
    \ indentation must be greater than zero.');\n# }\n# \n# $this->indentation = $indentation;\n\
    # }\n# \n# /**\n# * Dumps a PHP value to YAML.\n# *\n# * @param mixed        \
    \             $input  The PHP value\n# * @param int                       $inline\
    \ The level where you switch to inline YAML\n# * @param int                  \
    \     $indent The level of indentation (used internally)\n# * @param int-mask-of<Yaml::DUMP_*>\
    \ $flags  A bit field of Yaml::DUMP_* constants to customize the dumped YAML string"
- name: dumpTaggedValue
  visibility: private
  parameters:
  - name: value
  - name: inline
  - name: indent
  - name: flags
  - name: prefix
  comment: null
- name: getBlockIndentationIndicator
  visibility: private
  parameters:
  - name: value
  comment: null
traits:
- Symfony\Component\Yaml\Tag\TaggedValue
interfaces: []
