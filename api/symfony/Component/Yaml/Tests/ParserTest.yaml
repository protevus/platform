name: ParserTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: ExpectUserDeprecationMessageTrait
  type: class
  source: Symfony\Bridge\PhpUnit\ExpectUserDeprecationMessageTrait
- name: ParseException
  type: class
  source: Symfony\Component\Yaml\Exception\ParseException
- name: Parser
  type: class
  source: Symfony\Component\Yaml\Parser
- name: TaggedValue
  type: class
  source: Symfony\Component\Yaml\Tag\TaggedValue
- name: Yaml
  type: class
  source: Symfony\Component\Yaml\Yaml
- name: ExpectUserDeprecationMessageTrait
  type: class
  source: ExpectUserDeprecationMessageTrait
properties:
- name: b
  visibility: public
  comment: null
methods:
- name: setUp
  visibility: protected
  parameters: []
  comment: null
- name: tearDown
  visibility: protected
  parameters: []
  comment: null
- name: testTopLevelNumber
  visibility: public
  parameters: []
  comment: null
- name: testTopLevelNull
  visibility: public
  parameters: []
  comment: null
- name: testTaggedValueTopLevelNumber
  visibility: public
  parameters: []
  comment: null
- name: testTaggedValueTopLevelNull
  visibility: public
  parameters: []
  comment: null
- name: testTaggedValueTopLevelString
  visibility: public
  parameters: []
  comment: null
- name: testTaggedValueTopLevelAssocInline
  visibility: public
  parameters: []
  comment: null
- name: testTaggedValueTopLevelAssoc
  visibility: public
  parameters: []
  comment: null
- name: testTaggedValueTopLevelList
  visibility: public
  parameters: []
  comment: null
- name: testTaggedTextAsListItem
  visibility: public
  parameters: []
  comment: null
- name: testSpecifications
  visibility: public
  parameters:
  - name: expected
  - name: yaml
  - name: comment
  comment: '# * @dataProvider getDataFormSpecifications'
- name: getDataFormSpecifications
  visibility: public
  parameters: []
  comment: null
- name: getNonStringMappingKeysData
  visibility: public
  parameters: []
  comment: null
- name: testTabsAsIndentationInYaml
  visibility: public
  parameters:
  - name: given
  - name: expectedMessage
  comment: '# * @dataProvider invalidIndentation'
- name: invalidIndentation
  visibility: public
  parameters: []
  comment: null
- name: testParserIsStateless
  visibility: public
  parameters: []
  comment: null
- name: testValidTokenSeparation
  visibility: public
  parameters:
  - name: given
  - name: expected
  comment: '# * @dataProvider validTokenSeparators'
- name: validTokenSeparators
  visibility: public
  parameters: []
  comment: null
- name: testEndOfTheDocumentMarker
  visibility: public
  parameters: []
  comment: null
- name: getBlockChompingTests
  visibility: public
  parameters: []
  comment: null
- name: testBlockChomping
  visibility: public
  parameters:
  - name: expected
  - name: yaml
  comment: '# * @dataProvider getBlockChompingTests'
- name: testBlockLiteralWithLeadingNewlines
  visibility: public
  parameters: []
  comment: '# * Regression test for issue #7989.

    # *

    # * @see https://github.com/symfony/symfony/issues/7989'
- name: testObjectSupportEnabled
  visibility: public
  parameters: []
  comment: null
- name: testObjectSupportDisabledButNoExceptions
  visibility: public
  parameters: []
  comment: null
- name: testObjectForMap
  visibility: public
  parameters:
  - name: yaml
  - name: expected
  comment: '# * @dataProvider getObjectForMapTests'
- name: getObjectForMapTests
  visibility: public
  parameters: []
  comment: null
- name: testObjectsSupportDisabledWithExceptions
  visibility: public
  parameters: []
  comment: null
- name: testMappingKeyInMultiLineStringThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testCanParseContentWithTrailingSpaces
  visibility: public
  parameters: []
  comment: null
- name: testNonUtf8Exception
  visibility: public
  parameters: []
  comment: '# * @requires extension iconv'
- name: testUnindentedCollectionException
  visibility: public
  parameters: []
  comment: null
- name: testShortcutKeyUnindentedCollectionException
  visibility: public
  parameters: []
  comment: null
- name: testMultipleDocumentsNotSupportedException
  visibility: public
  parameters: []
  comment: null
- name: testSequenceInAMapping
  visibility: public
  parameters: []
  comment: null
- name: testSequenceInMappingStartedBySingleDashLine
  visibility: public
  parameters: []
  comment: null
- name: testSequenceFollowedByCommentEmbeddedInMapping
  visibility: public
  parameters: []
  comment: null
- name: testNonStringFollowedByCommentEmbeddedInMapping
  visibility: public
  parameters: []
  comment: null
- name: getParseExceptionNotAffectedMultiLineStringLastResortParsing
  visibility: public
  parameters: []
  comment: null
- name: testParseExceptionNotAffectedByMultiLineStringLastResortParsing
  visibility: public
  parameters:
  - name: yaml
  comment: '# * @dataProvider getParseExceptionNotAffectedMultiLineStringLastResortParsing'
- name: testMultiLineStringLastResortParsing
  visibility: public
  parameters: []
  comment: null
- name: testMappingInASequence
  visibility: public
  parameters: []
  comment: null
- name: testScalarInSequence
  visibility: public
  parameters: []
  comment: null
- name: testMappingDuplicateKeyBlock
  visibility: public
  parameters: []
  comment: '# * > It is an error for two equal keys to appear in the same mapping
    node.

    # * > In such a case the YAML processor may continue, ignoring the second

    # * > "key: value" pair and issuing an appropriate warning. This strategy

    # * > preserves a consistent information model for one-pass and random access

    # * > applications.

    # *

    # * @see http://yaml.org/spec/1.2/spec.html#id2759572

    # * @see http://yaml.org/spec/1.1/#id932806'
- name: testMappingDuplicateKeyFlow
  visibility: public
  parameters: []
  comment: null
- name: testParseExceptionOnDuplicate
  visibility: public
  parameters:
  - name: input
  - name: duplicateKey
  - name: lineNumber
  comment: '# * @dataProvider getParseExceptionOnDuplicateData'
- name: getParseExceptionOnDuplicateData
  visibility: public
  parameters: []
  comment: null
- name: testNullAsDuplicatedData
  visibility: public
  parameters: []
  comment: '# * @group legacy'
- name: testEmptyValue
  visibility: public
  parameters: []
  comment: null
- name: testCommentAtTheRootIndent
  visibility: public
  parameters: []
  comment: null
- name: testStringBlockWithComments
  visibility: public
  parameters: []
  comment: null
- name: testFoldedStringBlockWithComments
  visibility: public
  parameters: []
  comment: null
- name: testNestedFoldedStringBlockWithComments
  visibility: public
  parameters: []
  comment: null
- name: testReferenceResolvingInInlineStrings
  visibility: public
  parameters: []
  comment: null
- name: testYamlDirective
  visibility: public
  parameters: []
  comment: null
- name: testFloatKeys
  visibility: public
  parameters: []
  comment: null
- name: testBooleanKeys
  visibility: public
  parameters: []
  comment: null
- name: testExplicitStringCasting
  visibility: public
  parameters: []
  comment: null
- name: testColonInMappingValueException
  visibility: public
  parameters: []
  comment: null
- name: testColonInMappingValueExceptionNotTriggeredByColonInComment
  visibility: public
  parameters: []
  comment: null
- name: testCommentLikeStringsAreNotStrippedInBlockScalars
  visibility: public
  parameters:
  - name: yaml
  - name: expectedParserResult
  comment: '# * @dataProvider getCommentLikeStringInScalarBlockData'
- name: getCommentLikeStringInScalarBlockData
  visibility: public
  parameters: []
  comment: null
- name: testBlankLinesAreParsedAsNewLinesInFoldedBlocks
  visibility: public
  parameters: []
  comment: null
- name: testAdditionallyIndentedLinesAreParsedAsNewLinesInFoldedBlocks
  visibility: public
  parameters: []
  comment: null
- name: testParseBinaryData
  visibility: public
  parameters:
  - name: data
  comment: '# * @dataProvider getBinaryData'
- name: getBinaryData
  visibility: public
  parameters: []
  comment: null
- name: testParseInvalidBinaryData
  visibility: public
  parameters:
  - name: data
  - name: expectedMessage
  comment: '# * @dataProvider getInvalidBinaryData'
- name: getInvalidBinaryData
  visibility: public
  parameters: []
  comment: null
- name: testParseDateWithSubseconds
  visibility: public
  parameters: []
  comment: null
- name: testParseDateAsMappingValue
  visibility: public
  parameters: []
  comment: null
- name: testParserThrowsExceptionWithCorrectLineNumber
  visibility: public
  parameters:
  - name: lineNumber
  - name: yaml
  comment: '# * @dataProvider parserThrowsExceptionWithCorrectLineNumberProvider'
- name: parserThrowsExceptionWithCorrectLineNumberProvider
  visibility: public
  parameters: []
  comment: null
- name: testParseMultiLineQuotedString
  visibility: public
  parameters: []
  comment: null
- name: testMultiLineQuotedStringWithTrailingBackslash
  visibility: public
  parameters: []
  comment: null
- name: testCommentCharactersInMultiLineQuotedStrings
  visibility: public
  parameters: []
  comment: null
- name: testBlankLinesInQuotedMultiLineString
  visibility: public
  parameters: []
  comment: null
- name: testEscapedQuoteInQuotedMultiLineString
  visibility: public
  parameters: []
  comment: null
- name: testBackslashInQuotedMultiLineString
  visibility: public
  parameters: []
  comment: null
- name: testParseMultiLineUnquotedString
  visibility: public
  parameters: []
  comment: null
- name: testParseQuotedStringContainingEscapedQuotationCharacters
  visibility: public
  parameters:
  - name: yaml
  - name: expected
  comment: '# * @dataProvider escapedQuotationCharactersInQuotedStrings'
- name: escapedQuotationCharactersInQuotedStrings
  visibility: public
  parameters: []
  comment: null
- name: testBackslashInSingleQuotedString
  visibility: public
  parameters: []
  comment: null
- name: testParseMultiLineString
  visibility: public
  parameters: []
  comment: null
- name: testParseMultiLineMappingValue
  visibility: public
  parameters:
  - name: yaml
  - name: expected
  - name: parseError
  comment: '# * @dataProvider multiLineDataProvider'
- name: multiLineDataProvider
  visibility: public
  parameters: []
  comment: null
- name: testInlineNotationSpanningMultipleLines
  visibility: public
  parameters:
  - name: expected
  - name: yaml
  comment: '# * @dataProvider inlineNotationSpanningMultipleLinesProvider'
- name: inlineNotationSpanningMultipleLinesProvider
  visibility: public
  parameters: []
  comment: null
- name: testRootLevelInlineMappingFollowedByMoreContentIsInvalid
  visibility: public
  parameters: []
  comment: null
- name: testTaggedInlineMapping
  visibility: public
  parameters: []
  comment: null
- name: testInvalidInlineSequenceContainingStringWithEscapedQuotationCharacter
  visibility: public
  parameters: []
  comment: null
- name: testCustomTagSupport
  visibility: public
  parameters:
  - name: expected
  - name: yaml
  comment: '# * @dataProvider taggedValuesProvider'
- name: taggedValuesProvider
  visibility: public
  parameters: []
  comment: null
- name: testNonSpecificTagSupport
  visibility: public
  parameters: []
  comment: null
- name: testCustomTagsDisabled
  visibility: public
  parameters: []
  comment: null
- name: testUnsupportedTagWithScalar
  visibility: public
  parameters: []
  comment: null
- name: testUnsupportedBuiltInTagWithScalar
  visibility: public
  parameters: []
  comment: null
- name: testExceptionWhenUsingUnsupportedBuiltInTags
  visibility: public
  parameters: []
  comment: null
- name: testComplexMappingThrowsParseException
  visibility: public
  parameters: []
  comment: null
- name: testComplexMappingNestedInMappingThrowsParseException
  visibility: public
  parameters: []
  comment: null
- name: testComplexMappingNestedInSequenceThrowsParseException
  visibility: public
  parameters: []
  comment: null
- name: testParsingIniThrowsException
  visibility: public
  parameters: []
  comment: null
- name: loadTestsFromFixtureFiles
  visibility: private
  parameters:
  - name: testsFile
  comment: null
- name: testCanParseVeryLongValue
  visibility: public
  parameters: []
  comment: null
- name: testParserCleansUpReferencesBetweenRuns
  visibility: public
  parameters: []
  comment: null
- name: testPhpConstantTagMappingKey
  visibility: public
  parameters: []
  comment: null
- name: testWrongPhpConstantSyntax
  visibility: public
  parameters: []
  comment: null
- name: testPhpConstantTagMappingAsScalarKey
  visibility: public
  parameters: []
  comment: null
- name: testTagMappingAsScalarKey
  visibility: public
  parameters: []
  comment: null
- name: testMergeKeysWhenMappingsAreParsedAsObjects
  visibility: public
  parameters: []
  comment: null
- name: testFilenamesAreParsedAsStringsWithoutFlag
  visibility: public
  parameters: []
  comment: null
- name: testParseFile
  visibility: public
  parameters: []
  comment: null
- name: testParsingNonExistentFilesThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testParsingNotReadableFilesThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testParseReferencesOnMergeKeys
  visibility: public
  parameters: []
  comment: null
- name: testParseReferencesOnMergeKeysWithMappingsParsedAsObjects
  visibility: public
  parameters: []
  comment: null
- name: testEvalRefException
  visibility: public
  parameters: []
  comment: null
- name: testDetectCircularReferences
  visibility: public
  parameters:
  - name: yaml
  comment: '# * @dataProvider circularReferenceProvider'
- name: circularReferenceProvider
  visibility: public
  parameters: []
  comment: null
- name: testBlockScalarArray
  visibility: public
  parameters: []
  comment: null
- name: testParseIndentedMappings
  visibility: public
  parameters:
  - name: yaml
  - name: expected
  comment: '# * @dataProvider indentedMappingData'
- name: indentedMappingData
  visibility: public
  parameters: []
  comment: null
- name: testMultiLineComment
  visibility: public
  parameters: []
  comment: null
- name: testParseValueWithModifiers
  visibility: public
  parameters: []
  comment: null
- name: testParseValueWithNegativeModifiers
  visibility: public
  parameters: []
  comment: null
- name: testThrowExceptionIfInvalidAdditionalClosingTagOccurs
  visibility: public
  parameters: []
  comment: null
- name: testWhitespaceAtEndOfLine
  visibility: public
  parameters: []
  comment: null
- name: testParsingMultipleDocuments
  visibility: public
  parameters: []
  comment: '# * This is a regression test for a bug where a YAML block with a nested
    multiline string using | was parsed without

    # * a trailing \n when a shorter YAML document was parsed before.

    # *

    # * When a shorter document was parsed before, the nested string did not have
    a \n at the end of the string, because

    # * the Parser thought it was the end of the file, even though it is not.'
- name: testParseIdeographicSpaces
  visibility: public
  parameters: []
  comment: null
- name: testSkipBlankLines
  visibility: public
  parameters: []
  comment: null
- name: assertSameData
  visibility: private
  parameters:
  - name: expected
  - name: actual
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Bridge\PhpUnit\ExpectUserDeprecationMessageTrait
- Symfony\Component\Yaml\Exception\ParseException
- Symfony\Component\Yaml\Parser
- Symfony\Component\Yaml\Tag\TaggedValue
- Symfony\Component\Yaml\Yaml
- ExpectUserDeprecationMessageTrait
interfaces: []
