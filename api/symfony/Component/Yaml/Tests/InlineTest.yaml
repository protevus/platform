name: InlineTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: ParseException
  type: class
  source: Symfony\Component\Yaml\Exception\ParseException
- name: Inline
  type: class
  source: Symfony\Component\Yaml\Inline
- name: TaggedValue
  type: class
  source: Symfony\Component\Yaml\Tag\TaggedValue
- name: FooBackedEnum
  type: class
  source: Symfony\Component\Yaml\Tests\Fixtures\FooBackedEnum
- name: FooUnitEnum
  type: class
  source: Symfony\Component\Yaml\Tests\Fixtures\FooUnitEnum
- name: Yaml
  type: class
  source: Symfony\Component\Yaml\Yaml
properties: []
methods:
- name: setUp
  visibility: protected
  parameters: []
  comment: null
- name: testParse
  visibility: public
  parameters:
  - name: yaml
  - name: value
  - name: flags
    default: '0'
  comment: '# * @dataProvider getTestsForParse'
- name: testParseWithMapObjects
  visibility: public
  parameters:
  - name: yaml
  - name: value
  - name: flags
    default: Yaml::PARSE_OBJECT_FOR_MAP
  comment: '# * @dataProvider getTestsForParseWithMapObjects'
- name: testParsePhpConstants
  visibility: public
  parameters:
  - name: yaml
  - name: value
  comment: '# * @dataProvider getTestsForParsePhpConstants'
- name: getTestsForParsePhpConstants
  visibility: public
  parameters: []
  comment: null
- name: testParsePhpConstantThrowsExceptionWhenUndefined
  visibility: public
  parameters: []
  comment: null
- name: testParsePhpEnumThrowsExceptionWhenUndefined
  visibility: public
  parameters: []
  comment: null
- name: testParsePhpEnumThrowsExceptionWhenNameUndefined
  visibility: public
  parameters: []
  comment: null
- name: testParsePhpEnumThrowsExceptionWhenNotAnEnum
  visibility: public
  parameters: []
  comment: null
- name: testParsePhpEnumThrowsExceptionWhenNotBacked
  visibility: public
  parameters: []
  comment: null
- name: testParsePhpConstantThrowsExceptionOnInvalidType
  visibility: public
  parameters: []
  comment: null
- name: testParsePhpEnumThrowsExceptionOnInvalidType
  visibility: public
  parameters: []
  comment: null
- name: testDump
  visibility: public
  parameters:
  - name: yaml
  - name: value
  - name: parseFlags
    default: '0'
  comment: '# * @dataProvider getTestsForDump'
- name: testDumpNumericValueWithLocale
  visibility: public
  parameters: []
  comment: null
- name: testHashStringsResemblingExponentialNumericsShouldNotBeChangedToINF
  visibility: public
  parameters: []
  comment: null
- name: testParseScalarWithNonEscapedBlackslashShouldThrowException
  visibility: public
  parameters: []
  comment: null
- name: testParseScalarWithNonEscapedBlackslashAtTheEndShouldThrowException
  visibility: public
  parameters: []
  comment: null
- name: testParseScalarWithIncorrectlyQuotedStringShouldThrowException
  visibility: public
  parameters: []
  comment: null
- name: testParseScalarWithIncorrectlyDoubleQuotedStringShouldThrowException
  visibility: public
  parameters: []
  comment: null
- name: testParseInvalidMappingKeyShouldThrowException
  visibility: public
  parameters: []
  comment: null
- name: testParseMappingKeyWithColonNotFollowedBySpace
  visibility: public
  parameters: []
  comment: null
- name: testParseInvalidMappingShouldThrowException
  visibility: public
  parameters: []
  comment: null
- name: testParseInvalidSequenceShouldThrowException
  visibility: public
  parameters: []
  comment: null
- name: testParseInvalidTaggedSequenceShouldThrowException
  visibility: public
  parameters: []
  comment: null
- name: testParseScalarWithCorrectlyQuotedStringShouldReturnString
  visibility: public
  parameters: []
  comment: null
- name: testParseReferences
  visibility: public
  parameters:
  - name: yaml
  - name: expected
  comment: '# * @dataProvider getDataForParseReferences'
- name: getDataForParseReferences
  visibility: public
  parameters: []
  comment: null
- name: testParseMapReferenceInSequence
  visibility: public
  parameters: []
  comment: null
- name: testParseUnquotedAsterisk
  visibility: public
  parameters: []
  comment: null
- name: testParseUnquotedAsteriskFollowedByAComment
  visibility: public
  parameters: []
  comment: null
- name: testParseUnquotedScalarStartingWithReservedIndicator
  visibility: public
  parameters:
  - name: indicator
  comment: '# * @dataProvider getReservedIndicators'
- name: getReservedIndicators
  visibility: public
  parameters: []
  comment: null
- name: testParseUnquotedScalarStartingWithScalarIndicator
  visibility: public
  parameters:
  - name: indicator
  comment: '# * @dataProvider getScalarIndicators'
- name: getScalarIndicators
  visibility: public
  parameters: []
  comment: null
- name: testIsHash
  visibility: public
  parameters:
  - name: array
  - name: expected
  comment: '# * @dataProvider getDataForIsHash'
- name: getDataForIsHash
  visibility: public
  parameters: []
  comment: null
- name: getTestsForParse
  visibility: public
  parameters: []
  comment: null
- name: getTestsForParseWithMapObjects
  visibility: public
  parameters: []
  comment: null
- name: getTestsForDump
  visibility: public
  parameters: []
  comment: null
- name: testParseTimestampAsUnixTimestampByDefault
  visibility: public
  parameters:
  - name: yaml
  - name: year
  - name: month
  - name: day
  - name: hour
  - name: minute
  - name: second
  - name: microsecond
  comment: '# * @dataProvider getTimestampTests'
- name: testParseTimestampAsDateTimeObject
  visibility: public
  parameters:
  - name: yaml
  - name: year
  - name: month
  - name: day
  - name: hour
  - name: minute
  - name: second
  - name: microsecond
  - name: timezone
  comment: '# * @dataProvider getTimestampTests'
- name: getTimestampTests
  visibility: public
  parameters: []
  comment: null
- name: testParseNestedTimestampListAsDateTimeObject
  visibility: public
  parameters:
  - name: yaml
  - name: year
  - name: month
  - name: day
  - name: hour
  - name: minute
  - name: second
  - name: microsecond
  comment: '# * @dataProvider getTimestampTests'
- name: testDumpDateTime
  visibility: public
  parameters:
  - name: dateTime
  - name: expected
  comment: '# * @dataProvider getDateTimeDumpTests'
- name: testDumpNumericKeyAsString
  visibility: public
  parameters:
  - name: input
  - name: flags
  - name: expected
  comment: '# * @dataProvider getNumericKeyData'
- name: getNumericKeyData
  visibility: public
  parameters: []
  comment: null
- name: testDumpUnitEnum
  visibility: public
  parameters: []
  comment: null
- name: testParseUnitEnumCases
  visibility: public
  parameters: []
  comment: null
- name: testParseUnitEnum
  visibility: public
  parameters: []
  comment: null
- name: testParseBackedEnumValue
  visibility: public
  parameters: []
  comment: null
- name: getDateTimeDumpTests
  visibility: public
  parameters: []
  comment: null
- name: testParseBinaryData
  visibility: public
  parameters:
  - name: data
  comment: '# * @dataProvider getBinaryData'
- name: getBinaryData
  visibility: public
  parameters: []
  comment: null
- name: testParseInvalidBinaryData
  visibility: public
  parameters:
  - name: data
  - name: expectedMessage
  comment: '# * @dataProvider getInvalidBinaryData'
- name: getInvalidBinaryData
  visibility: public
  parameters: []
  comment: null
- name: testNotSupportedMissingValue
  visibility: public
  parameters: []
  comment: null
- name: testVeryLongQuotedStrings
  visibility: public
  parameters: []
  comment: null
- name: testMappingKeysCannotBeOmitted
  visibility: public
  parameters: []
  comment: null
- name: testParseMissingMappingValueAsNull
  visibility: public
  parameters:
  - name: yaml
  - name: expected
  comment: '# * @dataProvider getTestsForNullValues'
- name: getTestsForNullValues
  visibility: public
  parameters: []
  comment: null
- name: testTheEmptyStringIsAValidMappingKey
  visibility: public
  parameters: []
  comment: null
- name: testImplicitStringCastingOfMappingKeysThrowsException
  visibility: public
  parameters:
  - name: yaml
  comment: '# * @dataProvider getNotPhpCompatibleMappingKeyData'
- name: getNotPhpCompatibleMappingKeyData
  visibility: public
  parameters: []
  comment: null
- name: testTagWithoutValueInSequence
  visibility: public
  parameters: []
  comment: null
- name: testTagWithEmptyValueInSequence
  visibility: public
  parameters: []
  comment: null
- name: testTagWithoutValueInMapping
  visibility: public
  parameters: []
  comment: null
- name: testTagWithEmptyValueInMapping
  visibility: public
  parameters: []
  comment: null
- name: testTagWithQuotedInteger
  visibility: public
  parameters: []
  comment: null
- name: testTagWithUnquotedInteger
  visibility: public
  parameters: []
  comment: null
- name: testUnfinishedInlineMap
  visibility: public
  parameters: []
  comment: null
- name: testParseOctalNumbers
  visibility: public
  parameters:
  - name: expected
  - name: yaml
  comment: '# * @dataProvider getTestsForOctalNumbers'
- name: getTestsForOctalNumbers
  visibility: public
  parameters: []
  comment: null
- name: testParseOctalNumbersYaml11Notation
  visibility: public
  parameters:
  - name: expected
  - name: yaml
  comment: '# * @dataProvider getTestsForOctalNumbersYaml11Notation'
- name: getTestsForOctalNumbersYaml11Notation
  visibility: public
  parameters: []
  comment: null
- name: testPhpObjectWithEmptyValue
  visibility: public
  parameters:
  - name: value
  comment: '# * @dataProvider phpObjectTagWithEmptyValueProvider'
- name: phpObjectTagWithEmptyValueProvider
  visibility: public
  parameters: []
  comment: null
- name: testPhpConstTagWithEmptyValue
  visibility: public
  parameters:
  - name: value
  comment: '# * @dataProvider phpConstTagWithEmptyValueProvider'
- name: testPhpEnumTagWithEmptyValue
  visibility: public
  parameters:
  - name: value
  comment: '# * @dataProvider phpConstTagWithEmptyValueProvider'
- name: phpConstTagWithEmptyValueProvider
  visibility: public
  parameters: []
  comment: null
- name: testParseCommentNotPrefixedBySpaces
  visibility: public
  parameters: []
  comment: null
- name: testParseUnquotedStringContainingHashTagNotPrefixedBySpace
  visibility: public
  parameters: []
  comment: null
- name: testUnquotedExclamationMarkThrows
  visibility: public
  parameters:
  - name: value
  comment: '# * @dataProvider unquotedExclamationMarkThrowsProvider'
- name: unquotedExclamationMarkThrowsProvider
  visibility: public
  parameters: []
  comment: null
- name: testQuotedExclamationMark
  visibility: public
  parameters:
  - name: expected
  - name: value
  comment: '# * @dataProvider quotedExclamationMarkProvider'
- name: quotedExclamationMarkProvider
  visibility: public
  parameters: []
  comment: null
- name: testParseIdeographicSpace
  visibility: public
  parameters:
  - name: yaml
  - name: expected
  comment: '# * @dataProvider ideographicSpaceProvider'
- name: ideographicSpaceProvider
  visibility: public
  parameters: []
  comment: null
- name: testParseSingleQuotedTaggedString
  visibility: public
  parameters: []
  comment: null
- name: testParseDoubleQuotedTaggedString
  visibility: public
  parameters: []
  comment: null
- name: testParseQuotedReferenceLikeStringsInMapping
  visibility: public
  parameters: []
  comment: null
- name: testParseQuotedReferenceLikeStringsInSequence
  visibility: public
  parameters: []
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Component\Yaml\Exception\ParseException
- Symfony\Component\Yaml\Inline
- Symfony\Component\Yaml\Tag\TaggedValue
- Symfony\Component\Yaml\Tests\Fixtures\FooBackedEnum
- Symfony\Component\Yaml\Tests\Fixtures\FooUnitEnum
- Symfony\Component\Yaml\Yaml
interfaces: []
