name: Yaml
class_comment: '# * Yaml offers convenience methods to load and dump YAML.

  # *

  # * @author Fabien Potencier <fabien@symfony.com>

  # *

  # * @final'
dependencies:
- name: ParseException
  type: class
  source: Symfony\Component\Yaml\Exception\ParseException
properties: []
methods:
- name: parseFile
  visibility: public
  parameters:
  - name: filename
  - name: flags
    default: '0'
  comment: "# * Yaml offers convenience methods to load and dump YAML.\n# *\n# * @author\
    \ Fabien Potencier <fabien@symfony.com>\n# *\n# * @final\n# */\n# class Yaml\n\
    # {\n# public const DUMP_OBJECT = 1;\n# public const PARSE_EXCEPTION_ON_INVALID_TYPE\
    \ = 2;\n# public const PARSE_OBJECT = 4;\n# public const PARSE_OBJECT_FOR_MAP\
    \ = 8;\n# public const DUMP_EXCEPTION_ON_INVALID_TYPE = 16;\n# public const PARSE_DATETIME\
    \ = 32;\n# public const DUMP_OBJECT_AS_MAP = 64;\n# public const DUMP_MULTI_LINE_LITERAL_BLOCK\
    \ = 128;\n# public const PARSE_CONSTANT = 256;\n# public const PARSE_CUSTOM_TAGS\
    \ = 512;\n# public const DUMP_EMPTY_ARRAY_AS_SEQUENCE = 1024;\n# public const\
    \ DUMP_NULL_AS_TILDE = 2048;\n# public const DUMP_NUMERIC_KEY_AS_STRING = 4096;\n\
    # \n# /**\n# * Parses a YAML file into a PHP value.\n# *\n# * Usage:\n# *\n# *\
    \     $array = Yaml::parseFile('config.yml');\n# *     print_r($array);\n# *\n\
    # * @param string                     $filename The path to the YAML file to be\
    \ parsed\n# * @param int-mask-of<self::PARSE_*> $flags    A bit field of PARSE_*\
    \ constants to customize the YAML parser behavior\n# *\n# * @throws ParseException\
    \ If the file could not be read or the YAML is not valid"
- name: parse
  visibility: public
  parameters:
  - name: input
  - name: flags
    default: '0'
  comment: '# * Parses YAML into a PHP value.

    # *

    # *  Usage:

    # *  <code>

    # *   $array = Yaml::parse(file_get_contents(''config.yml''));

    # *   print_r($array);

    # *  </code>

    # *

    # * @param string                     $input A string containing YAML

    # * @param int-mask-of<self::PARSE_*> $flags A bit field of PARSE_* constants
    to customize the YAML parser behavior

    # *

    # * @throws ParseException If the YAML is not valid'
- name: dump
  visibility: public
  parameters:
  - name: input
  - name: inline
    default: '2'
  - name: indent
    default: '4'
  - name: flags
    default: '0'
  comment: '# * Dumps a PHP value to a YAML string.

    # *

    # * The dump method, when supplied with an array, will do its best

    # * to convert the array into friendly YAML.

    # *

    # * @param mixed                     $input  The PHP value

    # * @param int                       $inline The level where you switch to inline
    YAML

    # * @param int                       $indent The amount of spaces to use for indentation
    of nested nodes

    # * @param int-mask-of<self::DUMP_*> $flags  A bit field of DUMP_* constants to
    customize the dumped YAML string'
traits:
- Symfony\Component\Yaml\Exception\ParseException
interfaces: []
