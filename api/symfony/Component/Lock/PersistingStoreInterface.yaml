name: PersistingStoreInterface
class_comment: null
dependencies:
- name: LockAcquiringException
  type: class
  source: Symfony\Component\Lock\Exception\LockAcquiringException
- name: LockConflictedException
  type: class
  source: Symfony\Component\Lock\Exception\LockConflictedException
- name: LockReleasingException
  type: class
  source: Symfony\Component\Lock\Exception\LockReleasingException
properties: []
methods:
- name: save
  visibility: public
  parameters:
  - name: key
  comment: "# * @author J\xE9r\xE9my Deruss\xE9 <jeremy@derusse.com>\n# */\n# interface\
    \ PersistingStoreInterface\n# {\n# /**\n# * Stores the resource if it's not locked\
    \ by someone else.\n# *\n# * @throws LockAcquiringException\n# * @throws LockConflictedException"
- name: delete
  visibility: public
  parameters:
  - name: key
  comment: '# * Removes a resource from the storage.

    # *

    # * @throws LockReleasingException'
- name: exists
  visibility: public
  parameters:
  - name: key
  comment: '# * Returns whether or not the resource exists in the storage.'
- name: putOffExpiration
  visibility: public
  parameters:
  - name: key
  - name: ttl
  comment: '# * Extends the TTL of a resource.

    # *

    # * @param float $ttl amount of seconds to keep the lock in the store

    # *

    # * @throws LockConflictedException'
traits:
- Symfony\Component\Lock\Exception\LockAcquiringException
- Symfony\Component\Lock\Exception\LockConflictedException
- Symfony\Component\Lock\Exception\LockReleasingException
interfaces: []
