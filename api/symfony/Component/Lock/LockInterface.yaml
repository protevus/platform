name: LockInterface
class_comment: null
dependencies:
- name: LockAcquiringException
  type: class
  source: Symfony\Component\Lock\Exception\LockAcquiringException
- name: LockConflictedException
  type: class
  source: Symfony\Component\Lock\Exception\LockConflictedException
- name: LockReleasingException
  type: class
  source: Symfony\Component\Lock\Exception\LockReleasingException
properties: []
methods:
- name: acquire
  visibility: public
  parameters:
  - name: blocking
    default: 'false'
  comment: "# * LockInterface defines an interface to manipulate the status of a lock.\n\
    # *\n# * @author J\xE9r\xE9my Deruss\xE9 <jeremy@derusse.com>\n# */\n# interface\
    \ LockInterface\n# {\n# /**\n# * Acquires the lock. If the lock is acquired by\
    \ someone else, the parameter `blocking` determines whether or not\n# * the call\
    \ should block until the release of the lock.\n# *\n# * @throws LockConflictedException\
    \ If the lock is acquired by someone else in blocking mode\n# * @throws LockAcquiringException\
    \  If the lock cannot be acquired"
- name: refresh
  visibility: public
  parameters:
  - name: ttl
    default: 'null'
  comment: '# * Increase the duration of an acquired lock.

    # *

    # * @param float|null $ttl Maximum expected lock duration in seconds

    # *

    # * @throws LockConflictedException If the lock is acquired by someone else

    # * @throws LockAcquiringException  If the lock cannot be refreshed'
- name: isAcquired
  visibility: public
  parameters: []
  comment: '# * Returns whether or not the lock is acquired.'
- name: release
  visibility: public
  parameters: []
  comment: '# * Release the lock.

    # *

    # * @throws LockReleasingException If the lock cannot be released'
- name: isExpired
  visibility: public
  parameters: []
  comment: null
- name: getRemainingLifetime
  visibility: public
  parameters: []
  comment: '# * Returns the remaining lifetime in seconds.'
traits:
- Symfony\Component\Lock\Exception\LockAcquiringException
- Symfony\Component\Lock\Exception\LockConflictedException
- Symfony\Component\Lock\Exception\LockReleasingException
interfaces: []
