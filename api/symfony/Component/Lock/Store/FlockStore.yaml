name: FlockStore
class_comment: "# * FlockStore is a PersistingStoreInterface implementation using\
  \ the FileSystem flock.\n# *\n# * Original implementation in \\Symfony\\Component\\\
  Filesystem\\LockHandler.\n# *\n# * @author J\xE9r\xE9my Deruss\xE9 <jeremy@derusse.com>\n\
  # * @author Gr\xE9goire Pineau <lyrixx@lyrixx.info>\n# * @author Romain Neutron\
  \ <imprec@gmail.com>\n# * @author Nicolas Grekas <p@tchwork.com>"
dependencies:
- name: BlockingStoreInterface
  type: class
  source: Symfony\Component\Lock\BlockingStoreInterface
- name: InvalidArgumentException
  type: class
  source: Symfony\Component\Lock\Exception\InvalidArgumentException
- name: LockConflictedException
  type: class
  source: Symfony\Component\Lock\Exception\LockConflictedException
- name: LockStorageException
  type: class
  source: Symfony\Component\Lock\Exception\LockStorageException
- name: Key
  type: class
  source: Symfony\Component\Lock\Key
- name: SharedLockStoreInterface
  type: class
  source: Symfony\Component\Lock\SharedLockStoreInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: lockPath
    default: 'null'
  comment: "# * FlockStore is a PersistingStoreInterface implementation using the\
    \ FileSystem flock.\n# *\n# * Original implementation in \\Symfony\\Component\\\
    Filesystem\\LockHandler.\n# *\n# * @author J\xE9r\xE9my Deruss\xE9 <jeremy@derusse.com>\n\
    # * @author Gr\xE9goire Pineau <lyrixx@lyrixx.info>\n# * @author Romain Neutron\
    \ <imprec@gmail.com>\n# * @author Nicolas Grekas <p@tchwork.com>\n# */\n# class\
    \ FlockStore implements BlockingStoreInterface, SharedLockStoreInterface\n# {\n\
    # private ?string $lockPath;\n# \n# /**\n# * @param string|null $lockPath the\
    \ directory to store the lock, defaults to the system's temporary directory\n\
    # *\n# * @throws LockStorageException If the lock directory doesn\u2019t exist\
    \ or is not writable"
- name: save
  visibility: public
  parameters:
  - name: key
  comment: null
- name: saveRead
  visibility: public
  parameters:
  - name: key
  comment: null
- name: waitAndSave
  visibility: public
  parameters:
  - name: key
  comment: null
- name: waitAndSaveRead
  visibility: public
  parameters:
  - name: key
  comment: null
- name: lock
  visibility: private
  parameters:
  - name: key
  - name: read
  - name: blocking
  comment: null
- name: putOffExpiration
  visibility: public
  parameters:
  - name: key
  - name: ttl
  comment: null
- name: delete
  visibility: public
  parameters:
  - name: key
  comment: null
- name: exists
  visibility: public
  parameters:
  - name: key
  comment: null
traits:
- Symfony\Component\Lock\BlockingStoreInterface
- Symfony\Component\Lock\Exception\InvalidArgumentException
- Symfony\Component\Lock\Exception\LockConflictedException
- Symfony\Component\Lock\Exception\LockStorageException
- Symfony\Component\Lock\Key
- Symfony\Component\Lock\SharedLockStoreInterface
interfaces:
- BlockingStoreInterface
