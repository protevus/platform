name: PostgreSqlStoreTest
class_comment: "# * @author J\xE9r\xE9my Deruss\xE9 <jeremy@derusse.com>\n# *\n# *\
  \ @requires extension pdo_pgsql\n# *\n# * @group integration"
dependencies:
- name: InvalidArgumentException
  type: class
  source: Symfony\Component\Lock\Exception\InvalidArgumentException
- name: LockConflictedException
  type: class
  source: Symfony\Component\Lock\Exception\LockConflictedException
- name: Key
  type: class
  source: Symfony\Component\Lock\Key
- name: PersistingStoreInterface
  type: class
  source: Symfony\Component\Lock\PersistingStoreInterface
- name: PostgreSqlStore
  type: class
  source: Symfony\Component\Lock\Store\PostgreSqlStore
- name: BlockingStoreTestTrait
  type: class
  source: BlockingStoreTestTrait
- name: SharedLockStoreTestTrait
  type: class
  source: SharedLockStoreTestTrait
properties: []
methods:
- name: testInvalidDriver
  visibility: public
  parameters: []
  comment: "# * @author J\xE9r\xE9my Deruss\xE9 <jeremy@derusse.com>\n# *\n# * @requires\
    \ extension pdo_pgsql\n# *\n# * @group integration\n# */\n# class PostgreSqlStoreTest\
    \ extends AbstractStoreTestCase\n# {\n# use BlockingStoreTestTrait;\n# use SharedLockStoreTestTrait;\n\
    # \n# public function getPostgresHost(): string\n# {\n# if (!$host = getenv('POSTGRES_HOST'))\
    \ {\n# $this->markTestSkipped('Missing POSTGRES_HOST env variable');\n# }\n# \n\
    # return $host;\n# }\n# \n# public function getStore(): PersistingStoreInterface\n\
    # {\n# $host = $this->getPostgresHost();\n# \n# return new PostgreSqlStore('pgsql:host='.$host,\
    \ ['db_username' => 'postgres', 'db_password' => 'password']);\n# }\n# \n# /**\n\
    # * @requires extension pdo_sqlite"
- name: testSaveAfterConflict
  visibility: public
  parameters: []
  comment: null
- name: testWaitAndSaveAfterConflictReleasesLockFromInternalStore
  visibility: public
  parameters: []
  comment: null
- name: testWaitAndSaveReadAfterConflictReleasesLockFromInternalStore
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\Lock\Exception\InvalidArgumentException
- Symfony\Component\Lock\Exception\LockConflictedException
- Symfony\Component\Lock\Key
- Symfony\Component\Lock\PersistingStoreInterface
- Symfony\Component\Lock\Store\PostgreSqlStore
- BlockingStoreTestTrait
- SharedLockStoreTestTrait
interfaces: []
