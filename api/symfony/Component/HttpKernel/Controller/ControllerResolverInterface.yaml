name: ControllerResolverInterface
class_comment: null
dependencies:
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
properties: []
methods:
- name: getController
  visibility: public
  parameters:
  - name: request
  comment: '# * A ControllerResolverInterface implementation knows how to determine
    the

    # * controller to execute based on a Request object.

    # *

    # * A Controller can be any valid PHP callable.

    # *

    # * @author Fabien Potencier <fabien@symfony.com>

    # */

    # interface ControllerResolverInterface

    # {

    # /**

    # * Returns the Controller instance associated with a Request.

    # *

    # * As several resolvers can exist for a single application, a resolver must

    # * return false when it is not able to determine the controller.

    # *

    # * The resolver must only throw an exception when it should be able to load a

    # * controller but cannot because of some errors made by the developer.

    # *

    # * @return callable|false A PHP callable representing the Controller,

    # *                        or false if this resolver is not able to determine
    the controller

    # *

    # * @throws \LogicException If a controller was found based on the request but
    it is not callable'
traits:
- Symfony\Component\HttpFoundation\Request
interfaces: []
