name: ControllerReference
class_comment: '# * Acts as a marker and a data holder for a Controller.

  # *

  # * Some methods in Symfony accept both a URI (as a string) or a controller as

  # * an argument. In the latter case, instead of passing an array representing

  # * the controller, you can use an instance of this class.

  # *

  # * @author Fabien Potencier <fabien@symfony.com>

  # *

  # * @see FragmentRendererInterface'
dependencies:
- name: FragmentRendererInterface
  type: class
  source: Symfony\Component\HttpKernel\Fragment\FragmentRendererInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: controller
  - name: attributes
    default: '[]'
  - name: query
    default: '[]'
  comment: "# * Acts as a marker and a data holder for a Controller.\n# *\n# * Some\
    \ methods in Symfony accept both a URI (as a string) or a controller as\n# * an\
    \ argument. In the latter case, instead of passing an array representing\n# *\
    \ the controller, you can use an instance of this class.\n# *\n# * @author Fabien\
    \ Potencier <fabien@symfony.com>\n# *\n# * @see FragmentRendererInterface\n# */\n\
    # class ControllerReference\n# {\n# public array $attributes = [];\n# public array\
    \ $query = [];\n# \n# /**\n# * @param string $controller The controller name\n\
    # * @param array  $attributes An array of parameters to add to the Request attributes\n\
    # * @param array  $query      An array of parameters to add to the Request query\
    \ string"
traits:
- Symfony\Component\HttpKernel\Fragment\FragmentRendererInterface
interfaces: []
