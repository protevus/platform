name: InlineFragmentRenderer
class_comment: '# * Implements the inline rendering strategy where the Request is
  rendered by the current HTTP kernel.

  # *

  # * @author Fabien Potencier <fabien@symfony.com>'
dependencies:
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
- name: ControllerReference
  type: class
  source: Symfony\Component\HttpKernel\Controller\ControllerReference
- name: ExceptionEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\ExceptionEvent
- name: SubRequestHandler
  type: class
  source: Symfony\Component\HttpKernel\HttpCache\SubRequestHandler
- name: HttpKernelInterface
  type: class
  source: Symfony\Component\HttpKernel\HttpKernelInterface
- name: KernelEvents
  type: class
  source: Symfony\Component\HttpKernel\KernelEvents
- name: EventDispatcherInterface
  type: class
  source: Symfony\Contracts\EventDispatcher\EventDispatcherInterface
properties: []
methods:
- name: render
  visibility: public
  parameters:
  - name: uri
  - name: request
  - name: options
    default: '[]'
  comment: "# * Implements the inline rendering strategy where the Request is rendered\
    \ by the current HTTP kernel.\n# *\n# * @author Fabien Potencier <fabien@symfony.com>\n\
    # */\n# class InlineFragmentRenderer extends RoutableFragmentRenderer\n# {\n#\
    \ public function __construct(\n# private HttpKernelInterface $kernel,\n# private\
    \ ?EventDispatcherInterface $dispatcher = null,\n# ) {\n# }\n# \n# /**\n# * Additional\
    \ available options:\n# *\n# *  * alt: an alternative URI to render in case of\
    \ an error"
- name: createSubRequest
  visibility: protected
  parameters:
  - name: uri
  - name: request
  comment: null
- name: getName
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\Response
- Symfony\Component\HttpKernel\Controller\ControllerReference
- Symfony\Component\HttpKernel\Event\ExceptionEvent
- Symfony\Component\HttpKernel\HttpCache\SubRequestHandler
- Symfony\Component\HttpKernel\HttpKernelInterface
- Symfony\Component\HttpKernel\KernelEvents
- Symfony\Contracts\EventDispatcher\EventDispatcherInterface
interfaces: []
