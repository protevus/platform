name: ProfilerListener
class_comment: '# * ProfilerListener collects data for the current request by listening
  to the kernel events.

  # *

  # * @author Fabien Potencier <fabien@symfony.com>

  # *

  # * @final'
dependencies:
- name: EventSubscriberInterface
  type: class
  source: Symfony\Component\EventDispatcher\EventSubscriberInterface
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: RequestMatcherInterface
  type: class
  source: Symfony\Component\HttpFoundation\RequestMatcherInterface
- name: RequestStack
  type: class
  source: Symfony\Component\HttpFoundation\RequestStack
- name: Session
  type: class
  source: Symfony\Component\HttpFoundation\Session\Session
- name: ExceptionEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\ExceptionEvent
- name: ResponseEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\ResponseEvent
- name: TerminateEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\TerminateEvent
- name: KernelEvents
  type: class
  source: Symfony\Component\HttpKernel\KernelEvents
- name: Profile
  type: class
  source: Symfony\Component\HttpKernel\Profiler\Profile
- name: Profiler
  type: class
  source: Symfony\Component\HttpKernel\Profiler\Profiler
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: profiler
  - name: requestStack
  - name: matcher
    default: 'null'
  - name: onlyException
    default: 'false'
  - name: onlyMainRequests
    default: 'false'
  - name: collectParameter
    default: 'null'
  comment: "# * ProfilerListener collects data for the current request by listening\
    \ to the kernel events.\n# *\n# * @author Fabien Potencier <fabien@symfony.com>\n\
    # *\n# * @final\n# */\n# class ProfilerListener implements EventSubscriberInterface\n\
    # {\n# private ?\\Throwable $exception = null;\n# /** @var \\SplObjectStorage<Request,\
    \ Profile> */\n# private \\SplObjectStorage $profiles;\n# /** @var \\SplObjectStorage<Request,\
    \ Request|null> */\n# private \\SplObjectStorage $parents;\n# \n# /**\n# * @param\
    \ bool $onlyException    True if the profiler only collects data when an exception\
    \ occurs, false otherwise\n# * @param bool $onlyMainRequests True if the profiler\
    \ only collects data when the request is the main request, false otherwise"
- name: onKernelException
  visibility: public
  parameters:
  - name: event
  comment: '# * Handles the onKernelException event.'
- name: onKernelResponse
  visibility: public
  parameters:
  - name: event
  comment: '# * Handles the onKernelResponse event.'
- name: onKernelTerminate
  visibility: public
  parameters:
  - name: event
  comment: null
- name: getSubscribedEvents
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\EventDispatcher\EventSubscriberInterface
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\RequestMatcherInterface
- Symfony\Component\HttpFoundation\RequestStack
- Symfony\Component\HttpFoundation\Session\Session
- Symfony\Component\HttpKernel\Event\ExceptionEvent
- Symfony\Component\HttpKernel\Event\ResponseEvent
- Symfony\Component\HttpKernel\Event\TerminateEvent
- Symfony\Component\HttpKernel\KernelEvents
- Symfony\Component\HttpKernel\Profiler\Profile
- Symfony\Component\HttpKernel\Profiler\Profiler
interfaces:
- EventSubscriberInterface
