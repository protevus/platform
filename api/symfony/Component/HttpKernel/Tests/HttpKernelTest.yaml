name: HttpKernelTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: EventDispatcher
  type: class
  source: Symfony\Component\EventDispatcher\EventDispatcher
- name: EventDispatcherInterface
  type: class
  source: Symfony\Component\EventDispatcher\EventDispatcherInterface
- name: RedirectResponse
  type: class
  source: Symfony\Component\HttpFoundation\RedirectResponse
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: RequestStack
  type: class
  source: Symfony\Component\HttpFoundation\RequestStack
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
- name: StreamedResponse
  type: class
  source: Symfony\Component\HttpFoundation\StreamedResponse
- name: ArgumentResolverInterface
  type: class
  source: Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface
- name: ControllerResolverInterface
  type: class
  source: Symfony\Component\HttpKernel\Controller\ControllerResolverInterface
- name: ExceptionEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\ExceptionEvent
- name: AccessDeniedHttpException
  type: class
  source: Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
- name: BadRequestHttpException
  type: class
  source: Symfony\Component\HttpKernel\Exception\BadRequestHttpException
- name: ControllerDoesNotReturnResponseException
  type: class
  source: Symfony\Component\HttpKernel\Exception\ControllerDoesNotReturnResponseException
- name: MethodNotAllowedHttpException
  type: class
  source: Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException
- name: NotFoundHttpException
  type: class
  source: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
- name: HttpKernel
  type: class
  source: Symfony\Component\HttpKernel\HttpKernel
- name: HttpKernelInterface
  type: class
  source: Symfony\Component\HttpKernel\HttpKernelInterface
- name: KernelEvents
  type: class
  source: Symfony\Component\HttpKernel\KernelEvents
properties: []
methods:
- name: testHandleWhenControllerThrowsAnExceptionAndCatchIsTrue
  visibility: public
  parameters: []
  comment: '# * Catch exceptions: true

    # * Throwable type: RuntimeException

    # * Listener: false.'
- name: testRequestStackIsNotBrokenWhenControllerThrowsAnExceptionAndCatchIsTrue
  visibility: public
  parameters: []
  comment: null
- name: testRequestStackIsNotBrokenWhenControllerThrowsAnExceptionAndCatchIsFalse
  visibility: public
  parameters: []
  comment: null
- name: testRequestStackIsNotBrokenWhenControllerThrowsAnThrowable
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenControllerThrowsAnExceptionAndCatchIsFalseAndNoListenerIsRegistered
  visibility: public
  parameters: []
  comment: '# * Catch exceptions: false

    # * Throwable type: RuntimeException

    # * Listener: false.'
- name: testHandleWhenControllerThrowsAnExceptionAndCatchIsTrueWithAHandlingListener
  visibility: public
  parameters: []
  comment: '# * Catch exceptions: true

    # * Throwable type: RuntimeException

    # * Listener: true.'
- name: testHandleWhenControllerThrowsAThrowableAndCatchIsTrueWithAHandlingListener
  visibility: public
  parameters: []
  comment: '# * Catch exceptions: true

    # * Throwable type: TypeError

    # * Listener: true.'
- name: testHandleWhenControllerThrowsAThrowableAndCatchIsFalseWithAHandlingListener
  visibility: public
  parameters: []
  comment: '# * Catch exceptions: false

    # * Throwable type: TypeError

    # * Listener: true.'
- name: testHandleWhenControllerThrowsAThrowableAndCatchIsTrueNotHandlingThrowables
  visibility: public
  parameters: []
  comment: '# * Catch exceptions: true

    # * Throwable type: TypeError

    # * Listener: true.'
- name: testHandleWhenControllerThrowsAnExceptionAndCatchIsTrueWithANonHandlingListener
  visibility: public
  parameters: []
  comment: '# * Catch exceptions: true

    # * Throwable type: RuntimeException

    # * Listener: true.'
- name: testHandleExceptionWithARedirectionResponse
  visibility: public
  parameters: []
  comment: null
- name: testHandleHttpException
  visibility: public
  parameters: []
  comment: null
- name: getStatusCodes
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenAnExceptionIsHandledWithASpecificStatusCode
  visibility: public
  parameters:
  - name: expectedStatusCode
  comment: '# * @dataProvider getSpecificStatusCodes'
- name: getSpecificStatusCodes
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenAListenerReturnsAResponse
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenNoControllerIsFound
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenTheControllerIsAClosure
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenTheControllerIsAnObjectWithInvoke
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenTheControllerIsAFunction
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenTheControllerIsAnArray
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenTheControllerIsAStaticArray
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenTheControllerDoesNotReturnAResponse
  visibility: public
  parameters: []
  comment: null
- name: testHandleWhenTheControllerDoesNotReturnAResponseButAViewIsRegistered
  visibility: public
  parameters: []
  comment: null
- name: testHandleWithAResponseListener
  visibility: public
  parameters: []
  comment: null
- name: testHandleAllowChangingControllerArguments
  visibility: public
  parameters: []
  comment: null
- name: testHandleAllowChangingControllerAndArguments
  visibility: public
  parameters: []
  comment: null
- name: testTerminate
  visibility: public
  parameters: []
  comment: null
- name: testTerminateWithException
  visibility: public
  parameters: []
  comment: null
- name: testVerifyRequestStackPushPopDuringHandle
  visibility: public
  parameters: []
  comment: null
- name: testVerifyRequestStackPushPopWithStreamedResponse
  visibility: public
  parameters: []
  comment: null
- name: testInconsistentClientIpsOnMainRequests
  visibility: public
  parameters: []
  comment: null
- name: getHttpKernel
  visibility: private
  parameters:
  - name: eventDispatcher
  - name: controller
    default: 'null'
  - name: requestStack
    default: 'null'
  - name: arguments
    default: '[]'
  - name: handleAllThrowables
    default: 'false'
  comment: null
- name: assertResponseEquals
  visibility: private
  parameters:
  - name: expected
  - name: actual
  comment: null
- name: __invoke
  visibility: public
  parameters: []
  comment: null
- name: controller
  visibility: public
  parameters: []
  comment: null
- name: staticController
  visibility: public
  parameters: []
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Component\EventDispatcher\EventDispatcher
- Symfony\Component\EventDispatcher\EventDispatcherInterface
- Symfony\Component\HttpFoundation\RedirectResponse
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\RequestStack
- Symfony\Component\HttpFoundation\Response
- Symfony\Component\HttpFoundation\StreamedResponse
- Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface
- Symfony\Component\HttpKernel\Controller\ControllerResolverInterface
- Symfony\Component\HttpKernel\Event\ExceptionEvent
- Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
- Symfony\Component\HttpKernel\Exception\BadRequestHttpException
- Symfony\Component\HttpKernel\Exception\ControllerDoesNotReturnResponseException
- Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException
- Symfony\Component\HttpKernel\Exception\NotFoundHttpException
- Symfony\Component\HttpKernel\HttpKernel
- Symfony\Component\HttpKernel\HttpKernelInterface
- Symfony\Component\HttpKernel\KernelEvents
interfaces: []
