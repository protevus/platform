name: SessionListenerTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: LoggerInterface
  type: class
  source: Psr\Log\LoggerInterface
- name: Container
  type: class
  source: Symfony\Component\DependencyInjection\Container
- name: ServiceLocator
  type: class
  source: Symfony\Component\DependencyInjection\ServiceLocator
- name: Cookie
  type: class
  source: Symfony\Component\HttpFoundation\Cookie
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: RequestStack
  type: class
  source: Symfony\Component\HttpFoundation\RequestStack
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
- name: Session
  type: class
  source: Symfony\Component\HttpFoundation\Session\Session
- name: SessionFactory
  type: class
  source: Symfony\Component\HttpFoundation\Session\SessionFactory
- name: SessionInterface
  type: class
  source: Symfony\Component\HttpFoundation\Session\SessionInterface
- name: NativeSessionStorage
  type: class
  source: Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage
- name: NativeSessionStorageFactory
  type: class
  source: Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory
- name: PhpBridgeSessionStorageFactory
  type: class
  source: Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory
- name: SessionStorageFactoryInterface
  type: class
  source: Symfony\Component\HttpFoundation\Session\Storage\SessionStorageFactoryInterface
- name: RequestDataCollector
  type: class
  source: Symfony\Component\HttpKernel\DataCollector\RequestDataCollector
- name: RequestEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\RequestEvent
- name: ResponseEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\ResponseEvent
- name: AbstractSessionListener
  type: class
  source: Symfony\Component\HttpKernel\EventListener\AbstractSessionListener
- name: SessionListener
  type: class
  source: Symfony\Component\HttpKernel\EventListener\SessionListener
- name: UnexpectedSessionUsageException
  type: class
  source: Symfony\Component\HttpKernel\Exception\UnexpectedSessionUsageException
- name: HttpKernelInterface
  type: class
  source: Symfony\Component\HttpKernel\HttpKernelInterface
- name: KernelInterface
  type: class
  source: Symfony\Component\HttpKernel\KernelInterface
properties: []
methods:
- name: testSessionCookieOptions
  visibility: public
  parameters:
  - name: phpSessionOptions
  - name: sessionOptions
  - name: expectedSessionOptions
  comment: '# * @dataProvider provideSessionOptions

    # *

    # * @runInSeparateProcess'
- name: provideSessionOptions
  visibility: public
  parameters: []
  comment: null
- name: testPhpBridgeAlreadyStartedSession
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: testSessionCookieWrittenNoCookieGiven
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: testSessionCookieNotWrittenCookieGiven
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: testNewSessionIdIsNotOverwritten
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: testSessionCookieClearedWhenInvalidated
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: testSessionCookieNotClearedWhenOtherVariablesSet
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: testSessionCookieSetWhenOtherNativeVariablesSet
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: testOnlyTriggeredOnMainRequest
  visibility: public
  parameters: []
  comment: null
- name: getSession
  visibility: protected
  parameters: []
  comment: null
- name: testSessionIsSet
  visibility: public
  parameters: []
  comment: null
- name: testSessionUsesFactory
  visibility: public
  parameters: []
  comment: null
- name: testUsesFactoryWhenNeeded
  visibility: public
  parameters: []
  comment: null
- name: testDontUsesFactoryWhenSessionIsNotUsed
  visibility: public
  parameters: []
  comment: null
- name: testResponseIsPrivateIfSessionStarted
  visibility: public
  parameters: []
  comment: null
- name: testResponseIsStillPublicIfSessionStartedAndHeaderPresent
  visibility: public
  parameters: []
  comment: null
- name: testSessionSaveAndResponseHasSessionCookie
  visibility: public
  parameters: []
  comment: null
- name: testUninitializedSessionUsingSessionFromRequest
  visibility: public
  parameters: []
  comment: null
- name: testUninitializedSessionWithoutInitializedSession
  visibility: public
  parameters: []
  comment: null
- name: testResponseHeadersMaxAgeAndExpiresNotBeOverriddenIfSessionStarted
  visibility: public
  parameters: []
  comment: null
- name: testResponseHeadersMaxAgeAndExpiresDefaultValuesIfSessionStarted
  visibility: public
  parameters: []
  comment: null
- name: testPrivateResponseMaxAgeIsRespectedIfSessionStarted
  visibility: public
  parameters: []
  comment: null
- name: testSurrogateMainRequestIsPublic
  visibility: public
  parameters: []
  comment: null
- name: testGetSessionIsCalledOnce
  visibility: public
  parameters: []
  comment: null
- name: testGetSessionSetsSessionOnMainRequest
  visibility: public
  parameters: []
  comment: null
- name: testSessionUsageExceptionIfStatelessAndSessionUsed
  visibility: public
  parameters: []
  comment: null
- name: testSessionUsageLogIfStatelessAndSessionUsed
  visibility: public
  parameters: []
  comment: null
- name: testSessionIsSavedWhenUnexpectedSessionExceptionThrown
  visibility: public
  parameters: []
  comment: null
- name: testSessionUsageCallbackWhenDebugAndStateless
  visibility: public
  parameters: []
  comment: null
- name: testSessionUsageCallbackWhenNoDebug
  visibility: public
  parameters: []
  comment: null
- name: testSessionUsageCallbackWhenNoStateless
  visibility: public
  parameters: []
  comment: null
- name: testReset
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: testResetUnclosedSession
  visibility: public
  parameters: []
  comment: '# * @runInSeparateProcess'
- name: createListener
  visibility: private
  parameters:
  - name: request
  - name: sessionFactory
  comment: null
- name: createValidSessionId
  visibility: private
  parameters: []
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Psr\Log\LoggerInterface
- Symfony\Component\DependencyInjection\Container
- Symfony\Component\DependencyInjection\ServiceLocator
- Symfony\Component\HttpFoundation\Cookie
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\RequestStack
- Symfony\Component\HttpFoundation\Response
- Symfony\Component\HttpFoundation\Session\Session
- Symfony\Component\HttpFoundation\Session\SessionFactory
- Symfony\Component\HttpFoundation\Session\SessionInterface
- Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage
- Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory
- Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory
- Symfony\Component\HttpFoundation\Session\Storage\SessionStorageFactoryInterface
- Symfony\Component\HttpKernel\DataCollector\RequestDataCollector
- Symfony\Component\HttpKernel\Event\RequestEvent
- Symfony\Component\HttpKernel\Event\ResponseEvent
- Symfony\Component\HttpKernel\EventListener\AbstractSessionListener
- Symfony\Component\HttpKernel\EventListener\SessionListener
- Symfony\Component\HttpKernel\Exception\UnexpectedSessionUsageException
- Symfony\Component\HttpKernel\HttpKernelInterface
- Symfony\Component\HttpKernel\KernelInterface
interfaces: []
