name: ErrorListenerTest
class_comment: "# * @author Robert Sch\xF6nthal <seroscho@googlemail.com>\n# *\n#\
  \ * @group time-sensitive"
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: LoggerInterface
  type: class
  source: Psr\Log\LoggerInterface
- name: LogLevel
  type: class
  source: Psr\Log\LogLevel
- name: FlattenException
  type: class
  source: Symfony\Component\ErrorHandler\Exception\FlattenException
- name: EventDispatcher
  type: class
  source: Symfony\Component\EventDispatcher\EventDispatcher
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
- name: WithHttpStatus
  type: class
  source: Symfony\Component\HttpKernel\Attribute\WithHttpStatus
- name: WithLogLevel
  type: class
  source: Symfony\Component\HttpKernel\Attribute\WithLogLevel
- name: ArgumentResolver
  type: class
  source: Symfony\Component\HttpKernel\Controller\ArgumentResolver
- name: ControllerArgumentsEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent
- name: ExceptionEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\ExceptionEvent
- name: ResponseEvent
  type: class
  source: Symfony\Component\HttpKernel\Event\ResponseEvent
- name: ErrorListener
  type: class
  source: Symfony\Component\HttpKernel\EventListener\ErrorListener
- name: HttpExceptionInterface
  type: class
  source: Symfony\Component\HttpKernel\Exception\HttpExceptionInterface
- name: HttpKernelInterface
  type: class
  source: Symfony\Component\HttpKernel\HttpKernelInterface
- name: KernelEvents
  type: class
  source: Symfony\Component\HttpKernel\KernelEvents
- name: DebugLoggerInterface
  type: class
  source: Symfony\Component\HttpKernel\Log\DebugLoggerInterface
- name: Logger
  type: class
  source: Symfony\Component\HttpKernel\Tests\Logger
properties: []
methods:
- name: testHandleWithoutLogger
  visibility: public
  parameters:
  - name: event
  - name: event2
  comment: "# * @author Robert Sch\xF6nthal <seroscho@googlemail.com>\n# *\n# * @group\
    \ time-sensitive\n# */\n# class ErrorListenerTest extends TestCase\n# {\n# public\
    \ function testConstruct()\n# {\n# $logger = new TestLogger();\n# $l = new ErrorListener('foo',\
    \ $logger);\n# \n# $_logger = new \\ReflectionProperty($l::class, 'logger');\n\
    # $_controller = new \\ReflectionProperty($l::class, 'controller');\n# \n# $this->assertSame($logger,\
    \ $_logger->getValue($l));\n# $this->assertSame('foo', $_controller->getValue($l));\n\
    # }\n# \n# /**\n# * @dataProvider provider"
- name: testHandleWithLogger
  visibility: public
  parameters:
  - name: event
  - name: event2
  comment: '# * @dataProvider provider'
- name: testHandleWithLoggerAndCustomConfiguration
  visibility: public
  parameters: []
  comment: null
- name: testHandleWithLogLevelAttribute
  visibility: public
  parameters: []
  comment: null
- name: testHandleClassImplementingInterfaceWithLogLevelAttribute
  visibility: public
  parameters: []
  comment: null
- name: testHandleWithLogLevelAttributeAndCustomConfiguration
  visibility: public
  parameters: []
  comment: null
- name: testHandleHttpAttribute
  visibility: public
  parameters:
  - name: exception
  - name: expectedStatusCode
  - name: expectedHeaders
  comment: '# * @dataProvider exceptionWithAttributeProvider'
- name: testHandleCustomConfigurationAndHttpAttribute
  visibility: public
  parameters: []
  comment: null
- name: provider
  visibility: public
  parameters: []
  comment: null
- name: testSubRequestFormat
  visibility: public
  parameters: []
  comment: null
- name: testCSPHeaderIsRemoved
  visibility: public
  parameters: []
  comment: null
- name: testTerminating
  visibility: public
  parameters: []
  comment: null
- name: testOnControllerArguments
  visibility: public
  parameters:
  - name: controller
  comment: '# * @dataProvider controllerProvider'
- name: controllerProvider
  visibility: public
  parameters: []
  comment: null
- name: exceptionWithAttributeProvider
  visibility: public
  parameters: []
  comment: null
- name: countErrors
  visibility: public
  parameters:
  - name: request
    default: 'null'
  comment: null
- name: handle
  visibility: public
  parameters:
  - name: request
  - name: type
    default: self::MAIN_REQUEST
  - name: catch
    default: 'true'
  comment: null
- name: handle
  visibility: public
  parameters:
  - name: request
  - name: type
    default: self::MAIN_REQUEST
  - name: catch
    default: 'true'
  comment: null
- name: __construct
  visibility: public
  parameters:
  - name: headers
    default: '[]'
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Psr\Log\LoggerInterface
- Psr\Log\LogLevel
- Symfony\Component\ErrorHandler\Exception\FlattenException
- Symfony\Component\EventDispatcher\EventDispatcher
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\Response
- Symfony\Component\HttpKernel\Attribute\WithHttpStatus
- Symfony\Component\HttpKernel\Attribute\WithLogLevel
- Symfony\Component\HttpKernel\Controller\ArgumentResolver
- Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent
- Symfony\Component\HttpKernel\Event\ExceptionEvent
- Symfony\Component\HttpKernel\Event\ResponseEvent
- Symfony\Component\HttpKernel\EventListener\ErrorListener
- Symfony\Component\HttpKernel\Exception\HttpExceptionInterface
- Symfony\Component\HttpKernel\HttpKernelInterface
- Symfony\Component\HttpKernel\KernelEvents
- Symfony\Component\HttpKernel\Log\DebugLoggerInterface
- Symfony\Component\HttpKernel\Tests\Logger
interfaces:
- DebugLoggerInterface
- HttpKernelInterface
- HttpKernelInterface
- InterfaceWithGeneralAttribute
- InterfaceWithLogLevelAttribute
