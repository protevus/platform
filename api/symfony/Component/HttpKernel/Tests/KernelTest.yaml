name: KernelTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: LoaderInterface
  type: class
  source: Symfony\Component\Config\Loader\LoaderInterface
- name: CompilerPassInterface
  type: class
  source: Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface
- name: ContainerBuilder
  type: class
  source: Symfony\Component\DependencyInjection\ContainerBuilder
- name: ContainerInterface
  type: class
  source: Symfony\Component\DependencyInjection\ContainerInterface
- name: ExtensionInterface
  type: class
  source: Symfony\Component\DependencyInjection\Extension\ExtensionInterface
- name: IOException
  type: class
  source: Symfony\Component\Filesystem\Exception\IOException
- name: Filesystem
  type: class
  source: Symfony\Component\Filesystem\Filesystem
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
- name: Bundle
  type: class
  source: Symfony\Component\HttpKernel\Bundle\Bundle
- name: BundleInterface
  type: class
  source: Symfony\Component\HttpKernel\Bundle\BundleInterface
- name: WarmableInterface
  type: class
  source: Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface
- name: ResettableServicePass
  type: class
  source: Symfony\Component\HttpKernel\DependencyInjection\ResettableServicePass
- name: ServicesResetter
  type: class
  source: Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter
- name: HttpKernel
  type: class
  source: Symfony\Component\HttpKernel\HttpKernel
- name: HttpKernelInterface
  type: class
  source: Symfony\Component\HttpKernel\HttpKernelInterface
- name: Kernel
  type: class
  source: Symfony\Component\HttpKernel\Kernel
- name: KernelForTest
  type: class
  source: Symfony\Component\HttpKernel\Tests\Fixtures\KernelForTest
- name: KernelForTestWithLoadClassCache
  type: class
  source: Symfony\Component\HttpKernel\Tests\Fixtures\KernelForTestWithLoadClassCache
- name: KernelWithoutBundles
  type: class
  source: Symfony\Component\HttpKernel\Tests\Fixtures\KernelWithoutBundles
- name: ResettableService
  type: class
  source: Symfony\Component\HttpKernel\Tests\Fixtures\ResettableService
properties: []
methods:
- name: tearDown
  visibility: protected
  parameters: []
  comment: null
- name: testConstructor
  visibility: public
  parameters: []
  comment: null
- name: testEmptyEnv
  visibility: public
  parameters: []
  comment: null
- name: testClone
  visibility: public
  parameters: []
  comment: null
- name: testClassNameValidityGetter
  visibility: public
  parameters: []
  comment: null
- name: testInitializeContainerClearsOldContainers
  visibility: public
  parameters: []
  comment: null
- name: testBootInitializesBundlesAndContainer
  visibility: public
  parameters: []
  comment: null
- name: testBootSetsTheContainerToTheBundles
  visibility: public
  parameters: []
  comment: null
- name: testBootSetsTheBootedFlagToTrue
  visibility: public
  parameters: []
  comment: null
- name: testClassCacheIsNotLoadedByDefault
  visibility: public
  parameters: []
  comment: null
- name: testBootKernelSeveralTimesOnlyInitializesBundlesOnce
  visibility: public
  parameters: []
  comment: null
- name: testShutdownCallsShutdownOnAllBundles
  visibility: public
  parameters: []
  comment: null
- name: testShutdownGivesNullContainerToAllBundles
  visibility: public
  parameters: []
  comment: null
- name: testHandleCallsHandleOnHttpKernel
  visibility: public
  parameters: []
  comment: null
- name: testHandleBootsTheKernel
  visibility: public
  parameters: []
  comment: null
- name: testSerialize
  visibility: public
  parameters: []
  comment: null
- name: testLocateResourceThrowsExceptionWhenNameIsNotValid
  visibility: public
  parameters: []
  comment: null
- name: testLocateResourceThrowsExceptionWhenNameIsUnsafe
  visibility: public
  parameters: []
  comment: null
- name: testLocateResourceThrowsExceptionWhenBundleDoesNotExist
  visibility: public
  parameters: []
  comment: null
- name: testLocateResourceThrowsExceptionWhenResourceDoesNotExist
  visibility: public
  parameters: []
  comment: null
- name: testLocateResourceReturnsTheFirstThatMatches
  visibility: public
  parameters: []
  comment: null
- name: testLocateResourceOnDirectories
  visibility: public
  parameters: []
  comment: null
- name: testInitializeBundleThrowsExceptionWhenRegisteringTwoBundlesWithTheSameName
  visibility: public
  parameters: []
  comment: null
- name: testTerminateReturnsSilentlyIfKernelIsNotBooted
  visibility: public
  parameters: []
  comment: null
- name: testTerminateDelegatesTerminationOnlyForTerminableInterface
  visibility: public
  parameters: []
  comment: null
- name: testKernelWithoutBundles
  visibility: public
  parameters: []
  comment: null
- name: testProjectDirExtension
  visibility: public
  parameters: []
  comment: null
- name: testKernelReset
  visibility: public
  parameters: []
  comment: null
- name: testKernelExtension
  visibility: public
  parameters: []
  comment: null
- name: load
  visibility: public
  parameters:
  - name: configs
  - name: container
  comment: null
- name: getNamespace
  visibility: public
  parameters: []
  comment: null
- name: getXsdValidationBasePath
  visibility: public
  parameters: []
  comment: null
- name: getAlias
  visibility: public
  parameters: []
  comment: null
- name: testKernelPass
  visibility: public
  parameters: []
  comment: null
- name: testWarmup
  visibility: public
  parameters: []
  comment: null
- name: testServicesResetter
  visibility: public
  parameters: []
  comment: null
- name: testKernelStartTimeIsResetWhileBootingAlreadyBootedKernel
  visibility: public
  parameters: []
  comment: '# * @group time-sensitive'
- name: testAnonymousKernelGeneratesValidContainerClass
  visibility: public
  parameters: []
  comment: null
- name: registerBundles
  visibility: public
  parameters: []
  comment: null
- name: registerContainerConfiguration
  visibility: public
  parameters:
  - name: loader
  comment: null
- name: getContainerClass
  visibility: public
  parameters: []
  comment: null
- name: getBundle
  visibility: protected
  parameters:
  - name: dir
    default: 'null'
  - name: className
    default: 'null'
  - name: bundleName
    default: 'null'
  comment: '# * Returns a mock for the BundleInterface.'
- name: getKernel
  visibility: protected
  parameters:
  - name: methods
    default: '[]'
  - name: bundles
    default: '[]'
  - name: debug
    default: 'false'
  - name: kernelClass
    default: KernelForTest::class
  comment: '# * Returns a mock for the abstract kernel.

    # *

    # * @param array $methods Additional methods to mock (besides the abstract ones)

    # * @param array $bundles Bundles to register'
- name: terminate
  visibility: public
  parameters: []
  comment: null
- name: handle
  visibility: public
  parameters:
  - name: request
  - name: type
    default: self::MAIN_REQUEST
  - name: catch
    default: 'true'
  comment: null
- name: getProjectDir
  visibility: public
  parameters: []
  comment: null
- name: __construct
  visibility: public
  parameters:
  - name: buildContainer
    default: 'null'
  - name: httpKernel
    default: 'null'
  - name: env
    default: '''custom'''
  comment: null
- name: registerBundles
  visibility: public
  parameters: []
  comment: null
- name: registerContainerConfiguration
  visibility: public
  parameters:
  - name: loader
  comment: null
- name: getProjectDir
  visibility: public
  parameters: []
  comment: null
- name: warmUp
  visibility: public
  parameters:
  - name: cacheDir
  - name: buildDir
    default: 'null'
  comment: null
- name: build
  visibility: protected
  parameters:
  - name: container
  comment: null
- name: getHttpKernel
  visibility: protected
  parameters: []
  comment: null
- name: __construct
  visibility: public
  parameters: []
  comment: null
- name: process
  visibility: public
  parameters:
  - name: container
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Component\Config\Loader\LoaderInterface
- Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface
- Symfony\Component\DependencyInjection\ContainerBuilder
- Symfony\Component\DependencyInjection\ContainerInterface
- Symfony\Component\DependencyInjection\Extension\ExtensionInterface
- Symfony\Component\Filesystem\Exception\IOException
- Symfony\Component\Filesystem\Filesystem
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\Response
- Symfony\Component\HttpKernel\Bundle\Bundle
- Symfony\Component\HttpKernel\Bundle\BundleInterface
- Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface
- Symfony\Component\HttpKernel\DependencyInjection\ResettableServicePass
- Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter
- Symfony\Component\HttpKernel\HttpKernel
- Symfony\Component\HttpKernel\HttpKernelInterface
- Symfony\Component\HttpKernel\Kernel
- Symfony\Component\HttpKernel\Tests\Fixtures\KernelForTest
- Symfony\Component\HttpKernel\Tests\Fixtures\KernelForTestWithLoadClassCache
- Symfony\Component\HttpKernel\Tests\Fixtures\KernelWithoutBundles
- Symfony\Component\HttpKernel\Tests\Fixtures\ResettableService
interfaces:
- TerminableInterface
- ExtensionInterface
- HttpKernelInterface
- WarmableInterface
- CompilerPassInterface
