name: ProfilerStorageInterface
class_comment: null
dependencies: []
properties: []
methods:
- name: find
  visibility: public
  parameters:
  - name: ip
  - name: url
  - name: limit
  - name: method
  - name: start
    default: 'null'
  - name: end
    default: 'null'
  - name: statusCode
    default: 'null'
  - name: filter
    default: 'null'
  comment: '# * ProfilerStorageInterface.

    # *

    # * This interface exists for historical reasons. The only supported

    # * implementation is FileProfilerStorage.

    # *

    # * As the profiler must only be used on non-production servers, the file storage

    # * is more than enough and no other implementations will ever be supported.

    # *

    # * @internal

    # *

    # * @author Fabien Potencier <fabien@symfony.com>

    # */

    # interface ProfilerStorageInterface

    # {

    # /**

    # * Finds profiler tokens for the given criteria.

    # *

    # * @param int|null      $limit      The maximum number of tokens to return

    # * @param int|null      $start      The start date to search from

    # * @param int|null      $end        The end date to search to

    # * @param string|null   $statusCode The response status code

    # * @param \Closure|null $filter     A filter to apply on the list of tokens'
- name: read
  visibility: public
  parameters:
  - name: token
  comment: '# * Reads data associated with the given token.

    # *

    # * The method returns false if the token does not exist in the storage.'
- name: write
  visibility: public
  parameters:
  - name: profile
  comment: '# * Saves a Profile.'
- name: purge
  visibility: public
  parameters: []
  comment: '# * Purges all data from the database.'
traits: []
interfaces: []
