name: HttpKernelBrowser
class_comment: '# * Simulates a browser and makes requests to an HttpKernel instance.

  # *

  # * @author Fabien Potencier <fabien@symfony.com>

  # *

  # * @template-extends AbstractBrowser<Request, Response>'
dependencies:
- name: AbstractBrowser
  type: class
  source: Symfony\Component\BrowserKit\AbstractBrowser
- name: CookieJar
  type: class
  source: Symfony\Component\BrowserKit\CookieJar
- name: History
  type: class
  source: Symfony\Component\BrowserKit\History
- name: DomRequest
  type: class
  source: Symfony\Component\BrowserKit\Request
- name: DomResponse
  type: class
  source: Symfony\Component\BrowserKit\Response
- name: UploadedFile
  type: class
  source: Symfony\Component\HttpFoundation\File\UploadedFile
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: kernel
  - name: server
    default: '[]'
  - name: history
    default: 'null'
  - name: cookieJar
    default: 'null'
  comment: "# * Simulates a browser and makes requests to an HttpKernel instance.\n\
    # *\n# * @author Fabien Potencier <fabien@symfony.com>\n# *\n# * @template-extends\
    \ AbstractBrowser<Request, Response>\n# */\n# class HttpKernelBrowser extends\
    \ AbstractBrowser\n# {\n# private bool $catchExceptions = true;\n# \n# /**\n#\
    \ * @param array $server The server parameters (equivalent of $_SERVER)"
- name: catchExceptions
  visibility: public
  parameters:
  - name: catchExceptions
  comment: '# * Sets whether to catch exceptions when the kernel is handling a request.'
- name: doRequest
  visibility: protected
  parameters:
  - name: request
  comment: '# * @param Request $request'
- name: getScript
  visibility: protected
  parameters:
  - name: request
  comment: '# * @param Request $request'
- name: getHandleScript
  visibility: protected
  parameters: []
  comment: null
- name: filterRequest
  visibility: protected
  parameters:
  - name: request
  comment: null
- name: filterFiles
  visibility: protected
  parameters:
  - name: files
  comment: '# * Filters an array of files.

    # *

    # * This method created test instances of UploadedFile so that the move()

    # * method can be called on those instances.

    # *

    # * If the size of a file is greater than the allowed size (from php.ini) then

    # * an invalid UploadedFile is returned with an error set to UPLOAD_ERR_INI_SIZE.

    # *

    # * @see UploadedFile'
- name: filterResponse
  visibility: protected
  parameters:
  - name: response
  comment: '# * @param Response $response'
traits:
- Symfony\Component\BrowserKit\AbstractBrowser
- Symfony\Component\BrowserKit\CookieJar
- Symfony\Component\BrowserKit\History
- Symfony\Component\HttpFoundation\File\UploadedFile
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\Response
interfaces: []
