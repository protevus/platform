name: StoreInterface
class_comment: null
dependencies:
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
properties: []
methods:
- name: lookup
  visibility: public
  parameters:
  - name: request
  comment: '# * Interface implemented by HTTP cache stores.

    # *

    # * @author Fabien Potencier <fabien@symfony.com>

    # */

    # interface StoreInterface

    # {

    # /**

    # * Locates a cached Response for the Request provided.'
- name: write
  visibility: public
  parameters:
  - name: request
  - name: response
  comment: '# * Writes a cache entry to the store for the given Request and Response.

    # *

    # * Existing entries are read and any that match the response are removed. This

    # * method calls write with the new list of cache entries.

    # *

    # * @return string The key under which the response is stored'
- name: invalidate
  visibility: public
  parameters:
  - name: request
  comment: '# * Invalidates all cache entries that match the request.'
- name: lock
  visibility: public
  parameters:
  - name: request
  comment: '# * Locks the cache for a given Request.

    # *

    # * @return bool|string true if the lock is acquired, the path to the current
    lock otherwise'
- name: unlock
  visibility: public
  parameters:
  - name: request
  comment: '# * Releases the lock for the given Request.

    # *

    # * @return bool False if the lock file does not exist or cannot be unlocked,
    true otherwise'
- name: isLocked
  visibility: public
  parameters:
  - name: request
  comment: '# * Returns whether or not a lock exists.

    # *

    # * @return bool true if lock exists, false otherwise'
- name: purge
  visibility: public
  parameters:
  - name: url
  comment: '# * Purges data for the given URL.

    # *

    # * @return bool true if the URL exists and has been purged, false otherwise'
- name: cleanup
  visibility: public
  parameters: []
  comment: '# * Cleanups storage.'
traits:
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\Response
interfaces: []
