name: MapQueryParameter
class_comment: null
dependencies:
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
- name: QueryParameterValueResolver
  type: class
  source: Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver
- name: ValueResolverInterface
  type: class
  source: Symfony\Component\HttpKernel\Controller\ValueResolverInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: name
    default: 'null'
  - name: filter
    default: 'null'
  - name: flags
    default: '0'
  - name: options
    default: '[]'
  - name: resolver
    default: QueryParameterValueResolver::class
  - name: validationFailedStatusCode
    default: Response::HTTP_NOT_FOUND
  comment: '# * Can be used to pass a query parameter to a controller argument.

    # *

    # * @author Ruud Kamphuis <ruud@ticketswap.com>

    # * @author Ionut Enache <i.ovidiuenache@yahoo.com>

    # */

    # #[\Attribute(\Attribute::TARGET_PARAMETER)]

    # final class MapQueryParameter extends ValueResolver

    # {

    # /**

    # * @see https://php.net/filter.filters.validate for filter, flags and options

    # *

    # * @param string|null                                         $name     The name
    of the query parameter; if null, the name of the argument in the controller will
    be used

    # * @param (FILTER_VALIDATE_*)|(FILTER_SANITIZE_*)|null        $filter   The filter
    to pass to "filter_var()"

    # * @param int-mask-of<(FILTER_FLAG_*)|FILTER_NULL_ON_FAILURE> $flags    The flags
    to pass to "filter_var()"

    # * @param array                                               $options  The options
    to pass to "filter_var()"

    # * @param class-string<ValueResolverInterface>|string         $resolver The name
    of the resolver to use'
traits:
- Symfony\Component\HttpFoundation\Response
- Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver
- Symfony\Component\HttpKernel\Controller\ValueResolverInterface
interfaces: []
