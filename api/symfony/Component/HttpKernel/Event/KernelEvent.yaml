name: KernelEvent
class_comment: '# * Base class for events dispatched in the HttpKernel component.

  # *

  # * @author Bernhard Schussek <bschussek@gmail.com>'
dependencies:
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: HttpKernelInterface
  type: class
  source: Symfony\Component\HttpKernel\HttpKernelInterface
- name: Event
  type: class
  source: Symfony\Contracts\EventDispatcher\Event
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: kernel
  - name: request
  - name: requestType
  comment: '# * Base class for events dispatched in the HttpKernel component.

    # *

    # * @author Bernhard Schussek <bschussek@gmail.com>

    # */

    # class KernelEvent extends Event

    # {

    # /**

    # * @param int $requestType The request type the kernel is currently processing;
    one of

    # *                         HttpKernelInterface::MAIN_REQUEST or HttpKernelInterface::SUB_REQUEST'
- name: getKernel
  visibility: public
  parameters: []
  comment: '# * Returns the kernel in which this event was thrown.'
- name: getRequest
  visibility: public
  parameters: []
  comment: '# * Returns the request the kernel is currently processing.'
- name: getRequestType
  visibility: public
  parameters: []
  comment: '# * Returns the request type the kernel is currently processing.

    # *

    # * @return int One of HttpKernelInterface::MAIN_REQUEST and

    # *             HttpKernelInterface::SUB_REQUEST'
- name: isMainRequest
  visibility: public
  parameters: []
  comment: '# * Checks if this is the main request.'
traits:
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpKernel\HttpKernelInterface
- Symfony\Contracts\EventDispatcher\Event
interfaces: []
