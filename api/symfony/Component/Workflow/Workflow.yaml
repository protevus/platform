name: Workflow
class_comment: "# * @author Fabien Potencier <fabien@symfony.com>\n# * @author Gr\xE9\
  goire Pineau <lyrixx@lyrixx.info>\n# * @author Tobias Nyholm <tobias.nyholm@gmail.com>\n\
  # * @author Carlos Pereira De Amorim <carlos@shauri.fr>"
dependencies:
- name: AnnounceEvent
  type: class
  source: Symfony\Component\Workflow\Event\AnnounceEvent
- name: CompletedEvent
  type: class
  source: Symfony\Component\Workflow\Event\CompletedEvent
- name: EnteredEvent
  type: class
  source: Symfony\Component\Workflow\Event\EnteredEvent
- name: EnterEvent
  type: class
  source: Symfony\Component\Workflow\Event\EnterEvent
- name: GuardEvent
  type: class
  source: Symfony\Component\Workflow\Event\GuardEvent
- name: LeaveEvent
  type: class
  source: Symfony\Component\Workflow\Event\LeaveEvent
- name: TransitionEvent
  type: class
  source: Symfony\Component\Workflow\Event\TransitionEvent
- name: LogicException
  type: class
  source: Symfony\Component\Workflow\Exception\LogicException
- name: NotEnabledTransitionException
  type: class
  source: Symfony\Component\Workflow\Exception\NotEnabledTransitionException
- name: UndefinedTransitionException
  type: class
  source: Symfony\Component\Workflow\Exception\UndefinedTransitionException
- name: MarkingStoreInterface
  type: class
  source: Symfony\Component\Workflow\MarkingStore\MarkingStoreInterface
- name: MethodMarkingStore
  type: class
  source: Symfony\Component\Workflow\MarkingStore\MethodMarkingStore
- name: MetadataStoreInterface
  type: class
  source: Symfony\Component\Workflow\Metadata\MetadataStoreInterface
- name: EventDispatcherInterface
  type: class
  source: Symfony\Contracts\EventDispatcher\EventDispatcherInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: definition
  - name: markingStore
    default: 'null'
  - name: dispatcher
    default: 'null'
  - name: name
    default: '''unnamed'''
  - name: eventsToDispatch
    default: 'null'
  comment: "# * @author Fabien Potencier <fabien@symfony.com>\n# * @author Gr\xE9\
    goire Pineau <lyrixx@lyrixx.info>\n# * @author Tobias Nyholm <tobias.nyholm@gmail.com>\n\
    # * @author Carlos Pereira De Amorim <carlos@shauri.fr>\n# */\n# class Workflow\
    \ implements WorkflowInterface\n# {\n# public const DISABLE_LEAVE_EVENT = 'workflow_disable_leave_event';\n\
    # public const DISABLE_TRANSITION_EVENT = 'workflow_disable_transition_event';\n\
    # public const DISABLE_ENTER_EVENT = 'workflow_disable_enter_event';\n# public\
    \ const DISABLE_ENTERED_EVENT = 'workflow_disable_entered_event';\n# public const\
    \ DISABLE_COMPLETED_EVENT = 'workflow_disable_completed_event';\n# public const\
    \ DISABLE_ANNOUNCE_EVENT = 'workflow_disable_announce_event';\n# \n# public const\
    \ DEFAULT_INITIAL_CONTEXT = ['initial' => true];\n# \n# private const DISABLE_EVENTS_MAPPING\
    \ = [\n# WorkflowEvents::LEAVE => self::DISABLE_LEAVE_EVENT,\n# WorkflowEvents::TRANSITION\
    \ => self::DISABLE_TRANSITION_EVENT,\n# WorkflowEvents::ENTER => self::DISABLE_ENTER_EVENT,\n\
    # WorkflowEvents::ENTERED => self::DISABLE_ENTERED_EVENT,\n# WorkflowEvents::COMPLETED\
    \ => self::DISABLE_COMPLETED_EVENT,\n# WorkflowEvents::ANNOUNCE => self::DISABLE_ANNOUNCE_EVENT,\n\
    # ];\n# \n# private MarkingStoreInterface $markingStore;\n# \n# /**\n# * @param\
    \ array|string[]|null $eventsToDispatch When `null` fire all events (the default\
    \ behaviour).\n# *                                              Setting this to\
    \ an empty array `[]` means no events are dispatched (except the {@see GuardEvent}).\n\
    # *                                              Passing an array with WorkflowEvents\
    \ will allow only those events to be dispatched plus\n# *                    \
    \                          the {@see GuardEvent}."
- name: getMarking
  visibility: public
  parameters:
  - name: subject
  - name: context
    default: '[]'
  comment: null
- name: can
  visibility: public
  parameters:
  - name: subject
  - name: transitionName
  comment: null
- name: buildTransitionBlockerList
  visibility: public
  parameters:
  - name: subject
  - name: transitionName
  comment: null
- name: apply
  visibility: public
  parameters:
  - name: subject
  - name: transitionName
  - name: context
    default: '[]'
  comment: null
- name: getEnabledTransitions
  visibility: public
  parameters:
  - name: subject
  comment: null
- name: getEnabledTransition
  visibility: public
  parameters:
  - name: subject
  - name: name
  comment: null
- name: getName
  visibility: public
  parameters: []
  comment: null
- name: getDefinition
  visibility: public
  parameters: []
  comment: null
- name: getMarkingStore
  visibility: public
  parameters: []
  comment: null
- name: getMetadataStore
  visibility: public
  parameters: []
  comment: null
- name: buildTransitionBlockerListForTransition
  visibility: private
  parameters:
  - name: subject
  - name: marking
  - name: transition
  comment: null
- name: guardTransition
  visibility: private
  parameters:
  - name: subject
  - name: marking
  - name: transition
  comment: null
- name: leave
  visibility: private
  parameters:
  - name: subject
  - name: transition
  - name: marking
  - name: context
    default: '[]'
  comment: null
- name: transition
  visibility: private
  parameters:
  - name: subject
  - name: transition
  - name: marking
  - name: context
  comment: null
- name: enter
  visibility: private
  parameters:
  - name: subject
  - name: transition
  - name: marking
  - name: context
  comment: null
- name: entered
  visibility: private
  parameters:
  - name: subject
  - name: transition
  - name: marking
  - name: context
  comment: null
- name: completed
  visibility: private
  parameters:
  - name: subject
  - name: transition
  - name: marking
  - name: context
  comment: null
- name: announce
  visibility: private
  parameters:
  - name: subject
  - name: initialTransition
  - name: marking
  - name: context
  comment: null
- name: shouldDispatchEvent
  visibility: private
  parameters:
  - name: eventName
  - name: context
  comment: null
traits:
- Symfony\Component\Workflow\Event\AnnounceEvent
- Symfony\Component\Workflow\Event\CompletedEvent
- Symfony\Component\Workflow\Event\EnteredEvent
- Symfony\Component\Workflow\Event\EnterEvent
- Symfony\Component\Workflow\Event\GuardEvent
- Symfony\Component\Workflow\Event\LeaveEvent
- Symfony\Component\Workflow\Event\TransitionEvent
- Symfony\Component\Workflow\Exception\LogicException
- Symfony\Component\Workflow\Exception\NotEnabledTransitionException
- Symfony\Component\Workflow\Exception\UndefinedTransitionException
- Symfony\Component\Workflow\MarkingStore\MarkingStoreInterface
- Symfony\Component\Workflow\MarkingStore\MethodMarkingStore
- Symfony\Component\Workflow\Metadata\MetadataStoreInterface
- Symfony\Contracts\EventDispatcher\EventDispatcherInterface
interfaces:
- WorkflowInterface
