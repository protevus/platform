name: WorkflowInterface
class_comment: null
dependencies:
- name: LogicException
  type: class
  source: Symfony\Component\Workflow\Exception\LogicException
- name: UndefinedTransitionException
  type: class
  source: Symfony\Component\Workflow\Exception\UndefinedTransitionException
- name: MarkingStoreInterface
  type: class
  source: Symfony\Component\Workflow\MarkingStore\MarkingStoreInterface
- name: MetadataStoreInterface
  type: class
  source: Symfony\Component\Workflow\Metadata\MetadataStoreInterface
properties: []
methods:
- name: getMarking
  visibility: public
  parameters:
  - name: subject
  comment: '# * Describes a workflow instance.

    # *

    # * @author Amrouche Hamza <hamza.simperfit@gmail.com>

    # *

    # * @method Transition|null getEnabledTransition(object $subject, string $name)

    # */

    # interface WorkflowInterface

    # {

    # /**

    # * Returns the object''s Marking.

    # *

    # * @throws LogicException'
- name: can
  visibility: public
  parameters:
  - name: subject
  - name: transitionName
  comment: '# * Returns true if the transition is enabled.'
- name: buildTransitionBlockerList
  visibility: public
  parameters:
  - name: subject
  - name: transitionName
  comment: '# * Builds a TransitionBlockerList to know why a transition is blocked.

    # *

    # * @throws UndefinedTransitionException If the transition is not defined'
- name: apply
  visibility: public
  parameters:
  - name: subject
  - name: transitionName
  - name: context
    default: '[]'
  comment: '# * Fire a transition.

    # *

    # * @throws LogicException If the transition is not applicable'
- name: getEnabledTransitions
  visibility: public
  parameters:
  - name: subject
  comment: '# * Returns all enabled transitions.

    # *

    # * @return Transition[]'
- name: getName
  visibility: public
  parameters: []
  comment: null
- name: getDefinition
  visibility: public
  parameters: []
  comment: null
- name: getMarkingStore
  visibility: public
  parameters: []
  comment: null
- name: getMetadataStore
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\Workflow\Exception\LogicException
- Symfony\Component\Workflow\Exception\UndefinedTransitionException
- Symfony\Component\Workflow\MarkingStore\MarkingStoreInterface
- Symfony\Component\Workflow\Metadata\MetadataStoreInterface
interfaces: []
