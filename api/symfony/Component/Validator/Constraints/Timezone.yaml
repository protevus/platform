name: Timezone
class_comment: null
dependencies:
- name: Constraint
  type: class
  source: Symfony\Component\Validator\Constraint
- name: ConstraintDefinitionException
  type: class
  source: Symfony\Component\Validator\Exception\ConstraintDefinitionException
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: zone
    default: 'null'
  - name: message
    default: 'null'
  - name: countryCode
    default: 'null'
  - name: intlCompatible
    default: 'null'
  - name: groups
    default: 'null'
  - name: payload
    default: 'null'
  - name: options
    default: '[]'
  comment: "# * Validates that a value is a valid timezone identifier.\n# *\n# * @author\
    \ Javier Spagnoletti <phansys@gmail.com>\n# * @author Hugo Hamon <hugohamon@neuf.fr>\n\
    # */\n# #[\\Attribute(\\Attribute::TARGET_PROPERTY | \\Attribute::TARGET_METHOD\
    \ | \\Attribute::IS_REPEATABLE)]\n# class Timezone extends Constraint\n# {\n#\
    \ public const TIMEZONE_IDENTIFIER_ERROR = '5ce113e6-5e64-4ea2-90fe-d2233956db13';\n\
    # public const TIMEZONE_IDENTIFIER_IN_ZONE_ERROR = 'b57767b1-36c0-40ac-a3d7-629420c775b8';\n\
    # public const TIMEZONE_IDENTIFIER_IN_COUNTRY_ERROR = 'c4a22222-dc92-4fc0-abb0-d95b268c7d0b';\n\
    # public const TIMEZONE_IDENTIFIER_INTL_ERROR = '45863c26-88dc-41ba-bf53-c73bd1f7e90d';\n\
    # \n# public int $zone = \\DateTimeZone::ALL;\n# public ?string $countryCode =\
    \ null;\n# public bool $intlCompatible = false;\n# public string $message = 'This\
    \ value is not a valid timezone.';\n# \n# protected const ERROR_NAMES = [\n# self::TIMEZONE_IDENTIFIER_ERROR\
    \ => 'TIMEZONE_IDENTIFIER_ERROR',\n# self::TIMEZONE_IDENTIFIER_IN_ZONE_ERROR =>\
    \ 'TIMEZONE_IDENTIFIER_IN_ZONE_ERROR',\n# self::TIMEZONE_IDENTIFIER_IN_COUNTRY_ERROR\
    \ => 'TIMEZONE_IDENTIFIER_IN_COUNTRY_ERROR',\n# self::TIMEZONE_IDENTIFIER_INTL_ERROR\
    \ => 'TIMEZONE_IDENTIFIER_INTL_ERROR',\n# ];\n# \n# /**\n# * @param int|array<string,mixed>|null\
    \ $zone           Restrict valid timezones to this geographical zone (defaults\
    \ to {@see \\DateTimeZone::ALL})\n# * @param string|null                  $countryCode\
    \    Restrict the valid timezones to this country if the zone option is {@see\
    \ \\DateTimeZone::PER_COUNTRY}\n# * @param bool|null                    $intlCompatible\
    \ Whether to restrict valid timezones to ones available in PHP's intl (defaults\
    \ to false)\n# * @param string[]|null                $groups\n# * @param array<string,mixed>\
    \          $options\n# *\n# * @see \\DateTimeZone"
- name: getDefaultOption
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\Validator\Constraint
- Symfony\Component\Validator\Exception\ConstraintDefinitionException
interfaces: []
