name: Ulid
class_comment: null
dependencies:
- name: Constraint
  type: class
  source: Symfony\Component\Validator\Constraint
- name: ConstraintDefinitionException
  type: class
  source: Symfony\Component\Validator\Exception\ConstraintDefinitionException
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: options
    default: 'null'
  - name: message
    default: 'null'
  - name: groups
    default: 'null'
  - name: payload
    default: 'null'
  - name: format
    default: 'null'
  comment: "# * Validates that a value is a valid Universally Unique Lexicographically\
    \ Sortable Identifier (ULID).\n# *\n# * @see https://github.com/ulid/spec\n# *\n\
    # * @author Laurent Clouet <laurent35240@gmail.com>\n# */\n# #[\\Attribute(\\\
    Attribute::TARGET_PROPERTY | \\Attribute::TARGET_METHOD | \\Attribute::IS_REPEATABLE)]\n\
    # class Ulid extends Constraint\n# {\n# public const TOO_SHORT_ERROR = '7b44804e-37d5-4df4-9bdd-b738d4a45bb4';\n\
    # public const TOO_LONG_ERROR = '9608249f-6da1-4d53-889e-9864b58c4d37';\n# public\
    \ const INVALID_CHARACTERS_ERROR = 'e4155739-5135-4258-9c81-ae7b44b5311e';\n#\
    \ public const TOO_LARGE_ERROR = 'df8cfb9a-ce6d-4a69-ae5a-eea7ab6f278b';\n# \n\
    # protected const ERROR_NAMES = [\n# self::TOO_SHORT_ERROR => 'TOO_SHORT_ERROR',\n\
    # self::TOO_LONG_ERROR => 'TOO_LONG_ERROR',\n# self::INVALID_CHARACTERS_ERROR\
    \ => 'INVALID_CHARACTERS_ERROR',\n# self::TOO_LARGE_ERROR => 'TOO_LARGE_ERROR',\n\
    # ];\n# \n# public const FORMAT_BASE_32 = 'base32';\n# public const FORMAT_BASE_58\
    \ = 'base58';\n# \n# public string $message = 'This is not a valid ULID.';\n#\
    \ public string $format = self::FORMAT_BASE_32;\n# \n# /**\n# * @param array<string,mixed>|null\
    \ $options\n# * @param string[]|null            $groups\n# * @param self::FORMAT_*|null\
    \      $format"
traits:
- Symfony\Component\Validator\Constraint
- Symfony\Component\Validator\Exception\ConstraintDefinitionException
interfaces: []
