name: UuidValidator
class_comment: '# * Validates whether the value is a valid UUID (also known as GUID).

  # *

  # * Strict validation will allow a UUID as specified per RFC 4122.

  # * Loose validation will allow any type of UUID.

  # *

  # * @author Colin O''Dell <colinodell@gmail.com>

  # * @author Bernhard Schussek <bschussek@gmail.com>

  # *

  # * @see http://tools.ietf.org/html/rfc4122

  # * @see https://en.wikipedia.org/wiki/Universally_unique_identifier'
dependencies:
- name: Constraint
  type: class
  source: Symfony\Component\Validator\Constraint
- name: ConstraintValidator
  type: class
  source: Symfony\Component\Validator\ConstraintValidator
- name: UnexpectedTypeException
  type: class
  source: Symfony\Component\Validator\Exception\UnexpectedTypeException
- name: UnexpectedValueException
  type: class
  source: Symfony\Component\Validator\Exception\UnexpectedValueException
properties: []
methods:
- name: validate
  visibility: public
  parameters:
  - name: value
  - name: constraint
  comment: null
- name: validateLoose
  visibility: private
  parameters:
  - name: value
  - name: constraint
  comment: null
- name: validateStrict
  visibility: private
  parameters:
  - name: value
  - name: constraint
  comment: null
traits:
- Symfony\Component\Validator\Constraint
- Symfony\Component\Validator\ConstraintValidator
- Symfony\Component\Validator\Exception\UnexpectedTypeException
- Symfony\Component\Validator\Exception\UnexpectedValueException
interfaces: []
