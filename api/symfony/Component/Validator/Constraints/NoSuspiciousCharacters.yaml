name: NoSuspiciousCharacters
class_comment: null
dependencies:
- name: Constraint
  type: class
  source: Symfony\Component\Validator\Constraint
- name: LogicException
  type: class
  source: Symfony\Component\Validator\Exception\LogicException
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: options
    default: 'null'
  - name: restrictionLevelMessage
    default: 'null'
  - name: invisibleMessage
    default: 'null'
  - name: mixedNumbersMessage
    default: 'null'
  - name: hiddenOverlayMessage
    default: 'null'
  - name: checks
    default: 'null'
  - name: restrictionLevel
    default: 'null'
  - name: locales
    default: 'null'
  - name: groups
    default: 'null'
  - name: payload
    default: 'null'
  comment: "# * Validates that the given string does not contain characters used in\
    \ spoofing security attacks.\n# *\n# * @see https://www.php.net/manual/en/class.spoofchecker.php\n\
    # *\n# * @author Mathieu Lechat <mathieu.lechat@les-tilleuls.coop>\n# */\n# #[\\\
    Attribute(\\Attribute::TARGET_PROPERTY | \\Attribute::TARGET_METHOD | \\Attribute::IS_REPEATABLE)]\n\
    # class NoSuspiciousCharacters extends Constraint\n# {\n# public const RESTRICTION_LEVEL_ERROR\
    \ = '1ece07dc-dca2-45f1-ba47-8d7dc3a12774';\n# public const INVISIBLE_ERROR =\
    \ '6ed60e6c-179b-4e93-8a6c-667d85c6de5e';\n# public const MIXED_NUMBERS_ERROR\
    \ = '9f01fc26-3bc4-44b1-a6b1-c08e2412053a';\n# public const HIDDEN_OVERLAY_ERROR\
    \ = '56380dc5-0476-4f04-bbaa-b68cd1c2d974';\n# \n# protected const ERROR_NAMES\
    \ = [\n# self::RESTRICTION_LEVEL_ERROR => 'RESTRICTION_LEVEL_ERROR',\n# self::INVISIBLE_ERROR\
    \ => 'INVISIBLE_ERROR',\n# self::MIXED_NUMBERS_ERROR => 'MIXED_NUMBERS_ERROR',\n\
    # self::HIDDEN_OVERLAY_ERROR => 'INVALID_CASE_ERROR',\n# ];\n# \n# /**\n# * Check\
    \ a string for the presence of invisible characters such as zero-width spaces,\n\
    # * or character sequences that are likely not to display such as multiple occurrences\
    \ of the same non-spacing mark.\n# */\n# public const CHECK_INVISIBLE = 32;\n\
    # \n# /**\n# * Check that a string does not mix numbers from different numbering\
    \ systems;\n# * for example \u201C8\u201D (Digit Eight) and \u201C\u09EA\u201D\
    \ (Bengali Digit Four).\n# */\n# public const CHECK_MIXED_NUMBERS = 128;\n# \n\
    # /**\n# * Check that a string does not have a combining character following a\
    \ character in which it would be hidden;\n# * for example \u201Ci\u201D (Latin\
    \ Small Letter I) followed by a U+0307 (Combining Dot Above).\n# */\n# public\
    \ const CHECK_HIDDEN_OVERLAY = 256;\n# \n# /** @see https://unicode.org/reports/tr39/#ascii_only\
    \ */\n# public const RESTRICTION_LEVEL_ASCII = 268435456;\n# \n# /** @see https://unicode.org/reports/tr39/#single_script\
    \ */\n# public const RESTRICTION_LEVEL_SINGLE_SCRIPT = 536870912;\n# \n# /** @see\
    \ https://unicode.org/reports/tr39/#highly_restrictive */\n# public const RESTRICTION_LEVEL_HIGH\
    \ = 805306368;\n# \n# /** @see https://unicode.org/reports/tr39/#moderately_restrictive\
    \ */\n# public const RESTRICTION_LEVEL_MODERATE = 1073741824;\n# \n# /** @see\
    \ https://unicode.org/reports/tr39/#minimally_restrictive */\n# public const RESTRICTION_LEVEL_MINIMAL\
    \ = 1342177280;\n# \n# /** @see https://unicode.org/reports/tr39/#unrestricted\
    \ */\n# public const RESTRICTION_LEVEL_NONE = 1610612736;\n# \n# public string\
    \ $restrictionLevelMessage = 'This value contains characters that are not allowed\
    \ by the current restriction-level.';\n# public string $invisibleMessage = 'Using\
    \ invisible characters is not allowed.';\n# public string $mixedNumbersMessage\
    \ = 'Mixing numbers from different scripts is not allowed.';\n# public string\
    \ $hiddenOverlayMessage = 'Using hidden overlay characters is not allowed.';\n\
    # \n# public int $checks = self::CHECK_INVISIBLE | self::CHECK_MIXED_NUMBERS |\
    \ self::CHECK_HIDDEN_OVERLAY;\n# public ?int $restrictionLevel = null;\n# public\
    \ ?array $locales = null;\n# \n# /**\n# * @param array<string,mixed>|null    \
    \                $options\n# * @param int-mask-of<self::CHECK_*>|null        \
    \     $checks           A bitmask of the checks to perform on the string (defaults\
    \ to all checks)\n# * @param int-mask-of<self::RESTRICTION_LEVEL_*>|null $restrictionLevel\
    \ Configures the set of acceptable characters for the validated string through\
    \ a specified \"level\" (defaults to\n# *                                    \
    \                                  {@see NoSuspiciousCharacters::RESTRICTION_LEVEL_MODERATE}\
    \ on ICU >= 58, {@see NoSuspiciousCharacters::RESTRICTION_LEVEL_SINGLE_SCRIPT}\
    \ otherwise)\n# * @param string[]|null                               $locales\
    \          Restrict the string's characters to those normally used with these\
    \ locales. Pass null to use the default locales configured for the NoSuspiciousCharactersValidator.\
    \ (defaults to null)\n# * @param string[]|null                               $groups"
traits:
- Symfony\Component\Validator\Constraint
- Symfony\Component\Validator\Exception\LogicException
interfaces: []
