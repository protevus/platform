name: Range
class_comment: null
dependencies:
- name: PropertyAccess
  type: class
  source: Symfony\Component\PropertyAccess\PropertyAccess
- name: Constraint
  type: class
  source: Symfony\Component\Validator\Constraint
- name: ConstraintDefinitionException
  type: class
  source: Symfony\Component\Validator\Exception\ConstraintDefinitionException
- name: LogicException
  type: class
  source: Symfony\Component\Validator\Exception\LogicException
- name: MissingOptionsException
  type: class
  source: Symfony\Component\Validator\Exception\MissingOptionsException
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: options
    default: 'null'
  - name: notInRangeMessage
    default: 'null'
  - name: minMessage
    default: 'null'
  - name: maxMessage
    default: 'null'
  - name: invalidMessage
    default: 'null'
  - name: invalidDateTimeMessage
    default: 'null'
  - name: min
    default: 'null'
  - name: minPropertyPath
    default: 'null'
  - name: max
    default: 'null'
  - name: maxPropertyPath
    default: 'null'
  - name: groups
    default: 'null'
  - name: payload
    default: 'null'
  comment: "# * Validates that a given number or DateTime object is between some minimum\
    \ and maximum.\n# *\n# * @author Bernhard Schussek <bschussek@gmail.com>\n# */\n\
    # #[\\Attribute(\\Attribute::TARGET_PROPERTY | \\Attribute::TARGET_METHOD | \\\
    Attribute::IS_REPEATABLE)]\n# class Range extends Constraint\n# {\n# public const\
    \ INVALID_CHARACTERS_ERROR = 'ad9a9798-7a99-4df7-8ce9-46e416a1e60b';\n# public\
    \ const NOT_IN_RANGE_ERROR = '04b91c99-a946-4221-afc5-e65ebac401eb';\n# public\
    \ const TOO_HIGH_ERROR = '2d28afcb-e32e-45fb-a815-01c431a86a69';\n# public const\
    \ TOO_LOW_ERROR = '76454e69-502c-46c5-9643-f447d837c4d5';\n# \n# protected const\
    \ ERROR_NAMES = [\n# self::INVALID_CHARACTERS_ERROR => 'INVALID_CHARACTERS_ERROR',\n\
    # self::NOT_IN_RANGE_ERROR => 'NOT_IN_RANGE_ERROR',\n# self::TOO_HIGH_ERROR =>\
    \ 'TOO_HIGH_ERROR',\n# self::TOO_LOW_ERROR => 'TOO_LOW_ERROR',\n# ];\n# \n# public\
    \ string $notInRangeMessage = 'This value should be between {{ min }} and {{ max\
    \ }}.';\n# public string $minMessage = 'This value should be {{ limit }} or more.';\n\
    # public string $maxMessage = 'This value should be {{ limit }} or less.';\n#\
    \ public string $invalidMessage = 'This value should be a valid number.';\n# public\
    \ string $invalidDateTimeMessage = 'This value should be a valid datetime.';\n\
    # public mixed $min = null;\n# public ?string $minPropertyPath = null;\n# public\
    \ mixed $max = null;\n# public ?string $maxPropertyPath = null;\n# \n# /**\n#\
    \ * @param array<string,mixed>|null $options\n# * @param string|null         \
    \     $invalidMessage         The message if min and max values are numeric but\
    \ the given value is not\n# * @param string|null              $invalidDateTimeMessage\
    \ The message if min and max values are PHP datetimes but the given value is not\n\
    # * @param int|float|string|null    $min                    The minimum value,\
    \ either numeric or a datetime string representation\n# * @param string|null \
    \             $minPropertyPath        Property path to the min value\n# * @param\
    \ int|float|string|null    $max                    The maximum value, either numeric\
    \ or a datetime string representation\n# * @param string|null              $maxPropertyPath\
    \        Property path to the max value\n# * @param string[]|null            $groups"
traits:
- Symfony\Component\PropertyAccess\PropertyAccess
- Symfony\Component\Validator\Constraint
- Symfony\Component\Validator\Exception\ConstraintDefinitionException
- Symfony\Component\Validator\Exception\LogicException
- Symfony\Component\Validator\Exception\MissingOptionsException
interfaces: []
