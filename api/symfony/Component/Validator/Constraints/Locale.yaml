name: Locale
class_comment: null
dependencies:
- name: Locales
  type: class
  source: Symfony\Component\Intl\Locales
- name: Constraint
  type: class
  source: Symfony\Component\Validator\Constraint
- name: LogicException
  type: class
  source: Symfony\Component\Validator\Exception\LogicException
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: options
    default: 'null'
  - name: message
    default: 'null'
  - name: canonicalize
    default: 'null'
  - name: groups
    default: 'null'
  - name: payload
    default: 'null'
  comment: "# * Validates that a value is a valid locale (e.g. fr, fr_FR, etc.).\n\
    # *\n# * @see https://unicode-org.github.io/icu/userguide/locale/\n# *\n# * @author\
    \ Bernhard Schussek <bschussek@gmail.com>\n# */\n# #[\\Attribute(\\Attribute::TARGET_PROPERTY\
    \ | \\Attribute::TARGET_METHOD | \\Attribute::IS_REPEATABLE)]\n# class Locale\
    \ extends Constraint\n# {\n# public const NO_SUCH_LOCALE_ERROR = 'a0af4293-1f1a-4a1c-a328-979cba6182a2';\n\
    # \n# protected const ERROR_NAMES = [\n# self::NO_SUCH_LOCALE_ERROR => 'NO_SUCH_LOCALE_ERROR',\n\
    # ];\n# \n# public string $message = 'This value is not a valid locale.';\n# public\
    \ bool $canonicalize = true;\n# \n# /**\n# * @param array<string,mixed>|null $options\n\
    # * @param bool|null                $canonicalize Whether to canonicalize the\
    \ value before validation (defaults to true) (see {@see https://www.php.net/manual/en/locale.canonicalize.php})\n\
    # * @param string[]|null            $groups"
traits:
- Symfony\Component\Intl\Locales
- Symfony\Component\Validator\Constraint
- Symfony\Component\Validator\Exception\LogicException
interfaces: []
