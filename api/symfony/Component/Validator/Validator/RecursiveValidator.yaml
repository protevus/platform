name: RecursiveValidator
class_comment: '# * Recursive implementation of {@link ValidatorInterface}.

  # *

  # * @author Bernhard Schussek <bschussek@gmail.com>'
dependencies:
- name: ContainerInterface
  type: class
  source: Psr\Container\ContainerInterface
- name: Constraint
  type: class
  source: Symfony\Component\Validator\Constraint
- name: GroupSequence
  type: class
  source: Symfony\Component\Validator\Constraints\GroupSequence
- name: ConstraintValidatorFactoryInterface
  type: class
  source: Symfony\Component\Validator\ConstraintValidatorFactoryInterface
- name: ConstraintViolationListInterface
  type: class
  source: Symfony\Component\Validator\ConstraintViolationListInterface
- name: ExecutionContextFactoryInterface
  type: class
  source: Symfony\Component\Validator\Context\ExecutionContextFactoryInterface
- name: ExecutionContextInterface
  type: class
  source: Symfony\Component\Validator\Context\ExecutionContextInterface
- name: MetadataFactoryInterface
  type: class
  source: Symfony\Component\Validator\Mapping\Factory\MetadataFactoryInterface
- name: MetadataInterface
  type: class
  source: Symfony\Component\Validator\Mapping\MetadataInterface
- name: ObjectInitializerInterface
  type: class
  source: Symfony\Component\Validator\ObjectInitializerInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: contextFactory
  - name: metadataFactory
  - name: validatorFactory
  - name: objectInitializers
    default: '[]'
  - name: groupProviderLocator
    default: 'null'
  comment: '# * Recursive implementation of {@link ValidatorInterface}.

    # *

    # * @author Bernhard Schussek <bschussek@gmail.com>

    # */

    # class RecursiveValidator implements ValidatorInterface

    # {

    # /**

    # * Creates a new validator.

    # *

    # * @param ObjectInitializerInterface[] $objectInitializers The object initializers'
- name: startContext
  visibility: public
  parameters:
  - name: root
    default: 'null'
  comment: null
- name: inContext
  visibility: public
  parameters:
  - name: context
  comment: null
- name: getMetadataFor
  visibility: public
  parameters:
  - name: object
  comment: null
- name: hasMetadataFor
  visibility: public
  parameters:
  - name: object
  comment: null
- name: validate
  visibility: public
  parameters:
  - name: value
  - name: constraints
    default: 'null'
  - name: groups
    default: 'null'
  comment: null
- name: validateProperty
  visibility: public
  parameters:
  - name: object
  - name: propertyName
  - name: groups
    default: 'null'
  comment: null
- name: validatePropertyValue
  visibility: public
  parameters:
  - name: objectOrClass
  - name: propertyName
  - name: value
  - name: groups
    default: 'null'
  comment: null
traits:
- Psr\Container\ContainerInterface
- Symfony\Component\Validator\Constraint
- Symfony\Component\Validator\Constraints\GroupSequence
- Symfony\Component\Validator\ConstraintValidatorFactoryInterface
- Symfony\Component\Validator\ConstraintViolationListInterface
- Symfony\Component\Validator\Context\ExecutionContextFactoryInterface
- Symfony\Component\Validator\Context\ExecutionContextInterface
- Symfony\Component\Validator\Mapping\Factory\MetadataFactoryInterface
- Symfony\Component\Validator\Mapping\MetadataInterface
- Symfony\Component\Validator\ObjectInitializerInterface
interfaces:
- ValidatorInterface
