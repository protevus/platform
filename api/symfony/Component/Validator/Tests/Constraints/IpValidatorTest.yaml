name: IpValidatorTest
class_comment: null
dependencies:
- name: Ip
  type: class
  source: Symfony\Component\Validator\Constraints\Ip
- name: IpValidator
  type: class
  source: Symfony\Component\Validator\Constraints\IpValidator
- name: ConstraintDefinitionException
  type: class
  source: Symfony\Component\Validator\Exception\ConstraintDefinitionException
- name: UnexpectedValueException
  type: class
  source: Symfony\Component\Validator\Exception\UnexpectedValueException
- name: ConstraintValidatorTestCase
  type: class
  source: Symfony\Component\Validator\Test\ConstraintValidatorTestCase
properties: []
methods:
- name: createValidator
  visibility: protected
  parameters: []
  comment: null
- name: testNullIsValid
  visibility: public
  parameters: []
  comment: null
- name: testEmptyStringIsValid
  visibility: public
  parameters: []
  comment: null
- name: testExpectsStringCompatibleType
  visibility: public
  parameters: []
  comment: null
- name: testInvalidValidatorVersion
  visibility: public
  parameters: []
  comment: null
- name: testValidIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidIpsV4'
- name: getValidIpsV4
  visibility: public
  parameters: []
  comment: null
- name: testValidIpsV4WithWhitespaces
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidIpsV4WithWhitespaces'
- name: testValidIpV6WithWhitespacesNamed
  visibility: public
  parameters: []
  comment: null
- name: getValidIpsV4WithWhitespaces
  visibility: public
  parameters: []
  comment: null
- name: testValidIpsV6
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidIpsV6'
- name: getValidIpsV6
  visibility: public
  parameters: []
  comment: null
- name: testValidIpsAll
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidIpsAll'
- name: getValidIpsAll
  visibility: public
  parameters: []
  comment: null
- name: testInvalidIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidIpsV4'
- name: testInvalidNoPublicIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidPublicIpsV4'
- name: getValidPublicIpsV4
  visibility: public
  parameters: []
  comment: null
- name: getInvalidIpsV4
  visibility: public
  parameters: []
  comment: null
- name: testValidPrivateIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidPrivateIpsV4'
- name: testInvalidPrivateIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidPrivateIpsV4'
- name: testInvalidOnlyPrivateIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidPrivateIpsV4'
- name: getValidPrivateIpsV4
  visibility: public
  parameters: []
  comment: null
- name: getInvalidPrivateIpsV4
  visibility: public
  parameters: []
  comment: null
- name: testValidReservedIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidReservedIpsV4'
- name: testInvalidReservedIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getValidReservedIpsV4'
- name: testInvalidOnlyReservedIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidReservedIpsV4'
- name: getValidReservedIpsV4
  visibility: public
  parameters: []
  comment: null
- name: getInvalidReservedIpsV4
  visibility: public
  parameters: []
  comment: null
- name: testInvalidPublicIpsV4
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidPublicIpsV4'
- name: getInvalidPublicIpsV4
  visibility: public
  parameters: []
  comment: null
- name: testInvalidIpsV6
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidIpsV6'
- name: getInvalidIpsV6
  visibility: public
  parameters: []
  comment: null
- name: testInvalidPrivateIpsV6
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidPrivateIpsV6'
- name: getInvalidPrivateIpsV6
  visibility: public
  parameters: []
  comment: null
- name: testInvalidReservedIpsV6
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidReservedIpsV6'
- name: getInvalidReservedIpsV6
  visibility: public
  parameters: []
  comment: null
- name: testInvalidPublicIpsV6
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidPublicIpsV6'
- name: getInvalidPublicIpsV6
  visibility: public
  parameters: []
  comment: null
- name: testInvalidIpsAll
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidIpsAll'
- name: getInvalidIpsAll
  visibility: public
  parameters: []
  comment: null
- name: testInvalidPrivateIpsAll
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidPrivateIpsAll'
- name: getInvalidPrivateIpsAll
  visibility: public
  parameters: []
  comment: null
- name: testInvalidReservedIpsAll
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidReservedIpsAll'
- name: getInvalidReservedIpsAll
  visibility: public
  parameters: []
  comment: null
- name: testInvalidPublicIpsAll
  visibility: public
  parameters:
  - name: ip
  comment: '# * @dataProvider getInvalidPublicIpsAll'
- name: getInvalidPublicIpsAll
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\Validator\Constraints\Ip
- Symfony\Component\Validator\Constraints\IpValidator
- Symfony\Component\Validator\Exception\ConstraintDefinitionException
- Symfony\Component\Validator\Exception\UnexpectedValueException
- Symfony\Component\Validator\Test\ConstraintValidatorTestCase
interfaces: []
