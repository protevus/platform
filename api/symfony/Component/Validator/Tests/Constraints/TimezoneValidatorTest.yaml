name: TimezoneValidatorTest
class_comment: '# * @author Javier Spagnoletti <phansys@gmail.com>

  # * @author Hugo Hamon <hugohamon@neuf.fr>'
dependencies:
- name: Timezone
  type: class
  source: Symfony\Component\Validator\Constraints\Timezone
- name: TimezoneValidator
  type: class
  source: Symfony\Component\Validator\Constraints\TimezoneValidator
- name: UnexpectedValueException
  type: class
  source: Symfony\Component\Validator\Exception\UnexpectedValueException
- name: ConstraintValidatorTestCase
  type: class
  source: Symfony\Component\Validator\Test\ConstraintValidatorTestCase
properties: []
methods:
- name: testValidTimezones
  visibility: public
  parameters:
  - name: timezone
  comment: "# * @author Javier Spagnoletti <phansys@gmail.com>\n# * @author Hugo Hamon\
    \ <hugohamon@neuf.fr>\n# */\n# class TimezoneValidatorTest extends ConstraintValidatorTestCase\n\
    # {\n# protected function createValidator(): TimezoneValidator\n# {\n# return\
    \ new TimezoneValidator();\n# }\n# \n# public function testNullIsValid()\n# {\n\
    # $this->validator->validate(null, new Timezone());\n# \n# $this->assertNoViolation();\n\
    # }\n# \n# public function testEmptyStringIsValid()\n# {\n# $this->validator->validate('',\
    \ new Timezone());\n# \n# $this->assertNoViolation();\n# }\n# \n# public function\
    \ testExpectsStringCompatibleType()\n# {\n# $this->expectException(UnexpectedValueException::class);\n\
    # $this->validator->validate(new \\stdClass(), new Timezone());\n# }\n# \n# /**\n\
    # * @dataProvider getValidTimezones"
- name: getValidTimezones
  visibility: public
  parameters: []
  comment: null
- name: testValidGroupedTimezones
  visibility: public
  parameters:
  - name: timezone
  - name: zone
  comment: '# * @dataProvider getValidGroupedTimezones'
- name: getValidGroupedTimezones
  visibility: public
  parameters: []
  comment: null
- name: testInvalidTimezoneWithoutZone
  visibility: public
  parameters:
  - name: timezone
  comment: '# * @dataProvider getInvalidTimezones'
- name: getInvalidTimezones
  visibility: public
  parameters: []
  comment: null
- name: testInvalidGroupedTimezones
  visibility: public
  parameters:
  - name: timezone
  - name: zone
  comment: '# * @dataProvider getInvalidGroupedTimezones'
- name: getInvalidGroupedTimezones
  visibility: public
  parameters: []
  comment: null
- name: testInvalidGroupedTimezoneNamed
  visibility: public
  parameters: []
  comment: null
- name: testValidGroupedTimezonesByCountry
  visibility: public
  parameters:
  - name: timezone
  - name: country
  comment: '# * @dataProvider getValidGroupedTimezonesByCountry'
- name: getValidGroupedTimezonesByCountry
  visibility: public
  parameters: []
  comment: null
- name: testInvalidGroupedTimezonesByCountry
  visibility: public
  parameters:
  - name: timezone
  - name: countryCode
  comment: '# * @dataProvider getInvalidGroupedTimezonesByCountry'
- name: getInvalidGroupedTimezonesByCountry
  visibility: public
  parameters: []
  comment: null
- name: testGroupedTimezonesWithInvalidCountry
  visibility: public
  parameters: []
  comment: null
- name: testDeprecatedTimezonesAreValidWithBC
  visibility: public
  parameters:
  - name: timezone
  comment: '# * @dataProvider getDeprecatedTimezones'
- name: testDeprecatedTimezonesAreInvalidWithoutBC
  visibility: public
  parameters:
  - name: timezone
  comment: '# * @dataProvider getDeprecatedTimezones'
- name: getDeprecatedTimezones
  visibility: public
  parameters: []
  comment: null
- name: testIntlCompatibility
  visibility: public
  parameters: []
  comment: '# * @requires extension intl'
traits:
- Symfony\Component\Validator\Constraints\Timezone
- Symfony\Component\Validator\Constraints\TimezoneValidator
- Symfony\Component\Validator\Exception\UnexpectedValueException
- Symfony\Component\Validator\Test\ConstraintValidatorTestCase
interfaces: []
