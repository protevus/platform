name: MetadataInterface
class_comment: null
dependencies:
- name: Constraint
  type: class
  source: Symfony\Component\Validator\Constraint
properties: []
methods:
- name: getCascadingStrategy
  visibility: public
  parameters: []
  comment: '# * A container for validation metadata.

    # *

    # * Most importantly, the metadata stores the constraints against which an object

    # * and its properties should be validated.

    # *

    # * Additionally, the metadata stores whether objects should be validated

    # * against their class'' metadata and whether traversable objects should be

    # * traversed or not.

    # *

    # * @author Bernhard Schussek <bschussek@gmail.com>

    # *

    # * @see CascadingStrategy

    # * @see TraversalStrategy

    # */

    # interface MetadataInterface

    # {

    # /**

    # * Returns the strategy for cascading objects.

    # *

    # * @see CascadingStrategy'
- name: getTraversalStrategy
  visibility: public
  parameters: []
  comment: '# * Returns the strategy for traversing traversable objects.

    # *

    # * @see TraversalStrategy'
- name: getConstraints
  visibility: public
  parameters: []
  comment: '# * Returns all constraints of this element.

    # *

    # * @return Constraint[]'
- name: findConstraints
  visibility: public
  parameters:
  - name: group
  comment: '# * Returns all constraints for a given validation group.

    # *

    # * @param string $group The validation group

    # *

    # * @return Constraint[]'
traits:
- Symfony\Component\Validator\Constraint
interfaces: []
