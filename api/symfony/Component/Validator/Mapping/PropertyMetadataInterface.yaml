name: PropertyMetadataInterface
class_comment: null
dependencies: []
properties: []
methods:
- name: getPropertyName
  visibility: public
  parameters: []
  comment: '# * Stores all metadata needed for validating the value of a class property.

    # *

    # * Most importantly, the metadata stores the constraints against which the

    # * property''s value should be validated.

    # *

    # * Additionally, the metadata stores whether objects stored in the property

    # * should be validated against their class'' metadata and whether traversable

    # * objects should be traversed or not.

    # *

    # * @author Bernhard Schussek <bschussek@gmail.com>

    # *

    # * @see MetadataInterface

    # * @see CascadingStrategy

    # * @see TraversalStrategy

    # */

    # interface PropertyMetadataInterface extends MetadataInterface

    # {

    # /**

    # * Returns the name of the property.'
- name: getPropertyValue
  visibility: public
  parameters:
  - name: containingValue
  comment: '# * Extracts the value of the property from the given container.'
traits: []
interfaces: []
