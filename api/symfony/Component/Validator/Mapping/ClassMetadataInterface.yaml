name: ClassMetadataInterface
class_comment: null
dependencies:
- name: GroupSequence
  type: class
  source: Symfony\Component\Validator\Constraints\GroupSequence
- name: GroupSequenceProviderInterface
  type: class
  source: Symfony\Component\Validator\GroupSequenceProviderInterface
properties: []
methods:
- name: getConstrainedProperties
  visibility: public
  parameters: []
  comment: '# * Stores all metadata needed for validating objects of specific class.

    # *

    # * Most importantly, the metadata stores the constraints against which an object

    # * and its properties should be validated.

    # *

    # * Additionally, the metadata stores whether the "Default" group is overridden

    # * by a group sequence for that class and whether instances of that class

    # * should be traversed or not.

    # *

    # * @author Bernhard Schussek <bschussek@gmail.com>

    # *

    # * @see MetadataInterface

    # * @see GroupSequence

    # * @see GroupSequenceProviderInterface

    # * @see TraversalStrategy

    # *

    # * @method string|null getGroupProvider()

    # */

    # interface ClassMetadataInterface extends MetadataInterface

    # {

    # /**

    # * Returns the names of all constrained properties.

    # *

    # * @return string[]'
- name: hasGroupSequence
  visibility: public
  parameters: []
  comment: '# * Returns whether the "Default" group is overridden by a group sequence.

    # *

    # * If it is, you can access the group sequence with {@link getGroupSequence()}.'
- name: getGroupSequence
  visibility: public
  parameters: []
  comment: '# * Returns the group sequence that overrides the "Default" group for
    this

    # * class.'
- name: isGroupSequenceProvider
  visibility: public
  parameters: []
  comment: '# * Returns whether the "Default" group is overridden by a dynamic group

    # * sequence obtained by the validated objects.

    # *

    # * If this method returns true, the class must implement

    # * {@link GroupSequenceProviderInterface}.

    # * This interface will be used to obtain the group sequence when an object

    # * of this class is validated.'
- name: hasPropertyMetadata
  visibility: public
  parameters:
  - name: property
  comment: '# * Check if there''s any metadata attached to the given named property.

    # *

    # * @param string $property The property name'
- name: getPropertyMetadata
  visibility: public
  parameters:
  - name: property
  comment: '# * Returns all metadata instances for the given named property.

    # *

    # * If your implementation does not support properties, throw an exception

    # * in this method (for example a <tt>BadMethodCallException</tt>).

    # *

    # * @param string $property The property name

    # *

    # * @return PropertyMetadataInterface[]'
- name: getClassName
  visibility: public
  parameters: []
  comment: '# * Returns the name of the backing PHP class.'
traits:
- Symfony\Component\Validator\Constraints\GroupSequence
- Symfony\Component\Validator\GroupSequenceProviderInterface
interfaces: []
