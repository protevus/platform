name: FormTypeInterface
class_comment: null
dependencies:
- name: OptionsResolver
  type: class
  source: Symfony\Component\OptionsResolver\OptionsResolver
properties: []
methods:
- name: getParent
  visibility: public
  parameters: []
  comment: '# * @author Bernhard Schussek <bschussek@gmail.com>

    # */

    # interface FormTypeInterface

    # {

    # /**

    # * Returns the name of the parent type.

    # *

    # * The parent type and its extensions will configure the form with the

    # * following methods before the current implementation.

    # *

    # * @return string|null'
- name: configureOptions
  visibility: public
  parameters:
  - name: resolver
  comment: '# * Configures the options for this type.

    # *

    # * @return void'
- name: buildForm
  visibility: public
  parameters:
  - name: builder
  - name: options
  comment: '# * Builds the form.

    # *

    # * This method is called for each type in the hierarchy starting from the

    # * top most type. Type extensions can further modify the form.

    # *

    # * @param array<string, mixed> $options

    # *

    # * @return void

    # *

    # * @see FormTypeExtensionInterface::buildForm()'
- name: buildView
  visibility: public
  parameters:
  - name: view
  - name: form
  - name: options
  comment: '# * Builds the form view.

    # *

    # * This method is called for each type in the hierarchy starting from the

    # * top most type. Type extensions can further modify the view.

    # *

    # * A view of a form is built before the views of the child forms are built.

    # * This means that you cannot access child views in this method. If you need

    # * to do so, move your logic to {@link finishView()} instead.

    # *

    # * @param array<string, mixed> $options

    # *

    # * @return void

    # *

    # * @see FormTypeExtensionInterface::buildView()'
- name: finishView
  visibility: public
  parameters:
  - name: view
  - name: form
  - name: options
  comment: '# * Finishes the form view.

    # *

    # * This method gets called for each type in the hierarchy starting from the

    # * top most type. Type extensions can further modify the view.

    # *

    # * When this method is called, views of the form''s children have already

    # * been built and finished and can be accessed. You should only implement

    # * such logic in this method that actually accesses child views. For everything

    # * else you are recommended to implement {@link buildView()} instead.

    # *

    # * @param array<string, mixed> $options

    # *

    # * @return void

    # *

    # * @see FormTypeExtensionInterface::finishView()'
- name: getBlockPrefix
  visibility: public
  parameters: []
  comment: '# * Returns the prefix of the template block name for this type.

    # *

    # * The block prefix defaults to the underscored short class name with

    # * the "Type" suffix removed (e.g. "UserProfileType" => "user_profile").

    # *

    # * @return string'
traits:
- Symfony\Component\OptionsResolver\OptionsResolver
interfaces: []
