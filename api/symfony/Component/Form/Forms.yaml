name: Forms
class_comment: null
dependencies:
- name: Forms
  type: class
  source: Symfony\Component\Form\Forms
- name: Validation
  type: class
  source: Symfony\Component\Validator\Validation
- name: ValidatorExtension
  type: class
  source: Symfony\Component\Form\Extension\Validator\ValidatorExtension
properties: []
methods:
- name: createFormFactory
  visibility: public
  parameters: []
  comment: '# * Entry point of the Form component.

    # *

    # * Use this class to conveniently create new form factories:

    # *

    # *     use Symfony\Component\Form\Forms;

    # *

    # *     $formFactory = Forms::createFormFactory();

    # *

    # *     $form = $formFactory->createBuilder()

    # *         ->add(''firstName'', ''Symfony\Component\Form\Extension\Core\Type\TextType'')

    # *         ->add(''lastName'', ''Symfony\Component\Form\Extension\Core\Type\TextType'')

    # *         ->add(''age'', ''Symfony\Component\Form\Extension\Core\Type\IntegerType'')

    # *         ->add(''color'', ''Symfony\Component\Form\Extension\Core\Type\ChoiceType'',
    [

    # *             ''choices'' => [''Red'' => ''r'', ''Blue'' => ''b''],

    # *         ])

    # *         ->getForm();

    # *

    # * You can also add custom extensions to the form factory:

    # *

    # *     $formFactory = Forms::createFormFactoryBuilder()

    # *         ->addExtension(new AcmeExtension())

    # *         ->getFormFactory();

    # *

    # * If you create custom form types or type extensions, it is

    # * generally recommended to create your own extensions that lazily

    # * load these types and type extensions. In projects where performance

    # * does not matter that much, you can also pass them directly to the

    # * form factory:

    # *

    # *     $formFactory = Forms::createFormFactoryBuilder()

    # *         ->addType(new PersonType())

    # *         ->addType(new PhoneNumberType())

    # *         ->addTypeExtension(new FormTypeHelpTextExtension())

    # *         ->getFormFactory();

    # *

    # * Support for the Validator component is provided by ValidatorExtension.

    # * This extension needs a validator object to function properly:

    # *

    # *     use Symfony\Component\Validator\Validation;

    # *     use Symfony\Component\Form\Extension\Validator\ValidatorExtension;

    # *

    # *     $validator = Validation::createValidator();

    # *     $formFactory = Forms::createFormFactoryBuilder()

    # *         ->addExtension(new ValidatorExtension($validator))

    # *         ->getFormFactory();

    # *

    # * @author Bernhard Schussek <bschussek@gmail.com>

    # */

    # final class Forms

    # {

    # /**

    # * Creates a form factory with the default configuration.'
- name: createFormFactoryBuilder
  visibility: public
  parameters: []
  comment: '# * Creates a form factory builder with the default configuration.'
- name: __construct
  visibility: private
  parameters: []
  comment: '# * This class cannot be instantiated.'
traits:
- Symfony\Component\Form\Forms
- Symfony\Component\Validator\Validation
- Symfony\Component\Form\Extension\Validator\ValidatorExtension
interfaces: []
