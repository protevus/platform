name: FormError
class_comment: '# * Wraps errors in forms.

  # *

  # * @author Bernhard Schussek <bschussek@gmail.com>'
dependencies:
- name: BadMethodCallException
  type: class
  source: Symfony\Component\Form\Exception\BadMethodCallException
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: message
  - name: messageTemplate
    default: 'null'
  - name: messageParameters
    default: '[]'
  - name: messagePluralization
    default: 'null'
  - name: cause
    default: 'null'
  comment: "# * Wraps errors in forms.\n# *\n# * @author Bernhard Schussek <bschussek@gmail.com>\n\
    # */\n# class FormError\n# {\n# protected string $messageTemplate;\n# \n# /**\n\
    # * The form that spawned this error.\n# */\n# private ?FormInterface $origin\
    \ = null;\n# \n# /**\n# * Any array key in $messageParameters will be used as\
    \ a placeholder in\n# * $messageTemplate.\n# *\n# * @param string      $message\
    \              The translated error message\n# * @param string|null $messageTemplate\
    \      The template for the error message\n# * @param array       $messageParameters\
    \    The parameters that should be\n# *                                      \
    \    substituted in the message template\n# * @param int|null    $messagePluralization\
    \ The value for error message pluralization\n# * @param mixed       $cause   \
    \             The cause of the error\n# *\n# * @see \\Symfony\\Component\\Translation\\\
    Translator"
- name: getMessage
  visibility: public
  parameters: []
  comment: '# * Returns the error message.'
- name: getMessageTemplate
  visibility: public
  parameters: []
  comment: '# * Returns the error message template.'
- name: getMessageParameters
  visibility: public
  parameters: []
  comment: '# * Returns the parameters to be inserted in the message template.'
- name: getMessagePluralization
  visibility: public
  parameters: []
  comment: '# * Returns the value for error message pluralization.'
- name: getCause
  visibility: public
  parameters: []
  comment: '# * Returns the cause of this error.'
- name: setOrigin
  visibility: public
  parameters:
  - name: origin
  comment: '# * Sets the form that caused this error.

    # *

    # * This method must only be called once.

    # *

    # * @throws BadMethodCallException If the method is called more than once'
- name: getOrigin
  visibility: public
  parameters: []
  comment: '# * Returns the form that caused this error.'
traits:
- Symfony\Component\Form\Exception\BadMethodCallException
interfaces: []
