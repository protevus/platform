name: FormConfigBuilder
class_comment: '# * A basic form configuration.

  # *

  # * @author Bernhard Schussek <bschussek@gmail.com>'
dependencies:
- name: EventDispatcherInterface
  type: class
  source: Symfony\Component\EventDispatcher\EventDispatcherInterface
- name: EventSubscriberInterface
  type: class
  source: Symfony\Component\EventDispatcher\EventSubscriberInterface
- name: ImmutableEventDispatcher
  type: class
  source: Symfony\Component\EventDispatcher\ImmutableEventDispatcher
- name: BadMethodCallException
  type: class
  source: Symfony\Component\Form\Exception\BadMethodCallException
- name: InvalidArgumentException
  type: class
  source: Symfony\Component\Form\Exception\InvalidArgumentException
- name: PropertyPath
  type: class
  source: Symfony\Component\PropertyAccess\PropertyPath
- name: PropertyPathInterface
  type: class
  source: Symfony\Component\PropertyAccess\PropertyPathInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: name
  - name: dataClass
  - name: dispatcher
  - name: options
    default: '[]'
  comment: "# * A basic form configuration.\n# *\n# * @author Bernhard Schussek <bschussek@gmail.com>\n\
    # */\n# class FormConfigBuilder implements FormConfigBuilderInterface\n# {\n#\
    \ protected bool $locked = false;\n# \n# /**\n# * Caches a globally unique {@link\
    \ NativeRequestHandler} instance.\n# */\n# private static NativeRequestHandler\
    \ $nativeRequestHandler;\n# \n# private string $name;\n# private ?PropertyPathInterface\
    \ $propertyPath = null;\n# private bool $mapped = true;\n# private bool $byReference\
    \ = true;\n# private bool $inheritData = false;\n# private bool $compound = false;\n\
    # private ResolvedFormTypeInterface $type;\n# private array $viewTransformers\
    \ = [];\n# private array $modelTransformers = [];\n# private ?DataMapperInterface\
    \ $dataMapper = null;\n# private bool $required = true;\n# private bool $disabled\
    \ = false;\n# private bool $errorBubbling = false;\n# private mixed $emptyData\
    \ = null;\n# private array $attributes = [];\n# private mixed $data = null;\n\
    # private ?string $dataClass;\n# private bool $dataLocked = false;\n# private\
    \ FormFactoryInterface $formFactory;\n# private string $action = '';\n# private\
    \ string $method = 'POST';\n# private RequestHandlerInterface $requestHandler;\n\
    # private bool $autoInitialize = false;\n# private ?\\Closure $isEmptyCallback\
    \ = null;\n# \n# /**\n# * Creates an empty form configuration.\n# *\n# * @param\
    \ string|null $name      The form name\n# * @param string|null $dataClass The\
    \ class of the form's data\n# *\n# * @throws InvalidArgumentException if the data\
    \ class is not a valid class or if\n# *                                  the name\
    \ contains invalid characters"
- name: addEventListener
  visibility: public
  parameters:
  - name: eventName
  - name: listener
  - name: priority
    default: '0'
  comment: null
- name: addEventSubscriber
  visibility: public
  parameters:
  - name: subscriber
  comment: null
- name: addViewTransformer
  visibility: public
  parameters:
  - name: viewTransformer
  - name: forcePrepend
    default: 'false'
  comment: null
- name: resetViewTransformers
  visibility: public
  parameters: []
  comment: null
- name: addModelTransformer
  visibility: public
  parameters:
  - name: modelTransformer
  - name: forceAppend
    default: 'false'
  comment: null
- name: resetModelTransformers
  visibility: public
  parameters: []
  comment: null
- name: getEventDispatcher
  visibility: public
  parameters: []
  comment: null
- name: getName
  visibility: public
  parameters: []
  comment: null
- name: getPropertyPath
  visibility: public
  parameters: []
  comment: null
- name: getMapped
  visibility: public
  parameters: []
  comment: null
- name: getByReference
  visibility: public
  parameters: []
  comment: null
- name: getInheritData
  visibility: public
  parameters: []
  comment: null
- name: getCompound
  visibility: public
  parameters: []
  comment: null
- name: getType
  visibility: public
  parameters: []
  comment: null
- name: getViewTransformers
  visibility: public
  parameters: []
  comment: null
- name: getModelTransformers
  visibility: public
  parameters: []
  comment: null
- name: getDataMapper
  visibility: public
  parameters: []
  comment: null
- name: getRequired
  visibility: public
  parameters: []
  comment: null
- name: getDisabled
  visibility: public
  parameters: []
  comment: null
- name: getErrorBubbling
  visibility: public
  parameters: []
  comment: null
- name: getEmptyData
  visibility: public
  parameters: []
  comment: null
- name: getAttributes
  visibility: public
  parameters: []
  comment: null
- name: hasAttribute
  visibility: public
  parameters:
  - name: name
  comment: null
- name: getAttribute
  visibility: public
  parameters:
  - name: name
  - name: default
    default: 'null'
  comment: null
- name: getData
  visibility: public
  parameters: []
  comment: null
- name: getDataClass
  visibility: public
  parameters: []
  comment: null
- name: getDataLocked
  visibility: public
  parameters: []
  comment: null
- name: getFormFactory
  visibility: public
  parameters: []
  comment: null
- name: getAction
  visibility: public
  parameters: []
  comment: null
- name: getMethod
  visibility: public
  parameters: []
  comment: null
- name: getRequestHandler
  visibility: public
  parameters: []
  comment: null
- name: getAutoInitialize
  visibility: public
  parameters: []
  comment: null
- name: getOptions
  visibility: public
  parameters: []
  comment: null
- name: hasOption
  visibility: public
  parameters:
  - name: name
  comment: null
- name: getOption
  visibility: public
  parameters:
  - name: name
  - name: default
    default: 'null'
  comment: null
- name: getIsEmptyCallback
  visibility: public
  parameters: []
  comment: null
- name: setAttribute
  visibility: public
  parameters:
  - name: name
  - name: value
  comment: '# * @return $this'
- name: setAttributes
  visibility: public
  parameters:
  - name: attributes
  comment: '# * @return $this'
- name: setDataMapper
  visibility: public
  parameters:
  - name: dataMapper
  comment: '# * @return $this'
- name: setDisabled
  visibility: public
  parameters:
  - name: disabled
  comment: '# * @return $this'
- name: setEmptyData
  visibility: public
  parameters:
  - name: emptyData
  comment: '# * @return $this'
- name: setErrorBubbling
  visibility: public
  parameters:
  - name: errorBubbling
  comment: '# * @return $this'
- name: setRequired
  visibility: public
  parameters:
  - name: required
  comment: '# * @return $this'
- name: setPropertyPath
  visibility: public
  parameters:
  - name: propertyPath
  comment: '# * @return $this'
- name: setMapped
  visibility: public
  parameters:
  - name: mapped
  comment: '# * @return $this'
- name: setByReference
  visibility: public
  parameters:
  - name: byReference
  comment: '# * @return $this'
- name: setInheritData
  visibility: public
  parameters:
  - name: inheritData
  comment: '# * @return $this'
- name: setCompound
  visibility: public
  parameters:
  - name: compound
  comment: '# * @return $this'
- name: setType
  visibility: public
  parameters:
  - name: type
  comment: '# * @return $this'
- name: setData
  visibility: public
  parameters:
  - name: data
  comment: '# * @return $this'
- name: setDataLocked
  visibility: public
  parameters:
  - name: locked
  comment: '# * @return $this'
- name: setFormFactory
  visibility: public
  parameters:
  - name: formFactory
  comment: '# * @return $this'
- name: setAction
  visibility: public
  parameters:
  - name: action
  comment: '# * @return $this'
- name: setMethod
  visibility: public
  parameters:
  - name: method
  comment: '# * @return $this'
- name: setRequestHandler
  visibility: public
  parameters:
  - name: requestHandler
  comment: '# * @return $this'
- name: setAutoInitialize
  visibility: public
  parameters:
  - name: initialize
  comment: '# * @return $this'
- name: getFormConfig
  visibility: public
  parameters: []
  comment: null
- name: setIsEmptyCallback
  visibility: public
  parameters:
  - name: isEmptyCallback
  comment: '# * @return $this'
- name: validateName
  visibility: public
  parameters:
  - name: name
  comment: null
- name: isValidName
  visibility: public
  parameters:
  - name: name
  comment: null
traits:
- Symfony\Component\EventDispatcher\EventDispatcherInterface
- Symfony\Component\EventDispatcher\EventSubscriberInterface
- Symfony\Component\EventDispatcher\ImmutableEventDispatcher
- Symfony\Component\Form\Exception\BadMethodCallException
- Symfony\Component\Form\Exception\InvalidArgumentException
- Symfony\Component\PropertyAccess\PropertyPath
- Symfony\Component\PropertyAccess\PropertyPathInterface
interfaces:
- FormConfigBuilderInterface
