name: FormView
class_comment: '# * @author Bernhard Schussek <bschussek@gmail.com>

  # *

  # * @implements \ArrayAccess<int|string, FormView>

  # * @implements \IteratorAggregate<int|string, FormView>'
dependencies:
- name: BadMethodCallException
  type: class
  source: Symfony\Component\Form\Exception\BadMethodCallException
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: parent
    default: 'null'
  comment: "# * @author Bernhard Schussek <bschussek@gmail.com>\n# *\n# * @implements\
    \ \\ArrayAccess<int|string, FormView>\n# * @implements \\IteratorAggregate<int|string,\
    \ FormView>\n# */\n# class FormView implements \\ArrayAccess, \\IteratorAggregate,\
    \ \\Countable\n# {\n# /**\n# * The variables assigned to this view.\n# */\n# public\
    \ array $vars = [\n# 'value' => null,\n# 'attr' => [],\n# ];\n# \n# /**\n# * The\
    \ child views.\n# *\n# * @var array<int|string, FormView>\n# */\n# public array\
    \ $children = [];\n# \n# /**\n# * Is the form attached to this renderer rendered?\n\
    # *\n# * Rendering happens when either the widget or the row method was called.\n\
    # * Row implicitly includes widget, however certain rendering mechanisms\n# *\
    \ have to skip widget rendering when a row is rendered.\n# */\n# private bool\
    \ $rendered = false;\n# \n# private bool $methodRendered = false;\n# \n# /**\n\
    # * @param FormView|null $parent The parent view"
- name: isRendered
  visibility: public
  parameters: []
  comment: '# * Returns whether the view was already rendered.'
- name: setRendered
  visibility: public
  parameters: []
  comment: '# * Marks the view as rendered.

    # *

    # * @return $this'
- name: isMethodRendered
  visibility: public
  parameters: []
  comment: null
- name: setMethodRendered
  visibility: public
  parameters: []
  comment: null
- name: offsetGet
  visibility: public
  parameters:
  - name: name
  comment: '# * Returns a child by name (implements \ArrayAccess).

    # *

    # * @param int|string $name The child name'
- name: offsetExists
  visibility: public
  parameters:
  - name: name
  comment: '# * Returns whether the given child exists (implements \ArrayAccess).

    # *

    # * @param int|string $name The child name'
- name: offsetSet
  visibility: public
  parameters:
  - name: name
  - name: value
  comment: '# * Implements \ArrayAccess.

    # *

    # * @throws BadMethodCallException always as setting a child by name is not allowed'
- name: offsetUnset
  visibility: public
  parameters:
  - name: name
  comment: '# * Removes a child (implements \ArrayAccess).

    # *

    # * @param int|string $name The child name'
- name: getIterator
  visibility: public
  parameters: []
  comment: '# * Returns an iterator to iterate over children (implements \IteratorAggregate).

    # *

    # * @return \ArrayIterator<int|string, FormView>'
- name: count
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\Form\Exception\BadMethodCallException
interfaces:
- \ArrayAccess
- \IteratorAggregate
- \ArrayAccess
- \ArrayAccess
- \ArrayAccess
- \ArrayAccess
- \IteratorAggregate
