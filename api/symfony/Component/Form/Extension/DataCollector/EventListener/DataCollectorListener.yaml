name: DataCollectorListener
class_comment: '# * Listener that invokes a data collector for the {@link FormEvents::POST_SET_DATA}

  # * and {@link FormEvents::POST_SUBMIT} events.

  # *

  # * @author Bernhard Schussek <bschussek@gmail.com>'
dependencies:
- name: EventSubscriberInterface
  type: class
  source: Symfony\Component\EventDispatcher\EventSubscriberInterface
- name: FormDataCollectorInterface
  type: class
  source: Symfony\Component\Form\Extension\DataCollector\FormDataCollectorInterface
- name: FormEvent
  type: class
  source: Symfony\Component\Form\FormEvent
- name: FormEvents
  type: class
  source: Symfony\Component\Form\FormEvents
properties: []
methods:
- name: postSetData
  visibility: public
  parameters:
  - name: event
  comment: "# * Listener that invokes a data collector for the {@link FormEvents::POST_SET_DATA}\n\
    # * and {@link FormEvents::POST_SUBMIT} events.\n# *\n# * @author Bernhard Schussek\
    \ <bschussek@gmail.com>\n# */\n# class DataCollectorListener implements EventSubscriberInterface\n\
    # {\n# public function __construct(\n# private FormDataCollectorInterface $dataCollector,\n\
    # ) {\n# }\n# \n# public static function getSubscribedEvents(): array\n# {\n#\
    \ return [\n# // High priority in order to be called as soon as possible\n# FormEvents::POST_SET_DATA\
    \ => ['postSetData', 255],\n# // Low priority in order to be called as late as\
    \ possible\n# FormEvents::POST_SUBMIT => ['postSubmit', -255],\n# ];\n# }\n# \n\
    # /**\n# * Listener for the {@link FormEvents::POST_SET_DATA} event."
- name: postSubmit
  visibility: public
  parameters:
  - name: event
  comment: '# * Listener for the {@link FormEvents::POST_SUBMIT} event.'
traits:
- Symfony\Component\EventDispatcher\EventSubscriberInterface
- Symfony\Component\Form\Extension\DataCollector\FormDataCollectorInterface
- Symfony\Component\Form\FormEvent
- Symfony\Component\Form\FormEvents
interfaces:
- EventSubscriberInterface
