name: FormDataCollector
class_comment: "# * Data collector for {@link FormInterface} instances.\n# *\n# *\
  \ @author Robert Sch\xF6nthal <robert.schoenthal@gmail.com>\n# * @author Bernhard\
  \ Schussek <bschussek@gmail.com>\n# *\n# * @final"
dependencies:
- name: FormInterface
  type: class
  source: Symfony\Component\Form\FormInterface
- name: FormView
  type: class
  source: Symfony\Component\Form\FormView
- name: Request
  type: class
  source: Symfony\Component\HttpFoundation\Request
- name: Response
  type: class
  source: Symfony\Component\HttpFoundation\Response
- name: DataCollector
  type: class
  source: Symfony\Component\HttpKernel\DataCollector\DataCollector
- name: ConstraintViolationInterface
  type: class
  source: Symfony\Component\Validator\ConstraintViolationInterface
- name: Caster
  type: class
  source: Symfony\Component\VarDumper\Caster\Caster
- name: ClassStub
  type: class
  source: Symfony\Component\VarDumper\Caster\ClassStub
- name: StubCaster
  type: class
  source: Symfony\Component\VarDumper\Caster\StubCaster
- name: Data
  type: class
  source: Symfony\Component\VarDumper\Cloner\Data
- name: Stub
  type: class
  source: Symfony\Component\VarDumper\Cloner\Stub
properties: []
methods:
- name: collect
  visibility: public
  parameters:
  - name: request
  - name: response
  - name: exception
    default: 'null'
  comment: "# * Data collector for {@link FormInterface} instances.\n# *\n# * @author\
    \ Robert Sch\xF6nthal <robert.schoenthal@gmail.com>\n# * @author Bernhard Schussek\
    \ <bschussek@gmail.com>\n# *\n# * @final\n# */\n# class FormDataCollector extends\
    \ DataCollector implements FormDataCollectorInterface\n# {\n# /**\n# * Stores\
    \ the collected data per {@link FormInterface} instance.\n# *\n# * Uses the hashes\
    \ of the forms as keys. This is preferable over using\n# * {@link \\SplObjectStorage},\
    \ because in this way no references are kept\n# * to the {@link FormInterface}\
    \ instances.\n# */\n# private array $dataByForm;\n# \n# /**\n# * Stores the collected\
    \ data per {@link FormView} instance.\n# *\n# * Uses the hashes of the views as\
    \ keys. This is preferable over using\n# * {@link \\SplObjectStorage}, because\
    \ in this way no references are kept\n# * to the {@link FormView} instances.\n\
    # */\n# private array $dataByView;\n# \n# /**\n# * Connects {@link FormView} with\
    \ {@link FormInterface} instances.\n# *\n# * Uses the hashes of the views as keys\
    \ and the hashes of the forms as\n# * values. This is preferable over storing\
    \ the objects directly, because\n# * this way they can safely be discarded by\
    \ the GC.\n# */\n# private array $formsByView;\n# \n# public function __construct(\n\
    # private FormDataExtractorInterface $dataExtractor,\n# ) {\n# if (!class_exists(ClassStub::class))\
    \ {\n# throw new \\LogicException(\\sprintf('The VarDumper component is needed\
    \ for using the \"%s\" class. Install symfony/var-dumper version 3.4 or above.',\
    \ __CLASS__));\n# }\n# \n# $this->reset();\n# }\n# \n# /**\n# * Does nothing.\
    \ The data is collected during the form event listeners."
- name: reset
  visibility: public
  parameters: []
  comment: null
- name: associateFormWithView
  visibility: public
  parameters:
  - name: form
  - name: view
  comment: null
- name: collectConfiguration
  visibility: public
  parameters:
  - name: form
  comment: null
- name: collectDefaultData
  visibility: public
  parameters:
  - name: form
  comment: null
- name: collectSubmittedData
  visibility: public
  parameters:
  - name: form
  comment: null
- name: collectViewVariables
  visibility: public
  parameters:
  - name: view
  comment: null
- name: buildPreliminaryFormTree
  visibility: public
  parameters:
  - name: form
  comment: null
- name: buildFinalFormTree
  visibility: public
  parameters:
  - name: form
  - name: view
  comment: null
- name: getName
  visibility: public
  parameters: []
  comment: null
- name: getData
  visibility: public
  parameters: []
  comment: null
- name: __sleep
  visibility: public
  parameters: []
  comment: '# * @internal'
- name: getCasters
  visibility: protected
  parameters: []
  comment: null
traits:
- Symfony\Component\Form\FormInterface
- Symfony\Component\Form\FormView
- Symfony\Component\HttpFoundation\Request
- Symfony\Component\HttpFoundation\Response
- Symfony\Component\HttpKernel\DataCollector\DataCollector
- Symfony\Component\Validator\ConstraintViolationInterface
- Symfony\Component\VarDumper\Caster\Caster
- Symfony\Component\VarDumper\Caster\ClassStub
- Symfony\Component\VarDumper\Caster\StubCaster
- Symfony\Component\VarDumper\Cloner\Data
- Symfony\Component\VarDumper\Cloner\Stub
interfaces:
- FormDataCollectorInterface
