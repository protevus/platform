name: DateTimeToArrayTransformer
class_comment: '# * Transforms between a normalized time and a localized time string/array.

  # *

  # * @author Bernhard Schussek <bschussek@gmail.com>

  # * @author Florian Eckerstorfer <florian@eckerstorfer.org>

  # *

  # * @extends BaseDateTimeTransformer<array>'
dependencies:
- name: TransformationFailedException
  type: class
  source: Symfony\Component\Form\Exception\TransformationFailedException
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: inputTimezone
    default: 'null'
  - name: outputTimezone
    default: 'null'
  - name: fields
    default: 'null'
  - name: pad
    default: 'false'
  - name: referenceDate
    default: 'null'
  comment: "# * Transforms between a normalized time and a localized time string/array.\n\
    # *\n# * @author Bernhard Schussek <bschussek@gmail.com>\n# * @author Florian\
    \ Eckerstorfer <florian@eckerstorfer.org>\n# *\n# * @extends BaseDateTimeTransformer<array>\n\
    # */\n# class DateTimeToArrayTransformer extends BaseDateTimeTransformer\n# {\n\
    # private array $fields;\n# private \\DateTimeInterface $referenceDate;\n# \n\
    # /**\n# * @param string|null   $inputTimezone  The input timezone\n# * @param\
    \ string|null   $outputTimezone The output timezone\n# * @param string[]|null\
    \ $fields         The date fields\n# * @param bool          $pad            Whether\
    \ to use padding"
- name: transform
  visibility: public
  parameters:
  - name: dateTime
  comment: '# * Transforms a normalized date into a localized date.

    # *

    # * @param \DateTimeInterface $dateTime A DateTimeInterface object

    # *

    # * @throws TransformationFailedException If the given value is not a \DateTimeInterface'
- name: reverseTransform
  visibility: public
  parameters:
  - name: value
  comment: '# * Transforms a localized date into a normalized date.

    # *

    # * @param array $value Localized date

    # *

    # * @throws TransformationFailedException If the given value is not an array,

    # *                                       if the value could not be transformed'
traits:
- Symfony\Component\Form\Exception\TransformationFailedException
interfaces: []
