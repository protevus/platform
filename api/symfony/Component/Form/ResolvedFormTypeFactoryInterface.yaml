name: ResolvedFormTypeFactoryInterface
class_comment: null
dependencies: []
properties: []
methods:
- name: createResolvedType
  visibility: public
  parameters:
  - name: type
  - name: typeExtensions
  - name: parent
    default: 'null'
  comment: '# * Creates ResolvedFormTypeInterface instances.

    # *

    # * This interface allows you to use your custom ResolvedFormTypeInterface

    # * implementation, within which you can customize the concrete FormBuilderInterface

    # * implementations or FormView subclasses that are used by the framework.

    # *

    # * @author Bernhard Schussek <bschussek@gmail.com>

    # */

    # interface ResolvedFormTypeFactoryInterface

    # {

    # /**

    # * Resolves a form type.

    # *

    # * @param FormTypeExtensionInterface[] $typeExtensions

    # *

    # * @throws Exception\UnexpectedTypeException  if the types parent {@link FormTypeInterface::getParent()}
    is not a string

    # * @throws Exception\InvalidArgumentException if the types parent cannot be retrieved
    from any extension'
traits: []
interfaces: []
