name: UnionType
class_comment: null
dependencies:
- name: LogicException
  type: class
  source: Symfony\Component\TypeInfo\Exception\LogicException
- name: Type
  type: class
  source: Symfony\Component\TypeInfo\Type
- name: TypeIdentifier
  type: class
  source: Symfony\Component\TypeInfo\TypeIdentifier
- name: CompositeTypeTrait
  type: class
  source: CompositeTypeTrait
properties: []
methods:
- name: getBaseType
  visibility: public
  parameters: []
  comment: "# * @author Mathias Arlaud <mathias.arlaud@gmail.com>\n# * @author Baptiste\
    \ Leduc <baptiste.leduc@gmail.com>\n# *\n# * @template T of Type\n# *\n# * @experimental\n\
    # */\n# final class UnionType extends Type\n# {\n# /**\n# * @use CompositeTypeTrait<T>\n\
    # */\n# use CompositeTypeTrait;\n# \n# public function is(callable $callable):\
    \ bool\n# {\n# return $this->atLeastOneTypeIs($callable);\n# }\n# \n# /**\n# *\
    \ @throws LogicException"
- name: asNonNullable
  visibility: public
  parameters: []
  comment: null
- name: __toString
  visibility: public
  parameters: []
  comment: null
- name: __call
  visibility: public
  parameters:
  - name: method
  - name: arguments
  comment: '# * Proxies all method calls to the original non-nullable type.

    # *

    # * @param list<mixed> $arguments'
traits:
- Symfony\Component\TypeInfo\Exception\LogicException
- Symfony\Component\TypeInfo\Type
- Symfony\Component\TypeInfo\TypeIdentifier
- CompositeTypeTrait
interfaces: []
