name: TypeContext
class_comment: null
dependencies:
- name: LogicException
  type: class
  source: Symfony\Component\TypeInfo\Exception\LogicException
- name: Type
  type: class
  source: Symfony\Component\TypeInfo\Type
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: calledClassName
  - name: declaringClassName
  - name: namespace
    default: 'null'
  - name: uses
    default: '[]'
  - name: templates
    default: '[]'
  comment: "# * Type resolving context.\n# *\n# * Helps to retrieve declaring class,\
    \ called class, parent class, templates\n# * and normalize classes according to\
    \ the current namespace and uses.\n# *\n# * @author Mathias Arlaud <mathias.arlaud@gmail.com>\n\
    # * @author Baptiste Leduc <baptiste.leduc@gmail.com>\n# *\n# * @experimental\n\
    # */\n# final class TypeContext\n# {\n# /**\n# * @var array<string, bool>\n# */\n\
    # private static array $classExistCache = [];\n# \n# /**\n# * @param array<string,\
    \ string> $uses\n# * @param array<string, Type>   $templates"
- name: normalize
  visibility: public
  parameters:
  - name: name
  comment: '# * Normalize class name according to current namespace and uses.'
- name: getDeclaringClass
  visibility: public
  parameters: []
  comment: '# * @return class-string'
- name: getCalledClass
  visibility: public
  parameters: []
  comment: '# * @return class-string'
- name: getParentClass
  visibility: public
  parameters: []
  comment: '# * @return class-string'
traits:
- Symfony\Component\TypeInfo\Exception\LogicException
- Symfony\Component\TypeInfo\Type
interfaces: []
