name: SessionTest
class_comment: "# * SessionTest.\n# *\n# * @author Fabien Potencier <fabien@symfony.com>\n\
  # * @author Robert Sch\xF6nthal <seroscho@googlemail.com>\n# * @author Drak <drak@zikula.org>"
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: AttributeBag
  type: class
  source: Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag
- name: FlashBag
  type: class
  source: Symfony\Component\HttpFoundation\Session\Flash\FlashBag
- name: FlashBagInterface
  type: class
  source: Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface
- name: Session
  type: class
  source: Symfony\Component\HttpFoundation\Session\Session
- name: SessionBagProxy
  type: class
  source: Symfony\Component\HttpFoundation\Session\SessionBagProxy
- name: SessionInterface
  type: class
  source: Symfony\Component\HttpFoundation\Session\SessionInterface
- name: MetadataBag
  type: class
  source: Symfony\Component\HttpFoundation\Session\Storage\MetadataBag
- name: MockArraySessionStorage
  type: class
  source: Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage
- name: SessionStorageInterface
  type: class
  source: Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface
properties: []
methods:
- name: testSet
  visibility: public
  parameters:
  - name: key
  - name: value
  comment: "# * SessionTest.\n# *\n# * @author Fabien Potencier <fabien@symfony.com>\n\
    # * @author Robert Sch\xF6nthal <seroscho@googlemail.com>\n# * @author Drak <drak@zikula.org>\n\
    # */\n# class SessionTest extends TestCase\n# {\n# protected SessionStorageInterface\
    \ $storage;\n# protected SessionInterface $session;\n# \n# protected function\
    \ setUp(): void\n# {\n# $this->storage = new MockArraySessionStorage();\n# $this->session\
    \ = new Session($this->storage, new AttributeBag(), new FlashBag());\n# }\n# \n\
    # public function testStart()\n# {\n# $this->assertEquals('', $this->session->getId());\n\
    # $this->assertTrue($this->session->start());\n# $this->assertNotEquals('', $this->session->getId());\n\
    # }\n# \n# public function testIsStarted()\n# {\n# $this->assertFalse($this->session->isStarted());\n\
    # $this->session->start();\n# $this->assertTrue($this->session->isStarted());\n\
    # }\n# \n# public function testSetId()\n# {\n# $this->assertEquals('', $this->session->getId());\n\
    # $this->session->setId('0123456789abcdef');\n# $this->session->start();\n# $this->assertEquals('0123456789abcdef',\
    \ $this->session->getId());\n# }\n# \n# public function testSetIdAfterStart()\n\
    # {\n# $this->session->start();\n# $id = $this->session->getId();\n# \n# $e =\
    \ null;\n# try {\n# $this->session->setId($id);\n# } catch (\\Exception $e) {\n\
    # }\n# \n# $this->assertNull($e);\n# \n# try {\n# $this->session->setId('different');\n\
    # } catch (\\Exception $e) {\n# }\n# \n# $this->assertInstanceOf(\\LogicException::class,\
    \ $e);\n# }\n# \n# public function testSetName()\n# {\n# $this->assertEquals('MOCKSESSID',\
    \ $this->session->getName());\n# $this->session->setName('session.test.com');\n\
    # $this->session->start();\n# $this->assertEquals('session.test.com', $this->session->getName());\n\
    # }\n# \n# public function testGet()\n# {\n# // tests defaults\n# $this->assertNull($this->session->get('foo'));\n\
    # $this->assertEquals(1, $this->session->get('foo', 1));\n# }\n# \n# /**\n# *\
    \ @dataProvider setProvider"
- name: testHas
  visibility: public
  parameters:
  - name: key
  - name: value
  comment: '# * @dataProvider setProvider'
- name: testReplace
  visibility: public
  parameters: []
  comment: null
- name: testAll
  visibility: public
  parameters:
  - name: key
  - name: value
  - name: result
  comment: '# * @dataProvider setProvider'
- name: testClear
  visibility: public
  parameters:
  - name: key
  - name: value
  comment: '# * @dataProvider setProvider'
- name: setProvider
  visibility: public
  parameters: []
  comment: null
- name: testRemove
  visibility: public
  parameters:
  - name: key
  - name: value
  comment: '# * @dataProvider setProvider'
- name: testInvalidate
  visibility: public
  parameters: []
  comment: null
- name: testMigrate
  visibility: public
  parameters: []
  comment: null
- name: testMigrateDestroy
  visibility: public
  parameters: []
  comment: null
- name: testSave
  visibility: public
  parameters: []
  comment: null
- name: testGetId
  visibility: public
  parameters: []
  comment: null
- name: testGetFlashBag
  visibility: public
  parameters: []
  comment: null
- name: testGetIterator
  visibility: public
  parameters: []
  comment: null
- name: testGetCount
  visibility: public
  parameters: []
  comment: null
- name: testGetMeta
  visibility: public
  parameters: []
  comment: null
- name: testIsEmpty
  visibility: public
  parameters: []
  comment: null
- name: testGetBagWithBagImplementingGetBag
  visibility: public
  parameters: []
  comment: null
- name: testGetBagWithBagNotImplementingGetBag
  visibility: public
  parameters: []
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag
- Symfony\Component\HttpFoundation\Session\Flash\FlashBag
- Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface
- Symfony\Component\HttpFoundation\Session\Session
- Symfony\Component\HttpFoundation\Session\SessionBagProxy
- Symfony\Component\HttpFoundation\Session\SessionInterface
- Symfony\Component\HttpFoundation\Session\Storage\MetadataBag
- Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage
- Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface
interfaces: []
