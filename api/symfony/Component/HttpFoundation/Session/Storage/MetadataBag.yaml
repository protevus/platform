name: MetadataBag
class_comment: '# * Metadata container.

  # *

  # * Adds metadata to the session.

  # *

  # * @author Drak <drak@zikula.org>'
dependencies:
- name: SessionBagInterface
  type: class
  source: Symfony\Component\HttpFoundation\Session\SessionBagInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: storageKey
    default: '''_sf2_meta'''
  - name: updateThreshold
    default: '0'
  comment: "# * Metadata container.\n# *\n# * Adds metadata to the session.\n# *\n\
    # * @author Drak <drak@zikula.org>\n# */\n# class MetadataBag implements SessionBagInterface\n\
    # {\n# public const CREATED = 'c';\n# public const UPDATED = 'u';\n# public const\
    \ LIFETIME = 'l';\n# \n# protected array $meta = [self::CREATED => 0, self::UPDATED\
    \ => 0, self::LIFETIME => 0];\n# \n# private string $name = '__metadata';\n# private\
    \ int $lastUsed;\n# \n# /**\n# * @param string $storageKey      The key used to\
    \ store bag in the session\n# * @param int    $updateThreshold The time to wait\
    \ between two UPDATED updates"
- name: initialize
  visibility: public
  parameters:
  - name: '&$array'
  comment: null
- name: getLifetime
  visibility: public
  parameters: []
  comment: '# * Gets the lifetime that the session cookie was set with.'
- name: stampNew
  visibility: public
  parameters:
  - name: lifetime
    default: 'null'
  comment: '# * Stamps a new session''s metadata.

    # *

    # * @param int|null $lifetime Sets the cookie lifetime for the session cookie.
    A null value

    # *                           will leave the system settings unchanged, 0 sets
    the cookie

    # *                           to expire with browser session. Time is in seconds,
    and is

    # *                           not a Unix timestamp.'
- name: getStorageKey
  visibility: public
  parameters: []
  comment: null
- name: getCreated
  visibility: public
  parameters: []
  comment: '# * Gets the created timestamp metadata.

    # *

    # * @return int Unix timestamp'
- name: getLastUsed
  visibility: public
  parameters: []
  comment: '# * Gets the last used metadata.

    # *

    # * @return int Unix timestamp'
- name: clear
  visibility: public
  parameters: []
  comment: null
- name: getName
  visibility: public
  parameters: []
  comment: null
- name: setName
  visibility: public
  parameters:
  - name: name
  comment: '# * Sets name.'
- name: stampCreated
  visibility: private
  parameters:
  - name: lifetime
    default: 'null'
  comment: null
traits:
- Symfony\Component\HttpFoundation\Session\SessionBagInterface
interfaces:
- SessionBagInterface
