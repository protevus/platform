name: MockFileSessionStorage
class_comment: '# * MockFileSessionStorage is used to mock sessions for

  # * functional testing where you may need to persist session data

  # * across separate PHP processes.

  # *

  # * No PHP session is actually started since a session can be initialized

  # * and shutdown only once per PHP execution cycle and this class does

  # * not pollute any session related globals, including session_*() functions

  # * or session.* PHP ini directives.

  # *

  # * @author Drak <drak@zikula.org>'
dependencies: []
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: savePath
    default: 'null'
  - name: name
    default: '''MOCKSESSID'''
  - name: metaBag
    default: 'null'
  comment: "# * MockFileSessionStorage is used to mock sessions for\n# * functional\
    \ testing where you may need to persist session data\n# * across separate PHP\
    \ processes.\n# *\n# * No PHP session is actually started since a session can\
    \ be initialized\n# * and shutdown only once per PHP execution cycle and this\
    \ class does\n# * not pollute any session related globals, including session_*()\
    \ functions\n# * or session.* PHP ini directives.\n# *\n# * @author Drak <drak@zikula.org>\n\
    # */\n# class MockFileSessionStorage extends MockArraySessionStorage\n# {\n# private\
    \ string $savePath;\n# \n# /**\n# * @param string|null $savePath Path of directory\
    \ to save session files"
- name: start
  visibility: public
  parameters: []
  comment: null
- name: regenerate
  visibility: public
  parameters:
  - name: destroy
    default: 'false'
  - name: lifetime
    default: 'null'
  comment: null
- name: save
  visibility: public
  parameters: []
  comment: null
- name: destroy
  visibility: private
  parameters: []
  comment: '# * Deletes a session from persistent storage.

    # * Deliberately leaves session data in memory intact.'
- name: getFilePath
  visibility: private
  parameters: []
  comment: '# * Calculate path to file.'
- name: read
  visibility: private
  parameters: []
  comment: '# * Reads session from storage and loads session.'
traits: []
interfaces: []
