name: StrictSessionHandler
class_comment: '# * Adds basic `SessionUpdateTimestampHandlerInterface` behaviors
  to another `SessionHandlerInterface`.

  # *

  # * @author Nicolas Grekas <p@tchwork.com>'
dependencies: []
properties: []
methods:
- name: isWrapper
  visibility: public
  parameters: []
  comment: "# * Adds basic `SessionUpdateTimestampHandlerInterface` behaviors to another\
    \ `SessionHandlerInterface`.\n# *\n# * @author Nicolas Grekas <p@tchwork.com>\n\
    # */\n# class StrictSessionHandler extends AbstractSessionHandler\n# {\n# private\
    \ bool $doDestroy;\n# \n# public function __construct(\n# private \\SessionHandlerInterface\
    \ $handler,\n# ) {\n# if ($handler instanceof \\SessionUpdateTimestampHandlerInterface)\
    \ {\n# throw new \\LogicException(\\sprintf('\"%s\" is already an instance of\
    \ \"SessionUpdateTimestampHandlerInterface\", you cannot wrap it with \"%s\".',\
    \ get_debug_type($handler), self::class));\n# }\n# }\n# \n# /**\n# * Returns true\
    \ if this handler wraps an internal PHP session save handler using \\SessionHandler.\n\
    # *\n# * @internal"
- name: open
  visibility: public
  parameters:
  - name: savePath
  - name: sessionName
  comment: null
- name: doRead
  visibility: protected
  parameters:
  - name: sessionId
  comment: null
- name: updateTimestamp
  visibility: public
  parameters:
  - name: sessionId
  - name: data
  comment: null
- name: doWrite
  visibility: protected
  parameters:
  - name: sessionId
  - name: data
  comment: null
- name: destroy
  visibility: public
  parameters:
  - name: sessionId
  comment: null
- name: doDestroy
  visibility: protected
  parameters:
  - name: sessionId
  comment: null
- name: close
  visibility: public
  parameters: []
  comment: null
- name: gc
  visibility: public
  parameters:
  - name: maxlifetime
  comment: null
traits: []
interfaces: []
