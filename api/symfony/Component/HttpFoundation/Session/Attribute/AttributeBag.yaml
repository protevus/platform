name: AttributeBag
class_comment: '# * This class relates to session attribute storage.

  # *

  # * @implements \IteratorAggregate<string, mixed>'
dependencies: []
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: storageKey
    default: '''_sf2_attributes'''
  comment: "# * This class relates to session attribute storage.\n# *\n# * @implements\
    \ \\IteratorAggregate<string, mixed>\n# */\n# class AttributeBag implements AttributeBagInterface,\
    \ \\IteratorAggregate, \\Countable\n# {\n# protected array $attributes = [];\n\
    # \n# private string $name = 'attributes';\n# \n# /**\n# * @param string $storageKey\
    \ The key used to store attributes in the session"
- name: getName
  visibility: public
  parameters: []
  comment: null
- name: setName
  visibility: public
  parameters:
  - name: name
  comment: null
- name: initialize
  visibility: public
  parameters:
  - name: '&$attributes'
  comment: null
- name: getStorageKey
  visibility: public
  parameters: []
  comment: null
- name: has
  visibility: public
  parameters:
  - name: name
  comment: null
- name: get
  visibility: public
  parameters:
  - name: name
  - name: default
    default: 'null'
  comment: null
- name: set
  visibility: public
  parameters:
  - name: name
  - name: value
  comment: null
- name: all
  visibility: public
  parameters: []
  comment: null
- name: replace
  visibility: public
  parameters:
  - name: attributes
  comment: null
- name: remove
  visibility: public
  parameters:
  - name: name
  comment: null
- name: clear
  visibility: public
  parameters: []
  comment: null
- name: getIterator
  visibility: public
  parameters: []
  comment: '# * Returns an iterator for attributes.

    # *

    # * @return \ArrayIterator<string, mixed>'
- name: count
  visibility: public
  parameters: []
  comment: '# * Returns the number of attributes.'
traits: []
interfaces:
- \IteratorAggregate
- AttributeBagInterface
