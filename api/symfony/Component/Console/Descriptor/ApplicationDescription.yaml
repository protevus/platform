name: ApplicationDescription
class_comment: "# * @author Jean-Fran\xE7ois Simon <jeanfrancois.simon@sensiolabs.com>\n\
  # *\n# * @internal"
dependencies:
- name: Application
  type: class
  source: Symfony\Component\Console\Application
- name: Command
  type: class
  source: Symfony\Component\Console\Command\Command
- name: CommandNotFoundException
  type: class
  source: Symfony\Component\Console\Exception\CommandNotFoundException
properties: []
methods:
- name: getCommands
  visibility: public
  parameters: []
  comment: "# * @author Jean-Fran\xE7ois Simon <jeanfrancois.simon@sensiolabs.com>\n\
    # *\n# * @internal\n# */\n# class ApplicationDescription\n# {\n# public const\
    \ GLOBAL_NAMESPACE = '_global';\n# \n# private array $namespaces;\n# \n# /**\n\
    # * @var array<string, Command>\n# */\n# private array $commands;\n# \n# /**\n\
    # * @var array<string, Command>\n# */\n# private array $aliases = [];\n# \n# public\
    \ function __construct(\n# private Application $application,\n# private ?string\
    \ $namespace = null,\n# private bool $showHidden = false,\n# ) {\n# }\n# \n# public\
    \ function getNamespaces(): array\n# {\n# if (!isset($this->namespaces)) {\n#\
    \ $this->inspectApplication();\n# }\n# \n# return $this->namespaces;\n# }\n# \n\
    # /**\n# * @return Command[]"
- name: getCommand
  visibility: public
  parameters:
  - name: name
  comment: '# * @throws CommandNotFoundException'
- name: inspectApplication
  visibility: private
  parameters: []
  comment: null
- name: sortCommands
  visibility: private
  parameters:
  - name: commands
  comment: null
traits:
- Symfony\Component\Console\Application
- Symfony\Component\Console\Command\Command
- Symfony\Component\Console\Exception\CommandNotFoundException
interfaces: []
