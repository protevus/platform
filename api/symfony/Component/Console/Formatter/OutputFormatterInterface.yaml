name: OutputFormatterInterface
class_comment: null
dependencies: []
properties: []
methods:
- name: setDecorated
  visibility: public
  parameters:
  - name: decorated
  comment: '# * Formatter interface for console output.

    # *

    # * @author Konstantin Kudryashov <ever.zet@gmail.com>

    # */

    # interface OutputFormatterInterface

    # {

    # /**

    # * Sets the decorated flag.'
- name: isDecorated
  visibility: public
  parameters: []
  comment: '# * Whether the output will decorate messages.'
- name: setStyle
  visibility: public
  parameters:
  - name: name
  - name: style
  comment: '# * Sets a new style.'
- name: hasStyle
  visibility: public
  parameters:
  - name: name
  comment: '# * Checks if output formatter has style with specified name.'
- name: getStyle
  visibility: public
  parameters:
  - name: name
  comment: '# * Gets style options from style with specified name.

    # *

    # * @throws \InvalidArgumentException When style isn''t defined'
- name: format
  visibility: public
  parameters:
  - name: message
  comment: '# * Formats a message according to the given styles.'
traits: []
interfaces: []
