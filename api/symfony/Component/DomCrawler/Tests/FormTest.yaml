name: FormTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: ChoiceFormField
  type: class
  source: Symfony\Component\DomCrawler\Field\ChoiceFormField
- name: FormField
  type: class
  source: Symfony\Component\DomCrawler\Field\FormField
- name: InputFormField
  type: class
  source: Symfony\Component\DomCrawler\Field\InputFormField
- name: TextareaFormField
  type: class
  source: Symfony\Component\DomCrawler\Field\TextareaFormField
- name: Form
  type: class
  source: Symfony\Component\DomCrawler\Form
- name: FormFieldRegistry
  type: class
  source: Symfony\Component\DomCrawler\FormFieldRegistry
properties: []
methods:
- name: setUpBeforeClass
  visibility: public
  parameters: []
  comment: null
- name: testConstructorThrowsExceptionIfTheNodeHasNoFormAncestor
  visibility: public
  parameters: []
  comment: null
- name: testConstructorThrowsExceptionIfNoRelatedForm
  visibility: public
  parameters:
  - name: node
  comment: '# * @dataProvider constructorThrowsExceptionIfNoRelatedFormProvider

    # *

    # * __construct() should throw a \LogicException if the form attribute is invalid.'
- name: constructorThrowsExceptionIfNoRelatedFormProvider
  visibility: public
  parameters: []
  comment: null
- name: testConstructorLoadsOnlyFieldsOfTheRightForm
  visibility: public
  parameters: []
  comment: null
- name: testConstructorHandlesFormAttribute
  visibility: public
  parameters: []
  comment: null
- name: testConstructorHandlesFormValues
  visibility: public
  parameters: []
  comment: null
- name: testMultiValuedFields
  visibility: public
  parameters: []
  comment: null
- name: testConstructor
  visibility: public
  parameters:
  - name: message
  - name: form
  - name: values
  comment: '# * @dataProvider provideInitializeValues'
- name: provideInitializeValues
  visibility: public
  parameters: []
  comment: null
- name: testGetFormNode
  visibility: public
  parameters: []
  comment: null
- name: testGetFormNodeFromNamedForm
  visibility: public
  parameters: []
  comment: null
- name: testGetMethod
  visibility: public
  parameters: []
  comment: null
- name: testGetMethodWithOverride
  visibility: public
  parameters: []
  comment: null
- name: testGetName
  visibility: public
  parameters: []
  comment: null
- name: testGetNameOnFormWithoutName
  visibility: public
  parameters: []
  comment: null
- name: testGetSetValue
  visibility: public
  parameters: []
  comment: null
- name: testDisableValidation
  visibility: public
  parameters: []
  comment: null
- name: testOffsetUnset
  visibility: public
  parameters: []
  comment: null
- name: testOffsetExists
  visibility: public
  parameters: []
  comment: null
- name: testGetValues
  visibility: public
  parameters: []
  comment: null
- name: testSetValues
  visibility: public
  parameters: []
  comment: null
- name: testMultiselectSetValues
  visibility: public
  parameters: []
  comment: null
- name: testGetPhpValues
  visibility: public
  parameters: []
  comment: null
- name: testGetFiles
  visibility: public
  parameters: []
  comment: null
- name: testGetPhpFiles
  visibility: public
  parameters: []
  comment: null
- name: testGetUri
  visibility: public
  parameters:
  - name: message
  - name: form
  - name: values
  - name: uri
  - name: method
    default: 'null'
  comment: '# * @dataProvider provideGetUriValues'
- name: testGetBaseUri
  visibility: public
  parameters: []
  comment: null
- name: testGetUriWithAnchor
  visibility: public
  parameters: []
  comment: null
- name: testGetUriActionAbsolute
  visibility: public
  parameters: []
  comment: null
- name: testGetUriAbsolute
  visibility: public
  parameters: []
  comment: null
- name: testGetUriWithOnlyQueryString
  visibility: public
  parameters: []
  comment: null
- name: testGetUriWithoutAction
  visibility: public
  parameters: []
  comment: null
- name: testGetUriWithActionOverride
  visibility: public
  parameters: []
  comment: null
- name: provideGetUriValues
  visibility: public
  parameters: []
  comment: null
- name: testHas
  visibility: public
  parameters: []
  comment: null
- name: testRemove
  visibility: public
  parameters: []
  comment: null
- name: testGet
  visibility: public
  parameters: []
  comment: null
- name: testAll
  visibility: public
  parameters: []
  comment: null
- name: testSubmitWithoutAFormButton
  visibility: public
  parameters: []
  comment: null
- name: testTypeAttributeIsCaseInsensitive
  visibility: public
  parameters: []
  comment: null
- name: testFormFieldRegistryAcceptAnyNames
  visibility: public
  parameters: []
  comment: null
- name: testFormFieldRegistryGetThrowAnExceptionWhenTheFieldDoesNotExist
  visibility: public
  parameters: []
  comment: null
- name: testFormFieldRegistrySetThrowAnExceptionWhenTheFieldDoesNotExist
  visibility: public
  parameters: []
  comment: null
- name: testFormFieldRegistryHasReturnsTrueWhenTheFQNExists
  visibility: public
  parameters: []
  comment: null
- name: testFormRegistryFieldsCanBeRemoved
  visibility: public
  parameters: []
  comment: null
- name: testFormRegistrySupportsMultivaluedFields
  visibility: public
  parameters: []
  comment: null
- name: testFormRegistrySetValues
  visibility: public
  parameters: []
  comment: null
- name: testFormRegistrySetValueOnCompoundField
  visibility: public
  parameters: []
  comment: null
- name: testFormRegistrySetArrayOnNotCompoundField
  visibility: public
  parameters: []
  comment: null
- name: testDifferentFieldTypesWithSameName
  visibility: public
  parameters: []
  comment: null
- name: getFormFieldMock
  visibility: protected
  parameters:
  - name: name
  - name: value
    default: 'null'
  comment: null
- name: createForm
  visibility: protected
  parameters:
  - name: form
  - name: method
    default: 'null'
  - name: currentUri
    default: 'null'
  comment: null
- name: createTestHtml5Form
  visibility: protected
  parameters: []
  comment: null
- name: createTestMultipleForm
  visibility: protected
  parameters: []
  comment: null
- name: testGetPhpValuesWithEmptyTextarea
  visibility: public
  parameters: []
  comment: null
- name: testGetReturnTypes
  visibility: public
  parameters: []
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Component\DomCrawler\Field\ChoiceFormField
- Symfony\Component\DomCrawler\Field\FormField
- Symfony\Component\DomCrawler\Field\InputFormField
- Symfony\Component\DomCrawler\Field\TextareaFormField
- Symfony\Component\DomCrawler\Form
- Symfony\Component\DomCrawler\FormFieldRegistry
interfaces: []
