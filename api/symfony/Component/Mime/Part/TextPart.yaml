name: TextPart
class_comment: '# * @author Fabien Potencier <fabien@symfony.com>'
dependencies:
- name: Base64ContentEncoder
  type: class
  source: Symfony\Component\Mime\Encoder\Base64ContentEncoder
- name: ContentEncoderInterface
  type: class
  source: Symfony\Component\Mime\Encoder\ContentEncoderInterface
- name: EightBitContentEncoder
  type: class
  source: Symfony\Component\Mime\Encoder\EightBitContentEncoder
- name: QpContentEncoder
  type: class
  source: Symfony\Component\Mime\Encoder\QpContentEncoder
- name: InvalidArgumentException
  type: class
  source: Symfony\Component\Mime\Exception\InvalidArgumentException
- name: Headers
  type: class
  source: Symfony\Component\Mime\Header\Headers
properties:
- name: body
  visibility: private
  comment: "# * @author Fabien Potencier <fabien@symfony.com>\n# */\n# class TextPart\
    \ extends AbstractPart\n# {\n# private const DEFAULT_ENCODERS = ['quoted-printable',\
    \ 'base64', '8bit'];\n# \n# /** @internal */\n# protected Headers $_headers;\n\
    # \n# private static array $encoders = [];\n# \n# /** @var resource|string|File"
methods:
- name: __construct
  visibility: public
  parameters:
  - name: body
  - name: charset
    default: '''utf-8'''
  - name: subtype
    default: '''plain'''
  - name: encoding
    default: 'null'
  comment: "# * @author Fabien Potencier <fabien@symfony.com>\n# */\n# class TextPart\
    \ extends AbstractPart\n# {\n# private const DEFAULT_ENCODERS = ['quoted-printable',\
    \ 'base64', '8bit'];\n# \n# /** @internal */\n# protected Headers $_headers;\n\
    # \n# private static array $encoders = [];\n# \n# /** @var resource|string|File\
    \ */\n# private $body;\n# private ?string $charset;\n# private string $subtype;\n\
    # private ?string $disposition = null;\n# private ?string $name = null;\n# private\
    \ string $encoding;\n# private ?bool $seekable = null;\n# \n# /**\n# * @param\
    \ resource|string|File $body Use a File instance to defer loading the file until\
    \ rendering"
- name: getMediaType
  visibility: public
  parameters: []
  comment: null
- name: getMediaSubtype
  visibility: public
  parameters: []
  comment: null
- name: setDisposition
  visibility: public
  parameters:
  - name: disposition
  comment: '# * @param string $disposition one of attachment, inline, or form-data

    # *

    # * @return $this'
- name: getDisposition
  visibility: public
  parameters: []
  comment: '# * @return ?string null or one of attachment, inline, or form-data'
- name: setName
  visibility: public
  parameters:
  - name: name
  comment: '# * Sets the name of the file (used by FormDataPart).

    # *

    # * @return $this'
- name: getName
  visibility: public
  parameters: []
  comment: '# * Gets the name of the file.'
- name: getBody
  visibility: public
  parameters: []
  comment: null
- name: bodyToString
  visibility: public
  parameters: []
  comment: null
- name: bodyToIterable
  visibility: public
  parameters: []
  comment: null
- name: getPreparedHeaders
  visibility: public
  parameters: []
  comment: null
- name: asDebugString
  visibility: public
  parameters: []
  comment: null
- name: getEncoder
  visibility: private
  parameters: []
  comment: null
- name: addEncoder
  visibility: public
  parameters:
  - name: name
  - name: encoder
  comment: null
- name: chooseEncoding
  visibility: private
  parameters: []
  comment: null
- name: __sleep
  visibility: public
  parameters: []
  comment: null
- name: __wakeup
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\Mime\Encoder\Base64ContentEncoder
- Symfony\Component\Mime\Encoder\ContentEncoderInterface
- Symfony\Component\Mime\Encoder\EightBitContentEncoder
- Symfony\Component\Mime\Encoder\QpContentEncoder
- Symfony\Component\Mime\Exception\InvalidArgumentException
- Symfony\Component\Mime\Header\Headers
interfaces: []
