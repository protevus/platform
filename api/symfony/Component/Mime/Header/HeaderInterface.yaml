name: HeaderInterface
class_comment: null
dependencies: []
properties: []
methods:
- name: setBody
  visibility: public
  parameters:
  - name: body
  comment: '# * A MIME Header.

    # *

    # * @author Chris Corbyn

    # */

    # interface HeaderInterface

    # {

    # /**

    # * Sets the body.

    # *

    # * The type depends on the Header concrete class.'
- name: getBody
  visibility: public
  parameters: []
  comment: '# * Gets the body.

    # *

    # * The return type depends on the Header concrete class.'
- name: setCharset
  visibility: public
  parameters:
  - name: charset
  comment: null
- name: getCharset
  visibility: public
  parameters: []
  comment: null
- name: setLanguage
  visibility: public
  parameters:
  - name: lang
  comment: null
- name: getLanguage
  visibility: public
  parameters: []
  comment: null
- name: getName
  visibility: public
  parameters: []
  comment: null
- name: setMaxLineLength
  visibility: public
  parameters:
  - name: lineLength
  comment: null
- name: getMaxLineLength
  visibility: public
  parameters: []
  comment: null
- name: toString
  visibility: public
  parameters: []
  comment: '# * Gets this Header rendered as a compliant string.'
- name: getBodyAsString
  visibility: public
  parameters: []
  comment: '# * Gets the header''s body, prepared for folding into a final header
    value.

    # *

    # * This is not necessarily RFC 2822 compliant since folding white space is

    # * not added at this stage (see {@link toString()} for that).'
traits: []
interfaces: []
