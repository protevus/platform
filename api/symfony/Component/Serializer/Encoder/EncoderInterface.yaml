name: EncoderInterface
class_comment: null
dependencies:
- name: UnexpectedValueException
  type: class
  source: Symfony\Component\Serializer\Exception\UnexpectedValueException
properties: []
methods:
- name: encode
  visibility: public
  parameters:
  - name: data
  - name: format
  - name: context
    default: '[]'
  comment: '# * @author Jordi Boggiano <j.boggiano@seld.be>

    # */

    # interface EncoderInterface

    # {

    # /**

    # * Encodes data into the given format.

    # *

    # * @param mixed  $data    Data to encode

    # * @param string $format  Format name

    # * @param array  $context Options that normalizers/encoders have access to

    # *

    # * @throws UnexpectedValueException'
- name: supportsEncoding
  visibility: public
  parameters:
  - name: format
  comment: '# * Checks whether the serializer can encode to given format.

    # *

    # * @param string $format Format name'
traits:
- Symfony\Component\Serializer\Exception\UnexpectedValueException
interfaces: []
