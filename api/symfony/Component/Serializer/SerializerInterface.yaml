name: SerializerInterface
class_comment: null
dependencies: []
properties: []
methods:
- name: serialize
  visibility: public
  parameters:
  - name: data
  - name: format
  - name: context
    default: '[]'
  comment: '# * @author Jordi Boggiano <j.boggiano@seld.be>

    # */

    # interface SerializerInterface

    # {

    # /**

    # * Serializes data in the appropriate format.

    # *

    # * @param array<string, mixed> $context Options normalizers/encoders have access
    to'
- name: deserialize
  visibility: public
  parameters:
  - name: data
  - name: type
  - name: format
  - name: context
    default: '[]'
  comment: '# * Deserializes data into the given type.

    # *

    # * @template TObject of object

    # * @template TType of string|class-string<TObject>

    # *

    # * @param TType                $type

    # * @param array<string, mixed> $context

    # *

    # * @psalm-return (TType is class-string<TObject> ? TObject : mixed)

    # *

    # * @phpstan-return ($type is class-string<TObject> ? TObject : mixed)'
traits: []
interfaces: []
