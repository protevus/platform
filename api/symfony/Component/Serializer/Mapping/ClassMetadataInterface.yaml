name: ClassMetadataInterface
class_comment: null
dependencies: []
properties: []
methods:
- name: getName
  visibility: public
  parameters: []
  comment: "# * Stores metadata needed for serializing and deserializing objects of\
    \ specific class.\n# *\n# * Primarily, the metadata stores the set of attributes\
    \ to serialize or deserialize.\n# *\n# * There may only exist one metadata for\
    \ each attribute according to its name.\n# *\n# * @internal\n# *\n# * @author\
    \ K\xE9vin Dunglas <dunglas@gmail.com>\n# */\n# interface ClassMetadataInterface\n\
    # {\n# /**\n# * Returns the name of the backing PHP class."
- name: addAttributeMetadata
  visibility: public
  parameters:
  - name: attributeMetadata
  comment: '# * Adds an {@link AttributeMetadataInterface}.'
- name: getAttributesMetadata
  visibility: public
  parameters: []
  comment: '# * Gets the list of {@link AttributeMetadataInterface}.

    # *

    # * @return array<string, AttributeMetadataInterface>'
- name: merge
  visibility: public
  parameters:
  - name: classMetadata
  comment: '# * Merges a {@link ClassMetadataInterface} in the current one.'
- name: getReflectionClass
  visibility: public
  parameters: []
  comment: '# * Returns a {@link \ReflectionClass} instance for this class.'
- name: getClassDiscriminatorMapping
  visibility: public
  parameters: []
  comment: null
- name: setClassDiscriminatorMapping
  visibility: public
  parameters:
  - name: mapping
  comment: null
traits: []
interfaces: []
