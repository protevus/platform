name: MetadataAwareNameConverterTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: SerializedName
  type: class
  source: Symfony\Component\Serializer\Attribute\SerializedName
- name: SerializedPath
  type: class
  source: Symfony\Component\Serializer\Attribute\SerializedPath
- name: LogicException
  type: class
  source: Symfony\Component\Serializer\Exception\LogicException
- name: ClassMetadataFactory
  type: class
  source: Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory
- name: ClassMetadataFactoryInterface
  type: class
  source: Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface
- name: AttributeLoader
  type: class
  source: Symfony\Component\Serializer\Mapping\Loader\AttributeLoader
- name: MetadataAwareNameConverter
  type: class
  source: Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter
- name: NameConverterInterface
  type: class
  source: Symfony\Component\Serializer\NameConverter\NameConverterInterface
- name: SerializedNameDummy
  type: class
  source: Symfony\Component\Serializer\Tests\Fixtures\Attributes\SerializedNameDummy
- name: OtherSerializedNameDummy
  type: class
  source: Symfony\Component\Serializer\Tests\Fixtures\OtherSerializedNameDummy
properties:
- name: foo
  visibility: public
  comment: null
methods:
- name: testNormalize
  visibility: public
  parameters:
  - name: propertyName
  - name: expected
  comment: "# * @author Fabien Bourigault <bourigaultfabien@gmail.com>\n# */\n# final\
    \ class MetadataAwareNameConverterTest extends TestCase\n# {\n# public function\
    \ testInterface()\n# {\n# $classMetadataFactory = $this->createMock(ClassMetadataFactoryInterface::class);\n\
    # $nameConverter = new MetadataAwareNameConverter($classMetadataFactory);\n# $this->assertInstanceOf(NameConverterInterface::class,\
    \ $nameConverter);\n# }\n# \n# /**\n# * @dataProvider attributeProvider"
- name: testNormalizeWithFallback
  visibility: public
  parameters:
  - name: propertyName
  - name: expected
  comment: '# * @dataProvider fallbackAttributeProvider'
- name: testDenormalize
  visibility: public
  parameters:
  - name: expected
  - name: propertyName
  comment: '# * @dataProvider attributeProvider'
- name: testDenormalizeWithFallback
  visibility: public
  parameters:
  - name: expected
  - name: propertyName
  comment: '# * @dataProvider fallbackAttributeProvider'
- name: attributeProvider
  visibility: public
  parameters: []
  comment: null
- name: fallbackAttributeProvider
  visibility: public
  parameters: []
  comment: null
- name: testNormalizeWithGroups
  visibility: public
  parameters:
  - name: propertyName
  - name: expected
  - name: context
    default: '[]'
  comment: '# * @dataProvider attributeAndContextProvider'
- name: testDenormalizeWithGroups
  visibility: public
  parameters:
  - name: expected
  - name: propertyName
  - name: context
    default: '[]'
  comment: '# * @dataProvider attributeAndContextProvider'
- name: attributeAndContextProvider
  visibility: public
  parameters: []
  comment: null
- name: testDenormalizeWithCacheContext
  visibility: public
  parameters: []
  comment: null
- name: testDenormalizeWithNestedPathAndName
  visibility: public
  parameters: []
  comment: null
- name: testNormalizeWithNestedPathAndName
  visibility: public
  parameters: []
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Component\Serializer\Attribute\SerializedName
- Symfony\Component\Serializer\Attribute\SerializedPath
- Symfony\Component\Serializer\Exception\LogicException
- Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory
- Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface
- Symfony\Component\Serializer\Mapping\Loader\AttributeLoader
- Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter
- Symfony\Component\Serializer\NameConverter\NameConverterInterface
- Symfony\Component\Serializer\Tests\Fixtures\Attributes\SerializedNameDummy
- Symfony\Component\Serializer\Tests\Fixtures\OtherSerializedNameDummy
interfaces: []
