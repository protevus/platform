name: NotNormalizableValueException
class_comment: '# * @author Christian Flothmann <christian.flothmann@sensiolabs.de>'
dependencies: []
properties: []
methods:
- name: createForUnexpectedDataType
  visibility: public
  parameters:
  - name: message
  - name: data
  - name: expectedTypes
  - name: path
    default: 'null'
  - name: useMessageForUser
    default: 'false'
  - name: code
    default: '0'
  - name: previous
    default: 'null'
  comment: "# * @author Christian Flothmann <christian.flothmann@sensiolabs.de>\n\
    # */\n# class NotNormalizableValueException extends UnexpectedValueException\n\
    # {\n# private ?string $currentType = null;\n# private ?array $expectedTypes =\
    \ null;\n# private ?string $path = null;\n# private bool $useMessageForUser =\
    \ false;\n# \n# /**\n# * @param list<string|\\Stringable> $expectedTypes\n# *\
    \ @param bool                     $useMessageForUser If the message passed to\
    \ this exception is something that can be shown\n# *                         \
    \                           safely to your user. In other words, avoid catching\
    \ other exceptions and\n# *                                                  \
    \  passing their message directly to this class."
- name: getCurrentType
  visibility: public
  parameters: []
  comment: null
- name: getExpectedTypes
  visibility: public
  parameters: []
  comment: '# * @return string[]|null'
- name: getPath
  visibility: public
  parameters: []
  comment: null
- name: canUseMessageForUser
  visibility: public
  parameters: []
  comment: null
traits: []
interfaces: []
