name: ServiceReferenceGraphNode
class_comment: '# * Represents a node in your service graph.

  # *

  # * Value is typically a definition, or an alias.

  # *

  # * @author Johannes M. Schmitt <schmittjoh@gmail.com>'
dependencies:
- name: Alias
  type: class
  source: Symfony\Component\DependencyInjection\Alias
- name: Definition
  type: class
  source: Symfony\Component\DependencyInjection\Definition
properties: []
methods:
- name: isAlias
  visibility: public
  parameters: []
  comment: "# * Represents a node in your service graph.\n# *\n# * Value is typically\
    \ a definition, or an alias.\n# *\n# * @author Johannes M. Schmitt <schmittjoh@gmail.com>\n\
    # */\n# class ServiceReferenceGraphNode\n# {\n# private array $inEdges = [];\n\
    # private array $outEdges = [];\n# \n# public function __construct(\n# private\
    \ string $id,\n# private mixed $value,\n# ) {\n# }\n# \n# public function addInEdge(ServiceReferenceGraphEdge\
    \ $edge): void\n# {\n# $this->inEdges[] = $edge;\n# }\n# \n# public function addOutEdge(ServiceReferenceGraphEdge\
    \ $edge): void\n# {\n# $this->outEdges[] = $edge;\n# }\n# \n# /**\n# * Checks\
    \ if the value of this node is an Alias."
- name: isDefinition
  visibility: public
  parameters: []
  comment: '# * Checks if the value of this node is a Definition.'
- name: getId
  visibility: public
  parameters: []
  comment: '# * Returns the identifier.'
- name: getInEdges
  visibility: public
  parameters: []
  comment: '# * Returns the in edges.

    # *

    # * @return ServiceReferenceGraphEdge[]'
- name: getOutEdges
  visibility: public
  parameters: []
  comment: '# * Returns the out edges.

    # *

    # * @return ServiceReferenceGraphEdge[]'
- name: getValue
  visibility: public
  parameters: []
  comment: '# * Returns the value of this Node.'
- name: clear
  visibility: public
  parameters: []
  comment: '# * Clears all edges.'
traits:
- Symfony\Component\DependencyInjection\Alias
- Symfony\Component\DependencyInjection\Definition
interfaces: []
