name: Compiler
class_comment: '# * This class is used to remove circular dependencies between individual
  passes.

  # *

  # * @author Johannes M. Schmitt <schmittjoh@gmail.com>'
dependencies:
- name: ContainerBuilder
  type: class
  source: Symfony\Component\DependencyInjection\ContainerBuilder
- name: EnvParameterException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\EnvParameterException
properties: []
methods:
- name: log
  visibility: public
  parameters:
  - name: pass
  - name: message
  comment: "# * This class is used to remove circular dependencies between individual\
    \ passes.\n# *\n# * @author Johannes M. Schmitt <schmittjoh@gmail.com>\n# */\n\
    # class Compiler\n# {\n# private PassConfig $passConfig;\n# private array $log\
    \ = [];\n# private ServiceReferenceGraph $serviceReferenceGraph;\n# \n# public\
    \ function __construct()\n# {\n# $this->passConfig = new PassConfig();\n# $this->serviceReferenceGraph\
    \ = new ServiceReferenceGraph();\n# }\n# \n# public function getPassConfig():\
    \ PassConfig\n# {\n# return $this->passConfig;\n# }\n# \n# public function getServiceReferenceGraph():\
    \ ServiceReferenceGraph\n# {\n# return $this->serviceReferenceGraph;\n# }\n# \n\
    # public function addPass(CompilerPassInterface $pass, string $type = PassConfig::TYPE_BEFORE_OPTIMIZATION,\
    \ int $priority = 0): void\n# {\n# $this->passConfig->addPass($pass, $type, $priority);\n\
    # }\n# \n# /**\n# * @final"
- name: getLog
  visibility: public
  parameters: []
  comment: null
- name: compile
  visibility: public
  parameters:
  - name: container
  comment: '# * Run the Compiler and process all Passes.'
traits:
- Symfony\Component\DependencyInjection\ContainerBuilder
- Symfony\Component\DependencyInjection\Exception\EnvParameterException
interfaces: []
