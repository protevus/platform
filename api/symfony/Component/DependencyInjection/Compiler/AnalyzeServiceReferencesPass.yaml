name: AnalyzeServiceReferencesPass
class_comment: '# * Run this pass before passes that need to know more about the relation
  of

  # * your services.

  # *

  # * This class will populate the ServiceReferenceGraph with information. You can

  # * retrieve the graph in other passes from the compiler.

  # *

  # * @author Johannes M. Schmitt <schmittjoh@gmail.com>

  # * @author Nicolas Grekas <p@tchwork.com>'
dependencies:
- name: ArgumentInterface
  type: class
  source: Symfony\Component\DependencyInjection\Argument\ArgumentInterface
- name: IteratorArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\IteratorArgument
- name: ContainerBuilder
  type: class
  source: Symfony\Component\DependencyInjection\ContainerBuilder
- name: ContainerInterface
  type: class
  source: Symfony\Component\DependencyInjection\ContainerInterface
- name: Definition
  type: class
  source: Symfony\Component\DependencyInjection\Definition
- name: LogicException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\LogicException
- name: Reference
  type: class
  source: Symfony\Component\DependencyInjection\Reference
- name: Expression
  type: class
  source: Symfony\Component\ExpressionLanguage\Expression
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: onlyConstructorArguments
    default: 'false'
  - name: hasProxyDumper
    default: 'true'
  comment: "# * Run this pass before passes that need to know more about the relation\
    \ of\n# * your services.\n# *\n# * This class will populate the ServiceReferenceGraph\
    \ with information. You can\n# * retrieve the graph in other passes from the compiler.\n\
    # *\n# * @author Johannes M. Schmitt <schmittjoh@gmail.com>\n# * @author Nicolas\
    \ Grekas <p@tchwork.com>\n# */\n# class AnalyzeServiceReferencesPass extends AbstractRecursivePass\n\
    # {\n# protected bool $skipScalars = true;\n# \n# private ServiceReferenceGraph\
    \ $graph;\n# private ?Definition $currentDefinition = null;\n# private bool $lazy;\n\
    # private bool $byConstructor;\n# private bool $byFactory;\n# private array $definitions;\n\
    # private array $aliases;\n# \n# /**\n# * @param bool $onlyConstructorArguments\
    \ Sets this Service Reference pass to ignore method calls"
- name: process
  visibility: public
  parameters:
  - name: container
  comment: '# * Processes a ContainerBuilder object to populate the service reference
    graph.'
- name: processValue
  visibility: protected
  parameters:
  - name: value
  - name: isRoot
    default: 'false'
  comment: null
- name: getDefinitionId
  visibility: private
  parameters:
  - name: id
  comment: null
traits:
- Symfony\Component\DependencyInjection\Argument\ArgumentInterface
- Symfony\Component\DependencyInjection\Argument\IteratorArgument
- Symfony\Component\DependencyInjection\ContainerBuilder
- Symfony\Component\DependencyInjection\ContainerInterface
- Symfony\Component\DependencyInjection\Definition
- Symfony\Component\DependencyInjection\Exception\LogicException
- Symfony\Component\DependencyInjection\Reference
- Symfony\Component\ExpressionLanguage\Expression
interfaces: []
