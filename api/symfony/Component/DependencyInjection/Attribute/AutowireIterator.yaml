name: AutowireIterator
class_comment: null
dependencies:
- name: TaggedIteratorArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\TaggedIteratorArgument
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: tag
  - name: indexAttribute
    default: 'null'
  - name: defaultIndexMethod
    default: 'null'
  - name: defaultPriorityMethod
    default: 'null'
  - name: exclude
    default: '[]'
  - name: excludeSelf
    default: 'true'
  comment: '# * Autowires an iterator of services based on a tag name.

    # */

    # #[\Attribute(\Attribute::TARGET_PARAMETER)]

    # class AutowireIterator extends Autowire

    # {

    # /**

    # * @see ServiceSubscriberInterface::getSubscribedServices()

    # *

    # * @param string               $tag                   A tag name to search for
    to populate the iterator

    # * @param string|null          $indexAttribute        The name of the attribute
    that defines the key referencing each service in the tagged collection

    # * @param string|null          $defaultIndexMethod    The static method that
    should be called to get each service''s key when their tag doesn''t define the
    previous attribute

    # * @param string|null          $defaultPriorityMethod The static method that
    should be called to get each service''s priority when their tag doesn''t define
    the "priority" attribute

    # * @param string|array<string> $exclude               A service id or a list
    of service ids to exclude

    # * @param bool                 $excludeSelf           Whether to automatically
    exclude the referencing service from the iterator'
traits:
- Symfony\Component\DependencyInjection\Argument\TaggedIteratorArgument
interfaces: []
