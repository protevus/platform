name: TaggedIterator
class_comment: null
dependencies: []
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: tag
  - name: indexAttribute
    default: 'null'
  - name: defaultIndexMethod
    default: 'null'
  - name: defaultPriorityMethod
    default: 'null'
  - name: exclude
    default: '[]'
  - name: excludeSelf
    default: 'true'
  comment: '# * Autowires an iterator of services based on a tag name.

    # *

    # * @deprecated since Symfony 7.1, use {@see AutowireIterator} instead.

    # */

    # #[\Attribute(\Attribute::TARGET_PARAMETER)]

    # class TaggedIterator extends AutowireIterator

    # {

    # /**

    # * @param string          $tag                   The tag to look for to populate
    the iterator

    # * @param string|null     $indexAttribute        The name of the attribute that
    defines the key referencing each service in the tagged collection

    # * @param string|null     $defaultIndexMethod    The static method that should
    be called to get each service''s key when their tag doesn''t define the previous
    attribute

    # * @param string|null     $defaultPriorityMethod The static method that should
    be called to get each service''s priority when their tag doesn''t define the "priority"
    attribute

    # * @param string|string[] $exclude               A service id or a list of service
    ids to exclude

    # * @param bool            $excludeSelf           Whether to automatically exclude
    the referencing service from the iterator'
traits: []
interfaces: []
