name: YamlFileLoaderTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: FileLocatorFileNotFoundException
  type: class
  source: Symfony\Component\Config\Exception\FileLocatorFileNotFoundException
- name: LoaderLoadException
  type: class
  source: Symfony\Component\Config\Exception\LoaderLoadException
- name: FileLocator
  type: class
  source: Symfony\Component\Config\FileLocator
- name: LoaderResolver
  type: class
  source: Symfony\Component\Config\Loader\LoaderResolver
- name: FileResource
  type: class
  source: Symfony\Component\Config\Resource\FileResource
- name: GlobResource
  type: class
  source: Symfony\Component\Config\Resource\GlobResource
- name: BoundArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\BoundArgument
- name: IteratorArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\IteratorArgument
- name: ServiceClosureArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\ServiceClosureArgument
- name: ServiceLocatorArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\ServiceLocatorArgument
- name: TaggedIteratorArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\TaggedIteratorArgument
- name: ResolveBindingsPass
  type: class
  source: Symfony\Component\DependencyInjection\Compiler\ResolveBindingsPass
- name: ContainerBuilder
  type: class
  source: Symfony\Component\DependencyInjection\ContainerBuilder
- name: ContainerInterface
  type: class
  source: Symfony\Component\DependencyInjection\ContainerInterface
- name: Definition
  type: class
  source: Symfony\Component\DependencyInjection\Definition
- name: InvalidArgumentException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\InvalidArgumentException
- name: LogicException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\LogicException
- name: RuntimeException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\RuntimeException
- name: IniFileLoader
  type: class
  source: Symfony\Component\DependencyInjection\Loader\IniFileLoader
- name: PhpFileLoader
  type: class
  source: Symfony\Component\DependencyInjection\Loader\PhpFileLoader
- name: XmlFileLoader
  type: class
  source: Symfony\Component\DependencyInjection\Loader\XmlFileLoader
- name: YamlFileLoader
  type: class
  source: Symfony\Component\DependencyInjection\Loader\YamlFileLoader
- name: Reference
  type: class
  source: Symfony\Component\DependencyInjection\Reference
- name: Bar
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\Bar
- name: BarInterface
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\BarInterface
- name: CaseSensitiveClass
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\CaseSensitiveClass
- name: FooClassWithEnumAttribute
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\FooClassWithEnumAttribute
- name: FooUnitEnum
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\FooUnitEnum
- name: NamedArgumentsDummy
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\NamedArgumentsDummy
- name: Prototype
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\Prototype
- name: Expression
  type: class
  source: Symfony\Component\ExpressionLanguage\Expression
- name: Yaml
  type: class
  source: Symfony\Component\Yaml\Yaml
properties: []
methods:
- name: setUpBeforeClass
  visibility: public
  parameters: []
  comment: null
- name: testLoadUnExistFile
  visibility: public
  parameters: []
  comment: null
- name: testLoadInvalidYamlFile
  visibility: public
  parameters: []
  comment: null
- name: testLoadInvalidFile
  visibility: public
  parameters:
  - name: file
  comment: '# * @dataProvider provideInvalidFiles'
- name: provideInvalidFiles
  visibility: public
  parameters: []
  comment: null
- name: testLoadParameters
  visibility: public
  parameters: []
  comment: null
- name: testLoadImports
  visibility: public
  parameters: []
  comment: null
- name: testLoadWithEnvironment
  visibility: public
  parameters: []
  comment: null
- name: testLoadServices
  visibility: public
  parameters: []
  comment: null
- name: testLoadShortSyntax
  visibility: public
  parameters: []
  comment: null
- name: testLoadDeprecatedDefinitionWithoutMessageKey
  visibility: public
  parameters: []
  comment: null
- name: testDeprecatedAliases
  visibility: public
  parameters: []
  comment: null
- name: testDeprecatedAliasesWithoutPackageAndVersion
  visibility: public
  parameters: []
  comment: null
- name: testFactorySyntaxError
  visibility: public
  parameters: []
  comment: null
- name: testStaticConstructorWithFactory
  visibility: public
  parameters: []
  comment: null
- name: testExtensions
  visibility: public
  parameters: []
  comment: null
- name: testPrependExtensionConfig
  visibility: public
  parameters: []
  comment: null
- name: testExtensionWithNullConfig
  visibility: public
  parameters: []
  comment: null
- name: testSupports
  visibility: public
  parameters: []
  comment: null
- name: testNonArrayTagsThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testTagWithoutNameThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testTaggedArgumentsWithIndex
  visibility: public
  parameters: []
  comment: null
- name: testServiceWithServiceLocatorArgument
  visibility: public
  parameters: []
  comment: null
- name: testParseServiceClosure
  visibility: public
  parameters: []
  comment: null
- name: testNameOnlyTagsAreAllowedAsString
  visibility: public
  parameters: []
  comment: null
- name: testTagWithAttributeArray
  visibility: public
  parameters: []
  comment: null
- name: testLoadYamlOnlyWithKeys
  visibility: public
  parameters: []
  comment: null
- name: testTagWithEmptyNameThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testTagWithNonStringNameThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testParsesIteratorArgument
  visibility: public
  parameters: []
  comment: null
- name: testAutowire
  visibility: public
  parameters: []
  comment: null
- name: testClassFromId
  visibility: public
  parameters: []
  comment: null
- name: testPrototype
  visibility: public
  parameters: []
  comment: null
- name: testPrototypeWithNullOrEmptyNode
  visibility: public
  parameters:
  - name: fileName
  comment: '# * @dataProvider prototypeWithNullOrEmptyNodeDataProvider'
- name: prototypeWithNullOrEmptyNodeDataProvider
  visibility: public
  parameters: []
  comment: null
- name: testPrototypeWithNamespace
  visibility: public
  parameters: []
  comment: null
- name: testPrototypeWithNamespaceAndNoResource
  visibility: public
  parameters: []
  comment: null
- name: testDefaults
  visibility: public
  parameters: []
  comment: null
- name: testNamedArguments
  visibility: public
  parameters: []
  comment: null
- name: testInstanceof
  visibility: public
  parameters: []
  comment: null
- name: testInstanceOfAndChildDefinition
  visibility: public
  parameters: []
  comment: null
- name: testAutoConfigureAndChildDefinition
  visibility: public
  parameters: []
  comment: null
- name: testDefaultsAndChildDefinition
  visibility: public
  parameters: []
  comment: null
- name: testChildDefinitionWithWrongSyntaxThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testDecoratedServicesWithWrongSyntaxThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testDecoratedServicesWithWrongOnInvalidSyntaxThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testInvalidTagsWithDefaults
  visibility: public
  parameters: []
  comment: null
- name: testUnderscoreServiceId
  visibility: public
  parameters: []
  comment: null
- name: testAnonymousServices
  visibility: public
  parameters: []
  comment: null
- name: testAnonymousServicesInDifferentFilesWithSameNameDoNotConflict
  visibility: public
  parameters: []
  comment: null
- name: testAnonymousServicesInInstanceof
  visibility: public
  parameters: []
  comment: null
- name: testAnonymousServicesWithAliases
  visibility: public
  parameters: []
  comment: null
- name: testAnonymousServicesInParameters
  visibility: public
  parameters: []
  comment: null
- name: testAutoConfigureInstanceof
  visibility: public
  parameters: []
  comment: null
- name: testEmptyDefaultsThrowsClearException
  visibility: public
  parameters: []
  comment: null
- name: testEmptyInstanceofThrowsClearException
  visibility: public
  parameters: []
  comment: null
- name: testUnsupportedKeywordThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testUnsupportedKeywordInServiceAliasThrowsException
  visibility: public
  parameters: []
  comment: null
- name: testCaseSensitivity
  visibility: public
  parameters: []
  comment: null
- name: testBindings
  visibility: public
  parameters: []
  comment: null
- name: testProcessNotExistingActionParam
  visibility: public
  parameters: []
  comment: null
- name: testFqcnLazyProxy
  visibility: public
  parameters: []
  comment: null
- name: testServiceWithSameNameAsInterfaceAndFactoryIsNotTagged
  visibility: public
  parameters: []
  comment: null
- name: testOverriddenDefaultsBindings
  visibility: public
  parameters: []
  comment: '# * The pass may throw an exception, which will cause the test to fail.'
- name: testDefaultValueOfTagged
  visibility: public
  parameters: []
  comment: '# * When creating a tagged iterator using the array syntax, all optional
    parameters should be properly handled.'
- name: testEnumeration
  visibility: public
  parameters: []
  comment: null
- name: testInvalidEnumeration
  visibility: public
  parameters: []
  comment: null
- name: testReturnsClone
  visibility: public
  parameters: []
  comment: null
- name: testSinglyImplementedInterfacesInMultipleResources
  visibility: public
  parameters: []
  comment: null
- name: testNotSinglyImplementedInterfacesInMultipleResources
  visibility: public
  parameters: []
  comment: null
- name: testNotSinglyImplementedInterfacesInMultipleResourcesWithPreviouslyRegisteredAlias
  visibility: public
  parameters: []
  comment: null
- name: testNotSinglyImplementedInterfacesInMultipleResourcesWithPreviouslyRegisteredAlias2
  visibility: public
  parameters: []
  comment: null
- name: testAlternativeMethodCalls
  visibility: public
  parameters: []
  comment: null
- name: testStack
  visibility: public
  parameters: []
  comment: null
- name: testWhenEnv
  visibility: public
  parameters: []
  comment: null
- name: testClosure
  visibility: public
  parameters: []
  comment: null
- name: testFromCallable
  visibility: public
  parameters: []
  comment: null
- name: testStaticConstructor
  visibility: public
  parameters: []
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Component\Config\Exception\FileLocatorFileNotFoundException
- Symfony\Component\Config\Exception\LoaderLoadException
- Symfony\Component\Config\FileLocator
- Symfony\Component\Config\Loader\LoaderResolver
- Symfony\Component\Config\Resource\FileResource
- Symfony\Component\Config\Resource\GlobResource
- Symfony\Component\DependencyInjection\Argument\BoundArgument
- Symfony\Component\DependencyInjection\Argument\IteratorArgument
- Symfony\Component\DependencyInjection\Argument\ServiceClosureArgument
- Symfony\Component\DependencyInjection\Argument\ServiceLocatorArgument
- Symfony\Component\DependencyInjection\Argument\TaggedIteratorArgument
- Symfony\Component\DependencyInjection\Compiler\ResolveBindingsPass
- Symfony\Component\DependencyInjection\ContainerBuilder
- Symfony\Component\DependencyInjection\ContainerInterface
- Symfony\Component\DependencyInjection\Definition
- Symfony\Component\DependencyInjection\Exception\InvalidArgumentException
- Symfony\Component\DependencyInjection\Exception\LogicException
- Symfony\Component\DependencyInjection\Exception\RuntimeException
- Symfony\Component\DependencyInjection\Loader\IniFileLoader
- Symfony\Component\DependencyInjection\Loader\PhpFileLoader
- Symfony\Component\DependencyInjection\Loader\XmlFileLoader
- Symfony\Component\DependencyInjection\Loader\YamlFileLoader
- Symfony\Component\DependencyInjection\Reference
- Symfony\Component\DependencyInjection\Tests\Fixtures\Bar
- Symfony\Component\DependencyInjection\Tests\Fixtures\BarInterface
- Symfony\Component\DependencyInjection\Tests\Fixtures\CaseSensitiveClass
- Symfony\Component\DependencyInjection\Tests\Fixtures\FooClassWithEnumAttribute
- Symfony\Component\DependencyInjection\Tests\Fixtures\FooUnitEnum
- Symfony\Component\DependencyInjection\Tests\Fixtures\NamedArgumentsDummy
- Symfony\Component\DependencyInjection\Tests\Fixtures\Prototype
- Symfony\Component\ExpressionLanguage\Expression
- Symfony\Component\Yaml\Yaml
interfaces: []
