name: ContainerBuilderTest
class_comment: null
dependencies:
- name: TestCase
  type: class
  source: PHPUnit\Framework\TestCase
- name: ExpectUserDeprecationMessageTrait
  type: class
  source: Symfony\Bridge\PhpUnit\ExpectUserDeprecationMessageTrait
- name: DirectoryResource
  type: class
  source: Symfony\Component\Config\Resource\DirectoryResource
- name: FileResource
  type: class
  source: Symfony\Component\Config\Resource\FileResource
- name: ResourceInterface
  type: class
  source: Symfony\Component\Config\Resource\ResourceInterface
- name: Alias
  type: class
  source: Symfony\Component\DependencyInjection\Alias
- name: AbstractArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\AbstractArgument
- name: IteratorArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\IteratorArgument
- name: RewindableGenerator
  type: class
  source: Symfony\Component\DependencyInjection\Argument\RewindableGenerator
- name: ServiceClosureArgument
  type: class
  source: Symfony\Component\DependencyInjection\Argument\ServiceClosureArgument
- name: ChildDefinition
  type: class
  source: Symfony\Component\DependencyInjection\ChildDefinition
- name: CompilerPassInterface
  type: class
  source: Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface
- name: PassConfig
  type: class
  source: Symfony\Component\DependencyInjection\Compiler\PassConfig
- name: ContainerBuilder
  type: class
  source: Symfony\Component\DependencyInjection\ContainerBuilder
- name: ContainerInterface
  type: class
  source: Symfony\Component\DependencyInjection\ContainerInterface
- name: Definition
  type: class
  source: Symfony\Component\DependencyInjection\Definition
- name: BadMethodCallException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\BadMethodCallException
- name: EnvNotFoundException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\EnvNotFoundException
- name: InvalidArgumentException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\InvalidArgumentException
- name: ParameterCircularReferenceException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\ParameterCircularReferenceException
- name: ParameterNotFoundException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\ParameterNotFoundException
- name: RuntimeException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\RuntimeException
- name: ServiceCircularReferenceException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\ServiceCircularReferenceException
- name: ServiceNotFoundException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException
- name: ExtensionInterface
  type: class
  source: Symfony\Component\DependencyInjection\Extension\ExtensionInterface
- name: RealServiceInstantiator
  type: class
  source: Symfony\Component\DependencyInjection\LazyProxy\Instantiator\RealServiceInstantiator
- name: ClosureLoader
  type: class
  source: Symfony\Component\DependencyInjection\Loader\ClosureLoader
- name: EnvPlaceholderParameterBag
  type: class
  source: Symfony\Component\DependencyInjection\ParameterBag\EnvPlaceholderParameterBag
- name: ParameterBag
  type: class
  source: Symfony\Component\DependencyInjection\ParameterBag\ParameterBag
- name: ParameterBagInterface
  type: class
  source: Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface
- name: Reference
  type: class
  source: Symfony\Component\DependencyInjection\Reference
- name: ServiceLocator
  type: class
  source: Symfony\Component\DependencyInjection\ServiceLocator
- name: Foo
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Compiler\Foo
- name: SingleMethodInterface
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Compiler\SingleMethodInterface
- name: Wither
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Compiler\Wither
- name: CaseSensitiveClass
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\CaseSensitiveClass
- name: CustomDefinition
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\CustomDefinition
- name: FooWithAbstractArgument
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\FooWithAbstractArgument
- name: ScalarFactory
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\ScalarFactory
- name: SimilarArgumentsDummy
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\SimilarArgumentsDummy
- name: StringBackedEnum
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\StringBackedEnum
- name: WitherStaticReturnType
  type: class
  source: Symfony\Component\DependencyInjection\Tests\Fixtures\WitherStaticReturnType
- name: TypedReference
  type: class
  source: Symfony\Component\DependencyInjection\TypedReference
- name: Expression
  type: class
  source: Symfony\Component\ExpressionLanguage\Expression
- name: ExpectUserDeprecationMessageTrait
  type: class
  source: ExpectUserDeprecationMessageTrait
properties:
- name: first
  visibility: public
  comment: null
- name: second
  visibility: public
  comment: null
methods:
- name: testDefaultRegisteredDefinitions
  visibility: public
  parameters: []
  comment: null
- name: testDefinitions
  visibility: public
  parameters: []
  comment: null
- name: testDeprecateParameter
  visibility: public
  parameters: []
  comment: '# * The test should be kept in the group as it always expects a deprecation.

    # *

    # * @group legacy'
- name: testParameterDeprecationIsTrgiggeredWhenCompiled
  visibility: public
  parameters: []
  comment: '# * The test should be kept in the group as it always expects a deprecation.

    # *

    # * @group legacy'
- name: testDeprecateParameterThrowsWhenParameterIsUndefined
  visibility: public
  parameters: []
  comment: null
- name: testDeprecateParameterThrowsWhenParameterBagIsNotInternal
  visibility: public
  parameters: []
  comment: null
- name: clear
  visibility: public
  parameters: []
  comment: null
- name: add
  visibility: public
  parameters:
  - name: parameters
  comment: null
- name: all
  visibility: public
  parameters: []
  comment: null
- name: get
  visibility: public
  parameters:
  - name: name
  comment: null
- name: remove
  visibility: public
  parameters:
  - name: name
  comment: null
- name: set
  visibility: public
  parameters:
  - name: name
  - name: value
  comment: null
- name: has
  visibility: public
  parameters:
  - name: name
  comment: null
- name: resolve
  visibility: public
  parameters: []
  comment: null
- name: resolveValue
  visibility: public
  parameters:
  - name: value
  comment: null
- name: escapeValue
  visibility: public
  parameters:
  - name: value
  comment: null
- name: unescapeValue
  visibility: public
  parameters:
  - name: value
  comment: null
- name: testRegister
  visibility: public
  parameters: []
  comment: null
- name: testAutowire
  visibility: public
  parameters: []
  comment: null
- name: testHas
  visibility: public
  parameters: []
  comment: null
- name: testGetThrowsExceptionIfServiceDoesNotExist
  visibility: public
  parameters: []
  comment: null
- name: testGetReturnsNullIfServiceDoesNotExistAndInvalidReferenceIsUsed
  visibility: public
  parameters: []
  comment: null
- name: testGetThrowsCircularReferenceExceptionIfServiceHasReferenceToItself
  visibility: public
  parameters: []
  comment: null
- name: testGetReturnsSameInstanceWhenServiceIsShared
  visibility: public
  parameters: []
  comment: null
- name: testGetCreatesServiceBasedOnDefinition
  visibility: public
  parameters: []
  comment: null
- name: testGetReturnsRegisteredService
  visibility: public
  parameters: []
  comment: null
- name: testRegisterDoesNotOverrideExistingService
  visibility: public
  parameters: []
  comment: null
- name: testNonSharedServicesReturnsDifferentInstances
  visibility: public
  parameters: []
  comment: null
- name: testBadAliasId
  visibility: public
  parameters:
  - name: id
  comment: '# * @dataProvider provideBadId'
- name: testBadDefinitionId
  visibility: public
  parameters:
  - name: id
  comment: '# * @dataProvider provideBadId'
- name: provideBadId
  visibility: public
  parameters: []
  comment: null
- name: testGetUnsetLoadingServiceWhenCreateServiceThrowsAnException
  visibility: public
  parameters: []
  comment: null
- name: testGetServiceIds
  visibility: public
  parameters: []
  comment: null
- name: testAliases
  visibility: public
  parameters: []
  comment: null
- name: testGetAliases
  visibility: public
  parameters: []
  comment: null
- name: testSetAliases
  visibility: public
  parameters: []
  comment: null
- name: testAddAliases
  visibility: public
  parameters: []
  comment: null
- name: testSetReplacesAlias
  visibility: public
  parameters: []
  comment: null
- name: testAliasesKeepInvalidBehavior
  visibility: public
  parameters: []
  comment: null
- name: testAddGetCompilerPass
  visibility: public
  parameters: []
  comment: null
- name: testCreateService
  visibility: public
  parameters: []
  comment: null
- name: testCreateProxyWithRealServiceInstantiator
  visibility: public
  parameters: []
  comment: null
- name: testCreateLazyProxy
  visibility: public
  parameters: []
  comment: null
- name: testClosureProxy
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceClass
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceArguments
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceFactory
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceMethodCalls
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceMethodCallsWithEscapedParam
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceProperties
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceConfigurator
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceWithIteratorArgument
  visibility: public
  parameters: []
  comment: null
- name: testCreateSyntheticService
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceWithExpression
  visibility: public
  parameters: []
  comment: null
- name: testEnvExpressionFunction
  visibility: public
  parameters: []
  comment: null
- name: testGetEnvCountersWithEnum
  visibility: public
  parameters: []
  comment: null
- name: testCreateServiceWithAbstractArgument
  visibility: public
  parameters: []
  comment: null
- name: testResolveServices
  visibility: public
  parameters: []
  comment: null
- name: testResolveServicesWithDecoratedDefinition
  visibility: public
  parameters: []
  comment: null
- name: testResolveServicesWithCustomDefinitionClass
  visibility: public
  parameters: []
  comment: null
- name: testMerge
  visibility: public
  parameters: []
  comment: null
- name: testMergeWithExcludedServices
  visibility: public
  parameters: []
  comment: null
- name: testMergeThrowsExceptionForDuplicateAutomaticInstanceofDefinitions
  visibility: public
  parameters: []
  comment: null
- name: testResolveEnvValues
  visibility: public
  parameters: []
  comment: null
- name: testResolveEnvValuesWithArray
  visibility: public
  parameters: []
  comment: null
- name: testCompileWithResolveEnv
  visibility: public
  parameters: []
  comment: null
- name: testCompileWithArrayResolveEnv
  visibility: public
  parameters: []
  comment: null
- name: testCompileWithArrayAndAnotherResolveEnv
  visibility: public
  parameters: []
  comment: null
- name: testCompileWithArrayInStringResolveEnv
  visibility: public
  parameters: []
  comment: null
- name: testCompileWithResolveMissingEnv
  visibility: public
  parameters: []
  comment: null
- name: testDynamicEnv
  visibility: public
  parameters: []
  comment: null
- name: testFallbackEnv
  visibility: public
  parameters: []
  comment: null
- name: testCastEnv
  visibility: public
  parameters: []
  comment: null
- name: testEnvAreNullable
  visibility: public
  parameters: []
  comment: null
- name: testEnvInId
  visibility: public
  parameters: []
  comment: null
- name: testCircularDynamicEnv
  visibility: public
  parameters: []
  comment: null
- name: testMergeLogicException
  visibility: public
  parameters: []
  comment: null
- name: testfindTaggedServiceIds
  visibility: public
  parameters: []
  comment: null
- name: testFindUnusedTags
  visibility: public
  parameters: []
  comment: null
- name: testFindDefinition
  visibility: public
  parameters: []
  comment: null
- name: testAddObjectResource
  visibility: public
  parameters: []
  comment: null
- name: testGetReflectionClass
  visibility: public
  parameters: []
  comment: null
- name: testGetReflectionClassOnInternalTypes
  visibility: public
  parameters: []
  comment: null
- name: testCompilesClassDefinitionsOfLazyServices
  visibility: public
  parameters: []
  comment: null
- name: testResources
  visibility: public
  parameters: []
  comment: null
- name: testFileExists
  visibility: public
  parameters: []
  comment: null
- name: testExtension
  visibility: public
  parameters: []
  comment: null
- name: testRegisteredButNotLoadedExtension
  visibility: public
  parameters: []
  comment: null
- name: testRegisteredAndLoadedExtension
  visibility: public
  parameters: []
  comment: null
- name: testPrivateServiceUser
  visibility: public
  parameters: []
  comment: null
- name: testThrowsExceptionWhenSetServiceOnACompiledContainer
  visibility: public
  parameters: []
  comment: null
- name: testNoExceptionWhenAddServiceOnACompiledContainer
  visibility: public
  parameters: []
  comment: null
- name: testNoExceptionWhenSetSyntheticServiceOnACompiledContainer
  visibility: public
  parameters: []
  comment: null
- name: testThrowsExceptionWhenSetDefinitionOnACompiledContainer
  visibility: public
  parameters: []
  comment: null
- name: testExtensionConfig
  visibility: public
  parameters: []
  comment: null
- name: testAbstractAlias
  visibility: public
  parameters: []
  comment: null
- name: testLazyLoadedService
  visibility: public
  parameters: []
  comment: null
- name: testInlinedDefinitions
  visibility: public
  parameters: []
  comment: null
- name: testThrowsCircularExceptionForCircularAliases
  visibility: public
  parameters: []
  comment: null
- name: testInitializePropertiesBeforeMethodCalls
  visibility: public
  parameters: []
  comment: null
- name: testAutowiring
  visibility: public
  parameters: []
  comment: null
- name: testClassFromId
  visibility: public
  parameters: []
  comment: null
- name: testNoClassFromGlobalNamespaceClassId
  visibility: public
  parameters: []
  comment: null
- name: testNoClassFromGlobalNamespaceClassIdWithLeadingSlash
  visibility: public
  parameters: []
  comment: null
- name: testNoClassFromNamespaceClassIdWithLeadingSlash
  visibility: public
  parameters: []
  comment: null
- name: testNoClassFromNonClassId
  visibility: public
  parameters: []
  comment: null
- name: testNoClassFromNsSeparatorId
  visibility: public
  parameters: []
  comment: null
- name: testGetThrownServiceNotFoundExceptionWithCorrectServiceId
  visibility: public
  parameters: []
  comment: null
- name: testUnusedServiceRemovedByPassAndServiceNotFoundExceptionWasNotThrown
  visibility: public
  parameters: []
  comment: null
- name: testServiceLocator
  visibility: public
  parameters: []
  comment: null
- name: testUninitializedReference
  visibility: public
  parameters: []
  comment: null
- name: testAlmostCircular
  visibility: public
  parameters:
  - name: visibility
  comment: '# * @dataProvider provideAlmostCircular'
- name: provideAlmostCircular
  visibility: public
  parameters: []
  comment: null
- name: testRegisterForAutoconfiguration
  visibility: public
  parameters: []
  comment: null
- name: testRegisterAliasForArgument
  visibility: public
  parameters: []
  comment: null
- name: testCaseSensitivity
  visibility: public
  parameters: []
  comment: null
- name: testParameterWithMixedCase
  visibility: public
  parameters: []
  comment: null
- name: testArgumentsHaveHigherPriorityThanBindings
  visibility: public
  parameters: []
  comment: null
- name: testUninitializedSyntheticReference
  visibility: public
  parameters: []
  comment: null
- name: testIdCanBeAnObjectAsLongAsItCanBeCastToString
  visibility: public
  parameters: []
  comment: null
- name: testErroredDefinition
  visibility: public
  parameters: []
  comment: null
- name: testServiceLocatorArgument
  visibility: public
  parameters: []
  comment: null
- name: testDecoratedSelfReferenceInvolvingPrivateServices
  visibility: public
  parameters: []
  comment: null
- name: testScalarService
  visibility: public
  parameters: []
  comment: null
- name: testWither
  visibility: public
  parameters: []
  comment: null
- name: testLazyWither
  visibility: public
  parameters: []
  comment: null
- name: testWitherWithStaticReturnType
  visibility: public
  parameters: []
  comment: null
- name: testAutoAliasing
  visibility: public
  parameters: []
  comment: null
- name: testDirectlyAccessingDeprecatedPublicService
  visibility: public
  parameters: []
  comment: '# * The test should be kept in the group as it always expects a deprecation.

    # *

    # * @group legacy'
- name: testReferencingDeprecatedPublicService
  visibility: public
  parameters: []
  comment: null
- name: testExpressionInFactory
  visibility: public
  parameters: []
  comment: null
- name: testFindTags
  visibility: public
  parameters: []
  comment: null
- name: testNamedArgumentAfterCompile
  visibility: public
  parameters: []
  comment: null
- name: testNamedArgumentBeforeCompile
  visibility: public
  parameters: []
  comment: null
- name: testLazyClosure
  visibility: public
  parameters: []
  comment: null
- name: __construct
  visibility: public
  parameters:
  - name: a
  comment: null
- name: __construct
  visibility: public
  parameters:
  - name: first
    default: ''''''
  - name: second
    default: ''''''
  comment: null
traits:
- PHPUnit\Framework\TestCase
- Symfony\Bridge\PhpUnit\ExpectUserDeprecationMessageTrait
- Symfony\Component\Config\Resource\DirectoryResource
- Symfony\Component\Config\Resource\FileResource
- Symfony\Component\Config\Resource\ResourceInterface
- Symfony\Component\DependencyInjection\Alias
- Symfony\Component\DependencyInjection\Argument\AbstractArgument
- Symfony\Component\DependencyInjection\Argument\IteratorArgument
- Symfony\Component\DependencyInjection\Argument\RewindableGenerator
- Symfony\Component\DependencyInjection\Argument\ServiceClosureArgument
- Symfony\Component\DependencyInjection\ChildDefinition
- Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface
- Symfony\Component\DependencyInjection\Compiler\PassConfig
- Symfony\Component\DependencyInjection\ContainerBuilder
- Symfony\Component\DependencyInjection\ContainerInterface
- Symfony\Component\DependencyInjection\Definition
- Symfony\Component\DependencyInjection\Exception\BadMethodCallException
- Symfony\Component\DependencyInjection\Exception\EnvNotFoundException
- Symfony\Component\DependencyInjection\Exception\InvalidArgumentException
- Symfony\Component\DependencyInjection\Exception\ParameterCircularReferenceException
- Symfony\Component\DependencyInjection\Exception\ParameterNotFoundException
- Symfony\Component\DependencyInjection\Exception\RuntimeException
- Symfony\Component\DependencyInjection\Exception\ServiceCircularReferenceException
- Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException
- Symfony\Component\DependencyInjection\Extension\ExtensionInterface
- Symfony\Component\DependencyInjection\LazyProxy\Instantiator\RealServiceInstantiator
- Symfony\Component\DependencyInjection\Loader\ClosureLoader
- Symfony\Component\DependencyInjection\ParameterBag\EnvPlaceholderParameterBag
- Symfony\Component\DependencyInjection\ParameterBag\ParameterBag
- Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface
- Symfony\Component\DependencyInjection\Reference
- Symfony\Component\DependencyInjection\ServiceLocator
- Symfony\Component\DependencyInjection\Tests\Compiler\Foo
- Symfony\Component\DependencyInjection\Tests\Compiler\SingleMethodInterface
- Symfony\Component\DependencyInjection\Tests\Compiler\Wither
- Symfony\Component\DependencyInjection\Tests\Fixtures\CaseSensitiveClass
- Symfony\Component\DependencyInjection\Tests\Fixtures\CustomDefinition
- Symfony\Component\DependencyInjection\Tests\Fixtures\FooWithAbstractArgument
- Symfony\Component\DependencyInjection\Tests\Fixtures\ScalarFactory
- Symfony\Component\DependencyInjection\Tests\Fixtures\SimilarArgumentsDummy
- Symfony\Component\DependencyInjection\Tests\Fixtures\StringBackedEnum
- Symfony\Component\DependencyInjection\Tests\Fixtures\WitherStaticReturnType
- Symfony\Component\DependencyInjection\TypedReference
- Symfony\Component\ExpressionLanguage\Expression
- ExpectUserDeprecationMessageTrait
interfaces:
- a
- ParameterBagInterface
- X
- X
