name: services_errored_definition
class_comment: '# * @internal This class has been auto-generated by the Symfony Dependency
  Injection Component.'
dependencies:
- name: RewindableGenerator
  type: class
  source: Symfony\Component\DependencyInjection\Argument\RewindableGenerator
- name: ContainerInterface
  type: class
  source: Symfony\Component\DependencyInjection\ContainerInterface
- name: Container
  type: class
  source: Symfony\Component\DependencyInjection\Container
- name: LogicException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\LogicException
- name: ParameterNotFoundException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\ParameterNotFoundException
- name: RuntimeException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\RuntimeException
- name: FrozenParameterBag
  type: class
  source: Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag
- name: ParameterBagInterface
  type: class
  source: Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface
properties:
- name: parameters
  visibility: protected
  comment: null
- name: loadedDynamicParameters
  visibility: private
  comment: null
- name: dynamicParameters
  visibility: private
  comment: null
methods:
- name: getBARService
  visibility: protected
  parameters:
  - name: container
  comment: "# * @internal This class has been auto-generated by the Symfony Dependency\
    \ Injection Component.\n# */\n# class Symfony_DI_PhpDumper_Errored_Definition\
    \ extends Container\n# {\n# protected $parameters = [];\n# \n# public function\
    \ __construct()\n# {\n# $this->parameters = $this->getDefaultParameters();\n#\
    \ \n# $this->services = $this->privates = [];\n# $this->syntheticIds = [\n# 'request'\
    \ => true,\n# ];\n# $this->methodMap = [\n# 'BAR' => 'getBARService',\n# 'BAR2'\
    \ => 'getBAR2Service',\n# 'a_service' => 'getAServiceService',\n# 'b_service'\
    \ => 'getBServiceService',\n# 'bar' => 'getBar3Service',\n# 'bar2' => 'getBar22Service',\n\
    # 'baz' => 'getBazService',\n# 'configured_service' => 'getConfiguredServiceService',\n\
    # 'configured_service_simple' => 'getConfiguredServiceSimpleService',\n# 'decorator_service'\
    \ => 'getDecoratorServiceService',\n# 'decorator_service_with_name' => 'getDecoratorServiceWithNameService',\n\
    # 'deprecated_service' => 'getDeprecatedServiceService',\n# 'factory_service'\
    \ => 'getFactoryServiceService',\n# 'factory_service_simple' => 'getFactoryServiceSimpleService',\n\
    # 'foo' => 'getFooService',\n# 'foo.baz' => 'getFoo_BazService',\n# 'foo_bar'\
    \ => 'getFooBarService',\n# 'foo_with_inline' => 'getFooWithInlineService',\n\
    # 'lazy_context' => 'getLazyContextService',\n# 'lazy_context_ignore_invalid_ref'\
    \ => 'getLazyContextIgnoreInvalidRefService',\n# 'method_call1' => 'getMethodCall1Service',\n\
    # 'new_factory_service' => 'getNewFactoryServiceService',\n# 'preload_sidekick'\
    \ => 'getPreloadSidekickService',\n# 'runtime_error' => 'getRuntimeErrorService',\n\
    # 'service_from_static_method' => 'getServiceFromStaticMethodService',\n# 'tagged_iterator'\
    \ => 'getTaggedIteratorService',\n# ];\n# $this->aliases = [\n# 'alias_for_alias'\
    \ => 'foo',\n# 'alias_for_foo' => 'foo',\n# 'decorated' => 'decorator_service_with_name',\n\
    # ];\n# }\n# \n# public function compile(): void\n# {\n# throw new LogicException('You\
    \ cannot compile a dumped container that was already compiled.');\n# }\n# \n#\
    \ public function isCompiled(): bool\n# {\n# return true;\n# }\n# \n# public function\
    \ getRemovedIds(): array\n# {\n# return [\n# 'a_factory' => true,\n# 'configurator_service'\
    \ => true,\n# 'configurator_service_simple' => true,\n# 'decorated.pif-pouf' =>\
    \ true,\n# 'decorator_service.inner' => true,\n# 'errored_definition' => true,\n\
    # 'factory_simple' => true,\n# 'inlined' => true,\n# 'new_factory' => true,\n\
    # 'tagged_iterator_foo' => true,\n# ];\n# }\n# \n# /**\n# * Gets the public 'BAR'\
    \ shared service.\n# *\n# * @return \\stdClass"
- name: getBAR2Service
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''BAR2'' shared service.

    # *

    # * @return \stdClass'
- name: getAServiceService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''a_service'' shared service.

    # *

    # * @return \Bar'
- name: getBServiceService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''b_service'' shared service.

    # *

    # * @return \Bar'
- name: getBar3Service
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''bar'' shared service.

    # *

    # * @return \Bar\FooClass'
- name: getBar22Service
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''bar2'' shared service.

    # *

    # * @return \stdClass'
- name: getBazService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''baz'' shared service.

    # *

    # * @return \Baz'
- name: getConfiguredServiceService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''configured_service'' shared service.

    # *

    # * @return \stdClass'
- name: getConfiguredServiceSimpleService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''configured_service_simple'' shared service.

    # *

    # * @return \stdClass'
- name: getDecoratorServiceService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''decorator_service'' shared service.

    # *

    # * @return \stdClass'
- name: getDecoratorServiceWithNameService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''decorator_service_with_name'' shared service.

    # *

    # * @return \stdClass'
- name: getDeprecatedServiceService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''deprecated_service'' shared service.

    # *

    # * @return \stdClass

    # *

    # * @deprecated Since vendor/package 1.1: The "deprecated_service" service is
    deprecated. You should stop using it, as it will be removed in the future.'
- name: getFactoryServiceService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''factory_service'' shared service.

    # *

    # * @return \Bar'
- name: getFactoryServiceSimpleService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''factory_service_simple'' shared service.

    # *

    # * @return \Bar'
- name: getFooService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''foo'' shared service.

    # *

    # * @return \Bar\FooClass'
- name: getFoo_BazService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''foo.baz'' shared service.

    # *

    # * @return \BazClass'
- name: getFooBarService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''foo_bar'' service.

    # *

    # * @return \Bar\FooClass'
- name: getFooWithInlineService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''foo_with_inline'' shared service.

    # *

    # * @return \Foo'
- name: getLazyContextService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''lazy_context'' shared service.

    # *

    # * @return \LazyContext'
- name: getLazyContextIgnoreInvalidRefService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''lazy_context_ignore_invalid_ref'' shared service.

    # *

    # * @return \LazyContext'
- name: getMethodCall1Service
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''method_call1'' shared service.

    # *

    # * @return \Bar\FooClass'
- name: getNewFactoryServiceService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''new_factory_service'' shared service.

    # *

    # * @return \FooBarBaz'
- name: getPreloadSidekickService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''preload_sidekick'' shared service.

    # *

    # * @return \stdClass'
- name: getRuntimeErrorService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''runtime_error'' shared service.

    # *

    # * @return \stdClass'
- name: getServiceFromStaticMethodService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''service_from_static_method'' shared service.

    # *

    # * @return \Bar\FooClass'
- name: getTaggedIteratorService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the public ''tagged_iterator'' shared service.

    # *

    # * @return \Bar'
- name: getFactorySimpleService
  visibility: protected
  parameters:
  - name: container
  comment: '# * Gets the private ''factory_simple'' shared service.

    # *

    # * @return \SimpleFactoryClass

    # *

    # * @deprecated Since vendor/package 1.1: The "factory_simple" service is deprecated.
    You should stop using it, as it will be removed in the future.'
- name: getParameter
  visibility: public
  parameters:
  - name: name
  comment: null
- name: hasParameter
  visibility: public
  parameters:
  - name: name
  comment: null
- name: setParameter
  visibility: public
  parameters:
  - name: name
  - name: value
  comment: null
- name: getParameterBag
  visibility: public
  parameters: []
  comment: null
- name: getDynamicParameter
  visibility: private
  parameters:
  - name: name
  comment: null
- name: getDefaultParameters
  visibility: protected
  parameters: []
  comment: null
traits:
- Symfony\Component\DependencyInjection\Argument\RewindableGenerator
- Symfony\Component\DependencyInjection\ContainerInterface
- Symfony\Component\DependencyInjection\Container
- Symfony\Component\DependencyInjection\Exception\LogicException
- Symfony\Component\DependencyInjection\Exception\ParameterNotFoundException
- Symfony\Component\DependencyInjection\Exception\RuntimeException
- Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag
- Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface
interfaces: []
