name: ExpressionLanguageProvider
class_comment: '# * Define some ExpressionLanguage functions.

  # *

  # * To get a service, use service(''request'').

  # * To get a parameter, use parameter(''kernel.debug'').

  # * To get an env variable, use env(''SOME_VARIABLE'').

  # *

  # * @author Fabien Potencier <fabien@symfony.com>'
dependencies:
- name: LogicException
  type: class
  source: Symfony\Component\DependencyInjection\Exception\LogicException
- name: ExpressionFunction
  type: class
  source: Symfony\Component\ExpressionLanguage\ExpressionFunction
- name: ExpressionFunctionProviderInterface
  type: class
  source: Symfony\Component\ExpressionLanguage\ExpressionFunctionProviderInterface
properties: []
methods:
- name: __construct
  visibility: public
  parameters:
  - name: serviceCompiler
    default: 'null'
  - name: getEnv
    default: 'null'
  comment: null
- name: getFunctions
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\DependencyInjection\Exception\LogicException
- Symfony\Component\ExpressionLanguage\ExpressionFunction
- Symfony\Component\ExpressionLanguage\ExpressionFunctionProviderInterface
interfaces:
- ExpressionFunctionProviderInterface
