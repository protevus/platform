name: DispatchAfterCurrentBusMiddleware
class_comment: '# * Allow to configure messages to be handled after the current bus
  is finished.

  # *

  # * I.e, messages dispatched from a handler with a DispatchAfterCurrentBus stamp

  # * will actually be handled once the current message being dispatched is fully

  # * handled.

  # *

  # * For instance, using this middleware before the DoctrineTransactionMiddleware

  # * means sub-dispatched messages with a DispatchAfterCurrentBus stamp would be

  # * handled after the Doctrine transaction has been committed.

  # *

  # * @author Tobias Nyholm <tobias.nyholm@gmail.com>'
dependencies:
- name: Envelope
  type: class
  source: Symfony\Component\Messenger\Envelope
- name: DelayedMessageHandlingException
  type: class
  source: Symfony\Component\Messenger\Exception\DelayedMessageHandlingException
- name: DispatchAfterCurrentBusStamp
  type: class
  source: Symfony\Component\Messenger\Stamp\DispatchAfterCurrentBusStamp
properties: []
methods:
- name: handle
  visibility: public
  parameters:
  - name: envelope
  - name: stack
  comment: null
- name: __construct
  visibility: public
  parameters:
  - name: envelope
  - name: stack
  comment: null
- name: getEnvelope
  visibility: public
  parameters: []
  comment: null
- name: getStack
  visibility: public
  parameters: []
  comment: null
traits:
- Symfony\Component\Messenger\Envelope
- Symfony\Component\Messenger\Exception\DelayedMessageHandlingException
- Symfony\Component\Messenger\Stamp\DispatchAfterCurrentBusStamp
interfaces:
- MiddlewareInterface
